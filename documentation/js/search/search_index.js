var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.306,1,2.436]],["body/controllers/AppController.html",[0,2.026,1,3.781,2,1.591,3,0.31,4,0.277,5,0.244,6,3.705,7,0.528,8,1.912,9,5.469,10,1.417,11,0.022,12,0.654,13,4.346,14,5.536,15,3.461,16,5.536,17,2.765,18,5.536,19,3.461,20,6.625,21,4.701,22,6.415,23,4.381,24,5.469,25,3.194,26,4.72,27,5.536,28,1.806,29,1.01,30,0.632,31,0.95,32,2.507,33,1.195,34,3.515,35,3.705,36,4.346,37,0.31,38,0.123,39,1.906,40,1.687,41,2.716,42,4.346,43,3.705,44,2.968,45,1.501,46,4.346,47,0.017,48,0.017]],["title/modules/AppModule.html",[49,1.163,50,2.436]],["body/modules/AppModule.html",[1,4.046,2,1.951,3,0.292,4,0.261,5,0.23,11,0.022,30,0.722,31,0.896,34,3.847,35,3.493,37,0.292,38,0.116,47,0.016,48,0.016,49,1.738,50,4.97,51,1.797,52,2.337,53,3.493,54,3.493,55,3.493,56,4.066,57,2.924,58,4.168,59,4.066,60,4.066,61,4.168,62,2.662,63,1.915,64,2.046,65,4.097,66,2.855,67,3.075,68,4.097,69,4.097,70,4.097,71,4.097,72,4.097,73,1.591,74,4.097,75,4.097,76,4.097]],["title/injectables/AppService.html",[34,2.058,77,1.038]],["body/injectables/AppService.html",[3,0.364,4,0.325,5,0.287,7,0.621,8,2.113,9,5.788,11,0.022,12,0.768,28,1.666,29,1.117,30,0.53,31,1.117,34,3.53,37,0.364,38,0.144,45,1.765,47,0.018,48,0.018,77,1.781,78,2.388,79,4.356,80,5.109,81,4.356,82,5.109,83,5.109,84,5.109,85,5.109,86,5.109,87,3.86,88,5.109]],["title/controllers/AuthController.html",[0,1.306,89,2.436]],["body/controllers/AuthController.html",[0,1.424,2,1.424,3,0.277,4,0.248,5,0.219,7,0.473,8,1.78,10,1.681,11,0.022,12,0.775,28,2.006,29,0.71,30,0.707,31,0.851,32,2.245,33,1.071,37,0.277,38,0.11,39,1.707,40,1.511,45,1.78,47,0.016,48,0.016,89,3.519,90,3.318,91,2.433,92,2.94,93,4.2,94,5.153,95,3.318,96,4.109,97,3.891,98,5.153,99,3.519,100,5.153,101,3.891,102,1.886,103,1.5,104,0.724,105,1.418,106,3.519,107,3.891,108,1.646,109,2.94,110,5.153,111,3.893,112,3.891,113,3.891,114,2.245,115,2.433,116,3.221,117,3.891,118,3.891,119,2.433,120,2.433,121,1.511,122,3.221,123,3.611,124,1.944,125,3.333,126,3.318,127,3.318,128,2.433,129,3.318,130,1.944,131,5.153,132,2.433,133,3.891,134,3.891,135,3.891,136,3.221,137,3.891,138,3.891,139,2.433,140,3.891,141,3.891,142,3.318]],["title/modules/AuthModule.html",[49,1.163,56,2.23]],["body/modules/AuthModule.html",[2,2.032,3,0.311,4,0.278,5,0.246,11,0.022,30,0.715,31,0.954,37,0.311,38,0.123,47,0.017,48,0.017,49,1.811,51,1.915,52,2.435,56,4.435,57,2.974,62,2.773,63,2.041,64,2.181,66,2.974,67,3.203,89,4.17,121,1.695,125,3.912,126,3.722,143,3.722,144,4.366,145,3.722,146,4.239,147,4.366,148,4.366,149,2.729,150,3.722,151,2.729,152,2.729,153,4.366,154,2.729,155,2.729,156,2.181,157,3.722,158,3.722,159,3.299,160,3.722,161,3.722,162,4.366]],["title/injectables/AuthService.html",[77,1.038,125,2.058]],["body/injectables/AuthService.html",[3,0.269,4,0.241,5,0.213,7,0.46,8,1.746,11,0.023,12,0.76,28,1.233,30,0.677,31,0.827,37,0.269,38,0.107,40,1.962,45,1.306,47,0.015,48,0.015,77,1.472,78,1.767,93,3.453,95,4.31,96,4.076,99,2.582,102,1.85,103,1.472,104,0.71,105,1.391,106,3.453,108,1.398,125,2.916,127,3.224,128,2.363,129,3.224,151,2.363,163,3.224,164,2.845,165,2.916,166,2.181,167,2.506,168,5.676,169,3.781,170,2.363,171,3.781,172,2.856,173,3.781,174,3.819,175,4.31,176,3.05,177,3.257,178,2.842,179,3.781,180,2.845,181,2.856,182,3.285,183,2.662,184,4.31,185,5.055,186,3.224,187,3.781,188,3.224,189,5.055,190,3.781,191,3.819,192,1.889,193,3.224,194,1.306,195,3.224,196,2.181,197,2.856,198,3.224,199,3.781,200,2.582]],["title/classes/ChangePasswordDto.html",[38,0.101,201,2.058]],["body/classes/ChangePasswordDto.html",[3,0.278,4,0.248,5,0.219,7,0.474,10,1.683,11,0.022,12,0.776,17,2.889,29,1.168,30,0.6,33,1.073,37,0.368,38,0.163,47,0.016,48,0.016,104,0.725,114,3.336,178,2.703,201,2.977,202,1.202,203,4.369,204,2.663,205,1.502,206,4.369,207,3.325,208,4.002,209,3.9,210,2.946,211,4.369,212,4.369,213,4.492,214,4.369,215,3.325,216,3.615,217,4.369,218,4.369,219,4.369,220,4.369,221,4.369,222,3.098,223,4.369,224,4.369,225,2.877,226,3.9,227,2.877,228,2.438,229,2.946,230,3.297,231,2.946,232,3.95,233,3.899,234,1.823,235,2.089,236,1.272,237,2.663,238,2.25,239,2.089,240,3.325,241,3.899,242,3.899,243,3.899,244,1.889,245,2.946]],["title/classes/CreateResultDto.html",[38,0.101,246,2.058]],["body/classes/CreateResultDto.html",[3,0.245,4,0.219,5,0.194,7,0.419,10,2.119,11,0.022,12,0.977,30,0.492,33,0.948,37,0.245,38,0.134,47,0.014,48,0.014,73,2.666,104,0.913,202,1.061,205,1.382,225,3.28,227,3.095,234,1.61,244,2.378,246,2.738,247,5.645,248,2.603,249,3.394,250,3.836,251,2.691,252,2.691,253,2.868,254,3.394,255,4.048,256,6.498,257,3.28,258,6.621,259,4.746,260,4.746,261,4.42,262,3.445,263,3.657,264,2.937,265,3.657,266,3.445,267,3.241,268,3.445,269,3.445,270,3.445,271,4.746,272,3.445,273,5.002]],["title/classes/CreateSpecialtyDto.html",[38,0.101,274,2.058]],["body/classes/CreateSpecialtyDto.html",[3,0.223,4,0.2,5,0.176,7,0.381,10,2.065,11,0.022,12,0.99,29,1.025,30,0.461,33,0.863,37,0.223,38,0.126,47,0.013,48,0.013,104,0.924,202,0.967,205,1.294,225,3.233,227,3.023,230,2.765,234,1.466,244,2.494,251,2.264,252,2.6,253,2.413,255,3.848,261,3.359,263,4.113,265,2.779,267,3.036,273,4.652,274,2.565,275,5.687,276,2.37,277,2.765,278,3.42,279,3.227,280,3.42,281,2.765,282,3.24,283,3.137,284,3.359,285,2.565,286,4.445,287,4.445,288,4.445,289,4.445,290,4.445,291,4.445,292,4.445,293,4.445,294,3.137,295,5.055,296,5.929,297,6.671,298,3.137,299,4.445,300,4.445,301,4.445,302,4.789,303,4.445,304,4.445,305,4.445,306,4.445,307,4.445,308,3.137,309,4.445,310,3.137,311,3.137,312,4.445,313,3.137,314,3.137,315,3.137,316,5.055]],["title/classes/CreateTestDto.html",[38,0.101,317,2.058]],["body/classes/CreateTestDto.html",[3,0.115,4,0.103,5,0.091,7,0.196,10,1.698,11,0.022,12,0.783,15,1.01,17,3.477,19,1.667,21,4.707,23,4.115,25,2.872,29,1.129,30,0.277,33,0.444,37,0.115,38,0.075,47,0.008,48,0.008,73,1.322,104,0.731,200,3.555,202,0.498,205,0.776,222,0.865,225,2.892,227,2.522,230,2.89,234,0.755,244,1.905,249,2.128,250,2.733,251,1.493,252,1.493,253,1.591,254,2.128,265,1.01,284,1.221,317,1.538,318,2.89,319,4.6,320,1.221,321,2.572,322,4.979,323,3.951,324,3.951,325,5.205,326,4.738,327,2.666,328,2.666,329,4.857,330,2.666,331,2.666,332,2.572,333,2.666,334,2.902,335,2.902,336,4.858,337,3.368,338,2.666,339,2.666,340,2.666,341,2.666,342,1.616,343,2.666,344,3.368,345,2.666,346,2.325,347,1.616,348,3.404,349,2.666,350,3.728,351,2.902,352,2.902,353,3.303,354,2.902,355,1.616,356,2.902,357,2.902,358,3.368,359,2.666,360,3.728,361,4.305,362,3.951,363,1.616,364,2.666,365,2.666,366,2.666,367,2.666,368,2.666,369,2.902,370,1.616,371,2.902,372,3.951,373,2.666,374,2.666,375,2.666,376,2.666,377,2.666,378,1.616,379,2.666,380,3.728,381,1.616,382,2.666,383,2.666,384,2.273,385,3.368,386,3.728,387,1.616,388,1.616,389,5.205,390,1.616,391,4.245,392,3.762,393,3.404,394,5.063,395,2.273,396,1.377,397,2.273,398,1.377,399,1.377,400,1.377,401,1.377,402,1.377,403,2.902,404,2.902,405,2.273,406,2.273,407,2.273,408,1.377,409,1.377,410,1.377,411,1.377,412,1.377,413,2.014,414,2.273,415,1.377,416,1.377,417,2.942,418,2.273,419,2.273,420,2.902,421,1.377,422,2.273,423,1.377,424,1.377,425,1.377,426,1.377,427,1.377,428,1.377,429,1.01,430,3.368,431,1.377,432,1.377,433,1.221,434,1.377,435,1.377,436,2.902,437,1.377,438,4.858,439,1.377,440,1.103,441,2.572,442,1.377,443,1.377,444,2.273,445,1.377,446,2.273,447,1.377,448,1.377,449,1.377,450,2.902,451,2.273,452,1.377,453,1.377,454,2.014,455,1.377,456,1.377,457,1.377,458,1.377,459,1.377,460,1.377,461,2.273,462,1.01,463,3.555,464,1.377,465,1.221,466,1.377,467,1.377,468,1.377,469,1.377,470,2.902,471,2.014,472,3.368,473,1.377,474,1.377,475,1.377,476,1.377,477,1.377,478,1.377,479,2.572,480,1.377,481,1.377,482,1.377,483,1.377,484,1.221,485,1.377,486,1.377,487,1.377,488,1.377,489,2.273,490,1.377,491,1.377,492,1.377,493,1.377,494,3.951,495,1.377,496,2.273,497,2.273,498,1.377,499,1.377,500,1.377,501,2.273,502,1.377,503,1.377,504,1.221,505,1.377,506,1.377,507,1.377,508,1.377,509,1.377,510,1.377,511,1.377,512,1.377,513,1.377,514,1.221,515,1.377,516,3.728,517,3.368,518,1.377,519,1.377,520,1.377,521,2.273,522,1.377,523,1.377,524,2.273,525,2.273,526,1.377,527,1.377,528,1.377,529,1.377,530,1.377,531,2.273,532,1.377,533,1.377,534,1.377,535,2.273,536,1.377,537,1.103,538,1.377,539,1.377,540,1.616,541,1.377,542,1.377,543,1.377,544,1.377,545,1.377,546,1.221,547,1.377,548,1.377,549,1.377,550,1.377,551,1.377,552,1.377,553,1.377,554,1.377,555,2.273,556,2.273,557,1.377,558,1.377,559,1.377,560,1.377]],["title/classes/CreateUserDto.html",[38,0.101,235,1.91]],["body/classes/CreateUserDto.html",[3,0.271,4,0.242,5,0.214,7,0.462,10,1.988,11,0.022,12,0.917,17,2.535,29,1.236,30,0.527,33,1.046,37,0.271,38,0.143,47,0.015,48,0.015,103,1.663,104,0.856,114,2.928,177,3.171,178,2.67,202,1.172,204,2.598,205,1.478,206,4.316,207,3.243,208,3.81,210,2.874,211,3.835,212,3.835,213,4.162,214,3.835,215,3.243,216,4.083,217,3.835,218,3.835,219,3.835,220,3.835,221,3.835,222,2.719,223,3.835,224,3.835,225,3.117,227,2.968,229,2.874,230,3.264,231,2.874,232,4.337,234,1.778,235,2.719,241,2.874,242,2.874,243,2.874,244,2.091,561,5.413,562,3.804,563,3.804,564,4.328,565,3.804,566,5.076,567,3.804,568,4.328,569,3.835,570,3.804,571,3.804,572,4.328,573,3.804,574,3.804]],["title/interfaces/JwtPayload.html",[575,2.436,576,2.436]],["body/interfaces/JwtPayload.html",[3,0.381,4,0.34,5,0.3,7,0.649,11,0.021,29,1.218,37,0.381,47,0.019,48,0.019,104,0.751,105,1.729,194,2.38,205,1.829,575,3.65,576,4.292,577,5.343,578,4.556]],["title/injectables/JwtStrategy.html",[77,1.038,146,2.23]],["body/injectables/JwtStrategy.html",[3,0.3,4,0.268,5,0.237,7,0.513,8,1.876,11,0.022,12,0.817,28,1.376,29,0.77,30,0.658,31,0.922,37,0.3,38,0.119,39,1.85,40,1.637,45,1.457,47,0.016,48,0.016,77,1.581,78,1.971,102,1.988,103,1.581,104,0.891,105,1.494,108,1.557,111,3.186,121,1.637,146,3.395,156,2.107,159,3.186,164,3.001,165,2.433,166,2.433,167,2.615,170,2.538,172,4.103,176,2.259,177,2.713,180,2.107,181,3.186,182,2.433,183,1.971,191,3.186,192,2.107,239,2.259,579,3.596,580,5.431,581,4.218,582,5.431,583,5.431,584,4.218,585,3.596,586,2.636,587,4.218,588,4.218,589,4.218,590,3.596,591,2.636,592,4.218,593,4.218,594,4.218,595,4.218,596,4.218,597,3.596,598,4.218,599,4.218,600,4.218]],["title/classes/LoginDto.html",[38,0.101,96,2.23]],["body/classes/LoginDto.html",[3,0.331,4,0.296,5,0.261,7,0.565,10,1.884,11,0.022,12,0.869,29,1.2,30,0.599,33,1.279,37,0.331,38,0.163,47,0.017,48,0.017,96,3.611,104,0.811,108,1.614,177,3.376,178,3.159,202,1.433,205,1.682,208,3.611,225,3.072,227,2.937,230,3.366,232,4.292,234,2.173,244,2.114,564,4.925,572,4.925,601,3.964,602,4.649,603,4.649,604,4.649,605,4.649]],["title/classes/LoginResponseDto.html",[38,0.101,128,2.23]],["body/classes/LoginResponseDto.html",[3,0.335,4,0.299,5,0.264,7,0.571,10,1.896,11,0.022,12,0.874,29,1.061,30,0.603,33,1.292,37,0.335,38,0.133,47,0.018,48,0.018,93,3.97,99,4.63,104,0.816,108,1.696,111,4.391,124,2.346,128,3.633,156,2.903,196,3.353,202,1.447,205,1.692,225,2.717,227,2.951,244,2.127,606,4.004,607,5.812,608,6.596,609,4.956,610,4.696,611,4.696,612,4.004]],["title/modules/PrismaModule.html",[49,1.163,57,1.564]],["body/modules/PrismaModule.html",[3,0.352,4,0.315,5,0.278,11,0.022,30,0.623,31,1.081,37,0.352,38,0.14,47,0.018,48,0.018,49,1.957,51,2.169,52,2.631,57,3.103,62,2.997,63,2.312,64,2.47,66,3.214,167,3.008,613,4.217,614,4.217,615,4.217,616,4.946,617,6,618,4.946]],["title/injectables/PrismaService.html",[77,1.038,167,1.471]],["body/injectables/PrismaService.html",[3,0.323,4,0.289,5,0.255,7,0.551,8,1.965,11,0.022,12,0.935,28,1.855,30,0.59,31,0.992,37,0.323,38,0.128,47,0.017,48,0.017,77,1.656,78,2.12,102,1.66,103,1.321,104,0.799,105,1.248,164,3.471,167,2.345,180,2.841,205,1.656,239,3.047,619,3.868,620,5.298,621,6.214,622,5.688,623,6.848,624,5.688,625,6.516,626,4.536,627,4.536,628,4.536,629,4.536,630,2.617,631,4.536,632,4.536,633,4.536,634,4.536]],["title/classes/Result.html",[38,0.101,257,1.667]],["body/classes/Result.html",[3,0.294,4,0.263,5,0.232,7,0.502,11,0.022,12,1.065,29,1.259,37,0.294,38,0.117,47,0.016,48,0.016,104,0.995,105,1.978,194,2.055,202,1.274,205,1.561,251,2.609,252,2.609,253,2.781,255,4.056,257,2.506,277,3.187,278,3.432,280,3.432,281,3.187,282,3.632,635,3.524,636,5.073,637,5.073,638,5.949,639,4.133,640,4.133,641,4.133,642,4.133,643,4.133,644,4.133,645,4.133,646,4.133,647,4.133,648,4.133,649,4.133]],["title/controllers/ResultController.html",[0,1.306,650,2.436]],["body/controllers/ResultController.html",[0,1.17,2,1.17,3,0.228,4,0.203,5,0.18,7,0.389,8,1.556,10,1.947,11,0.022,12,0.898,28,1.947,29,1.206,30,0.674,31,0.699,32,1.844,33,0.879,37,0.228,38,0.09,39,1.402,40,1.241,41,1.998,45,2.062,47,0.017,48,0.014,73,2.405,91,1.998,102,2.185,103,1.738,104,0.839,105,1.642,108,1.662,109,2.415,115,3.261,116,2.816,119,1.998,120,1.998,121,1.241,122,2.816,123,3.732,124,1.597,130,1.597,132,1.998,136,3.54,139,1.998,192,1.597,194,2.245,196,2.599,236,1.847,246,3.267,257,2.791,650,3.077,651,2.725,652,2.25,653,2.599,654,2.105,655,2.105,656,2.725,657,3.246,658,2.725,659,3.197,660,1.597,661,3.077,662,3.197,663,2.183,664,2.725,665,3.841,666,3.197,667,1.844,668,3.403,669,3.197,670,1.844,671,3.54,672,2.415,673,3.403,674,4.505,675,3.197,676,2.183,677,3.009,678,2.725,679,1.597,680,3.403,681,1.597,682,1.844,683,3.197,684,3.197,685,3.197,686,3.197,687,2.183,688,3.197,689,2.725,690,2.725,691,3.197,692,2.415,693,2.725,694,3.197,695,2.415,696,3.197]],["title/modules/ResultModule.html",[49,1.163,58,2.23]],["body/modules/ResultModule.html",[2,2.118,3,0.332,4,0.297,5,0.262,11,0.022,30,0.702,31,1.019,37,0.332,38,0.132,47,0.017,48,0.017,49,1.887,51,2.044,52,2.537,57,3.023,58,4.415,62,2.89,63,2.179,64,2.328,66,3.099,67,3.338,121,1.81,149,2.914,152,2.914,154,2.914,155,2.914,156,2.328,650,4.297,677,3.977,678,3.974,697,3.974,698,3.974,699,4.661,700,4.661,701,4.661]],["title/injectables/ResultService.html",[77,1.038,677,2.058]],["body/injectables/ResultService.html",[3,0.217,4,0.194,5,0.171,7,0.37,8,1.503,11,0.023,12,0.917,28,1.912,29,1.145,30,0.666,31,0.666,37,0.217,38,0.086,39,1.335,40,1.182,45,1.052,47,0.013,48,0.013,77,1.267,78,1.423,102,2.231,103,1.775,104,0.856,105,1.677,108,1.576,124,1.521,164,3.263,165,1.757,166,1.757,167,2.285,170,2.374,176,3.629,180,1.521,182,1.757,183,1.423,194,1.754,200,2.08,236,1.419,246,3.197,251,1.908,252,1.908,253,2.034,257,1.423,261,2.301,263,1.903,267,2.08,278,3.197,279,2.72,280,3.197,586,3.464,591,1.903,630,1.757,652,2.174,653,2.511,654,2.034,655,2.034,656,3.71,657,2.928,660,1.521,663,2.08,667,1.757,670,1.757,671,3.175,677,2.511,679,1.521,680,3.288,681,1.521,702,2.596,703,3.045,704,3.045,705,3.045,706,3.045,707,3.045,708,3.045,709,2.301,710,1.631,711,2.08,712,1.521,713,2.08,714,2.596,715,2.596,716,2.596,717,2.596,718,3.045,719,3.71,720,3.71,721,3.71,722,3.045,723,3.045,724,3.045,725,3.045,726,2.08,727,2.596,728,2.596,729,3.045,730,3.045,731,3.045,732,3.045,733,3.045,734,3.045,735,3.045,736,3.045,737,3.045,738,4.352,739,3.045,740,3.045,741,3.045,742,3.045,743,3.045,744,3.045,745,3.045,746,3.045,747,3.045]],["title/controllers/SpecialtiesController.html",[0,1.306,748,2.436]],["body/controllers/SpecialtiesController.html",[0,1.107,2,1.107,3,0.215,4,0.193,5,0.17,7,0.368,8,1.496,10,1.907,11,0.022,12,0.879,28,1.907,29,1.19,30,0.665,31,0.661,32,1.745,33,0.832,37,0.215,38,0.085,39,1.327,40,1.174,41,1.891,45,2.019,47,0.013,48,0.013,91,1.891,102,2.14,103,1.702,104,0.821,105,1.608,108,1.792,109,2.286,115,2.708,116,2.708,119,1.891,120,1.891,121,1.174,122,2.708,123,3.803,124,1.511,130,2.92,132,1.891,136,3.655,139,1.891,192,2.528,194,2.213,236,1.802,274,3.187,285,3.818,652,2.164,653,2.499,654,2.025,655,2.733,657,3.039,658,2.579,660,1.511,661,2.959,663,2.066,664,2.579,665,3.693,667,1.745,668,2.286,670,1.745,672,2.286,673,3.273,676,2.066,679,1.511,681,1.511,682,1.745,687,2.066,689,2.579,690,2.579,692,2.286,695,2.286,748,2.959,749,2.579,750,1.891,751,3.025,752,2.959,753,3.025,754,3.693,755,4.332,756,3.025,757,2.579,758,3.025,759,3.454,760,3.693,761,3.025,762,2.499,763,2.579,764,3.273,765,3.025,766,3.025,767,2.286,768,3.025,769,3.025,770,3.025,771,2.579,772,3.025,773,3.025]],["title/modules/SpecialtiesModule.html",[49,1.163,59,2.23]],["body/modules/SpecialtiesModule.html",[2,2.118,3,0.332,4,0.297,5,0.262,11,0.022,30,0.702,31,1.019,37,0.332,38,0.132,47,0.017,48,0.017,49,1.887,51,2.044,52,2.537,57,3.023,59,4.415,62,2.89,63,2.179,64,2.328,66,3.099,67,3.338,121,1.81,149,2.914,152,2.914,154,2.914,155,2.914,156,2.328,748,4.297,762,3.977,763,3.974,774,3.974,775,3.974,776,4.661,777,4.661,778,4.661]],["title/injectables/SpecialtiesService.html",[77,1.038,762,2.058]],["body/injectables/SpecialtiesService.html",[3,0.213,4,0.19,5,0.168,7,0.363,8,1.482,11,0.022,12,0.911,28,1.897,29,1.187,30,0.675,31,0.653,37,0.213,38,0.084,39,1.31,40,1.159,45,2.009,47,0.013,48,0.013,77,1.249,78,1.396,102,2.217,103,1.763,104,0.851,105,1.666,108,1.782,114,1.723,124,1.492,142,2.546,164,3.451,165,1.723,166,1.723,167,2.264,170,2.348,176,2.299,180,2.906,182,2.476,183,2.006,194,2.092,196,3.168,236,1.4,274,3.168,285,2.476,429,2.683,586,3.637,591,1.867,630,1.723,652,2.144,653,2.476,654,2.006,655,2.348,657,3.025,660,2.144,663,2.931,667,2.476,670,2.476,679,1.492,681,1.492,710,1.6,711,2.04,712,1.492,713,2.04,750,2.683,759,3.433,762,2.476,764,3.243,779,2.546,780,2.986,781,2.986,782,2.986,783,2.986,784,2.986,785,2.986,786,2.546,787,2.986,788,3.431,789,2.546,790,2.986,791,4.149,792,3.659,793,2.931,794,3.659,795,2.986,796,4.292,797,2.546,798,2.986,799,2.986,800,2.986]],["title/classes/Specialty.html",[38,0.101,285,2.058]],["body/classes/Specialty.html",[3,0.306,4,0.273,5,0.242,7,0.522,11,0.022,12,1.064,29,1.232,37,0.306,38,0.121,47,0.017,48,0.017,104,0.994,105,1.858,194,2.093,202,1.323,205,1.6,244,2.218,251,2.657,252,2.657,253,2.832,255,4.082,277,3.245,278,3.496,279,3.788,280,3.496,281,3.245,282,3.685,285,3.17,801,3.662,802,4.295,803,4.295,804,4.295,805,4.295,806,4.295,807,4.295,808,4.295,809,4.295,810,4.295,811,4.295]],["title/classes/Test.html",[38,0.101,73,1.385]],["body/classes/Test.html",[3,0.3,4,0.268,5,0.237,7,0.513,11,0.022,12,1.068,29,1.277,37,0.3,38,0.119,47,0.016,48,0.016,73,2.463,104,0.998,105,1.745,194,1.876,202,1.299,205,1.581,249,3.395,250,3.395,251,2.382,252,2.382,253,2.538,254,3.395,277,2.909,281,2.909,282,3.133,318,3.826,321,4.103,812,3.596,813,4.218,814,4.218,815,4.218,816,4.218,817,4.218,818,4.218,819,4.218,820,4.218,821,4.218,822,4.218,823,4.218,824,4.218,825,4.218,826,4.218,827,4.218,828,4.218,829,4.218,830,4.218,831,4.218,832,4.218,833,4.218,834,4.218]],["title/controllers/TestController.html",[0,1.306,835,2.436]],["body/controllers/TestController.html",[0,1.229,2,1.229,3,0.239,4,0.214,5,0.189,7,0.408,8,1.61,10,1.887,11,0.022,12,0.87,28,1.887,29,1.11,30,0.683,31,0.734,32,1.937,33,0.924,37,0.239,38,0.095,39,1.473,40,1.304,41,2.099,45,1.999,47,0.014,48,0.014,73,2.505,91,2.099,102,2.118,103,1.685,104,0.813,105,1.592,108,1.734,115,2.915,116,2.099,119,2.099,120,2.099,121,1.304,122,2.915,123,2.915,124,1.677,130,1.677,132,2.099,136,2.099,139,2.099,192,2.675,194,1.85,236,1.887,317,3.09,318,3.256,612,4.934,652,2.329,654,2.179,655,2.179,657,3.037,660,1.677,661,3.185,667,1.937,668,2.537,670,1.937,672,2.537,676,2.294,679,1.677,681,1.677,682,1.937,687,2.294,692,2.537,693,2.863,695,2.537,750,2.099,757,2.863,767,2.537,835,3.185,836,2.863,837,2.863,838,3.975,839,3.358,840,3.358,841,3.523,842,3.358,843,3.358,844,3.348,845,3.975,846,4.663,847,3.358,848,3.09,849,2.863,850,3.523,851,3.358,852,3.358,853,2.863,854,3.358,855,3.358,856,3.358,857,5.356,858,3.358,859,3.358,860,3.358,861,3.358,862,3.358]],["title/modules/TestModule.html",[49,1.163,60,2.23]],["body/modules/TestModule.html",[2,2.114,3,0.331,4,0.296,5,0.261,11,0.022,30,0.701,31,1.016,37,0.331,38,0.131,47,0.017,48,0.017,49,1.884,51,2.039,52,2.533,57,3.021,60,4.413,62,2.885,63,2.173,64,2.322,66,3.094,67,3.332,121,1.805,149,2.906,152,2.906,154,2.906,155,2.906,156,2.322,318,2.49,835,4.292,848,3.975,849,3.964,863,3.964,864,4.649,865,3.964,866,4.649,867,4.649]],["title/injectables/TestService.html",[77,1.038,848,2.058]],["body/injectables/TestService.html",[3,0.201,4,0.179,5,0.159,7,0.343,8,1.422,11,0.022,12,0.855,25,1.626,28,1.744,29,1.084,30,0.652,31,0.616,37,0.201,38,0.08,39,1.236,40,1.094,45,1.679,47,0.012,48,0.012,73,2.076,77,1.198,78,1.318,102,2.081,103,1.655,104,0.799,105,1.564,108,1.748,124,1.408,164,3.335,165,1.626,166,1.626,167,2.204,170,2.273,176,2.205,180,2.056,182,3.084,183,2.499,194,2.171,196,3.084,236,1.586,249,3.039,250,3.342,251,2.344,252,2.344,253,2.499,254,3.342,277,1.51,281,1.51,317,3.084,318,3.18,392,5.173,429,1.762,440,1.925,586,3.039,591,1.762,630,1.626,652,2.056,654,1.924,655,2.273,657,2.67,660,2.056,667,2.375,670,2.375,679,1.408,681,1.408,709,2.13,710,1.51,711,1.925,712,1.408,713,1.925,714,3.51,715,3.51,716,3.51,717,3.51,719,3.51,720,3.51,721,3.51,750,2.573,786,2.404,788,3.321,791,3.11,792,2.404,793,3.321,794,2.404,844,3.342,848,2.375,850,3.11,868,2.404,869,2.819,870,2.819,871,2.819,872,2.819,873,2.819,874,2.404,875,2.404,876,4.116,877,3.51,878,2.819,879,4.116,880,3.51,881,2.819,882,2.819,883,2.819,884,2.404,885,2.404]],["title/classes/UpdateResultDto.html",[38,0.101,671,2.23]],["body/classes/UpdateResultDto.html",[3,0.269,4,0.241,5,0.213,7,0.46,10,1.983,11,0.022,12,0.914,29,1.11,30,0.591,33,1.04,37,0.269,38,0.143,47,0.015,48,0.015,73,2.36,104,0.854,202,1.165,205,1.472,216,3.8,222,2.708,225,3.162,227,2.962,228,2.363,230,3.05,233,4.302,234,1.767,236,1.233,239,2.025,244,2.225,246,2.181,248,2.856,251,2.666,255,3.507,257,2.842,263,3.16,264,3.224,265,3.8,273,4.302,278,3.285,280,3.285,284,3.819,295,4.31,302,4.31,316,4.31,417,3.8,463,3.453,636,4.855,637,4.855,671,3.16,680,2.856,793,3.453,886,5.402,887,5.055,888,3.781,889,6.079,890,5.055,891,5.055,892,5.055,893,3.781,894,5.055,895,3.781,896,3.781]],["title/classes/UpdateSpecialtyDto.html",[38,0.101,759,2.23]],["body/classes/UpdateSpecialtyDto.html",[3,0.382,4,0.341,5,0.301,11,0.022,30,0.653,33,1.474,37,0.382,38,0.151,47,0.019,48,0.019,202,1.651,228,3.35,236,1.748,239,2.87,274,3.091,276,4.049,759,3.934,764,4.049,897,4.569,898,5.359]],["title/classes/UpdateTestDto.html",[38,0.101,844,2.23]],["body/classes/UpdateTestDto.html",[3,0.381,4,0.34,5,0.3,11,0.022,30,0.652,33,1.47,37,0.381,38,0.151,47,0.019,48,0.019,202,1.646,228,3.34,236,1.743,239,2.862,317,3.083,318,2.862,320,4.037,844,3.928,850,4.037,899,4.556,900,5.343]],["title/classes/UpdateUserDto.html",[38,0.101,238,2.058]],["body/classes/UpdateUserDto.html",[3,0.285,4,0.255,5,0.225,7,0.486,10,1.305,11,0.022,12,0.602,17,2.925,29,1.135,30,0.608,33,1.1,37,0.374,38,0.165,47,0.016,48,0.016,104,0.562,114,3.378,178,1.87,201,2.308,202,1.232,203,3.964,204,2.732,205,1.528,206,3.022,208,3.886,210,3.022,211,4.424,212,4.424,213,4.524,214,4.424,216,3.661,217,4.424,218,4.424,219,4.424,220,4.424,221,4.424,222,3.137,223,4.424,224,4.424,225,2.906,227,2.906,228,2.5,229,3.022,230,3.33,231,3.022,232,4,233,3.964,234,1.87,235,2.143,236,1.305,237,2.732,238,3.027,239,2.143,240,3.411,241,3.964,242,3.964,243,3.964,244,1.921,245,4.424,901,4,902,4]],["title/classes/User.html",[38,0.101,108,0.876]],["body/classes/User.html",[3,0.296,4,0.264,5,0.233,7,0.505,11,0.022,12,1.066,29,1.313,37,0.296,38,0.117,47,0.016,48,0.016,103,1.736,104,0.995,105,1.961,108,1.32,177,2.978,178,2.787,194,2.059,202,1.279,205,1.565,277,3.193,281,3.193,282,3.638,346,4.072,712,2.978,903,3.54,904,5.083,905,5.083,906,5.083,907,4.152,908,4.152,909,4.152,910,4.152,911,6.306,912,4.152,913,4.152,914,4.152,915,4.152,916,4.152,917,4.152,918,4.152]],["title/controllers/UserController.html",[0,1.306,919,2.436]],["body/controllers/UserController.html",[0,0.863,2,0.863,3,0.168,4,0.15,5,0.246,7,0.287,8,1.244,10,1.992,11,0.022,12,0.919,15,2.252,28,1.992,29,1.258,30,0.634,31,0.516,32,1.361,33,0.649,37,0.168,38,0.067,39,1.034,40,0.916,41,1.474,44,1.611,45,2.059,47,0.011,48,0.011,91,1.474,102,2.236,103,1.779,104,0.837,105,1.681,106,3.795,108,1.773,115,2.732,116,1.474,119,1.474,120,1.474,121,0.916,122,3.473,123,3.896,130,2.444,132,1.474,136,3.819,139,3.295,177,3.211,178,2.287,192,2.183,194,1.919,197,3.697,201,2.823,216,1.474,235,2.976,236,1.596,237,2.461,238,3.439,652,1.799,653,2.078,654,1.684,655,2.043,657,2.444,660,1.178,661,2.461,673,2.722,676,1.611,679,1.178,681,1.178,682,1.361,687,1.611,760,3.072,767,1.782,771,2.011,837,2.011,853,2.011,919,2.461,920,2.011,921,3.727,922,3.072,923,3.602,924,3.072,925,2.011,926,2.358,927,3.602,928,2.358,929,2.358,930,2.358,931,2.358,932,2.722,933,2.358,934,2.011,935,2.358,936,3.602,937,2.358,938,2.011,939,2.358,940,3.602,941,2.358,942,2.011,943,2.358,944,3.602,945,2.358,946,2.011,947,2.358,948,3.602,949,2.358,950,2.358,951,2.358,952,3.602,953,3.602,954,3.602,955,3.602,956,2.358,957,2.358,958,2.358,959,2.011,960,2.358,961,3.072,962,2.358,963,2.358,964,2.358,965,2.522,966,2.011,967,2.011,968,2.358,969,1.782,970,2.358,971,2.358,972,2.358,973,2.358,974,2.358,975,2.358,976,2.358,977,2.358,978,2.358,979,2.358,980,2.358,981,2.358,982,2.358,983,2.358,984,2.358,985,2.358,986,2.358,987,2.358,988,2.358,989,2.358,990,2.358,991,2.358,992,2.358,993,2.358,994,2.358,995,2.358]],["title/modules/UserModule.html",[49,1.163,61,2.23]],["body/modules/UserModule.html",[2,2.044,3,0.314,4,0.28,5,0.248,11,0.022,30,0.717,31,0.964,37,0.314,38,0.124,44,3.01,47,0.017,48,0.017,49,1.822,51,1.933,52,2.45,57,2.981,61,4.368,62,2.79,63,2.06,64,2.201,66,2.992,67,3.222,121,1.711,149,2.755,150,3.758,151,2.755,152,2.755,154,2.755,155,2.755,156,2.201,157,3.758,158,3.758,159,3.33,160,3.758,161,3.758,919,4.188,965,3.922,966,3.758,969,3.33,996,3.758,997,4.407,998,3.758,999,4.407,1000,4.407,1001,4.407,1002,4.407,1003,4.407]],["title/injectables/UserService.html",[77,1.038,965,2.058]],["body/injectables/UserService.html",[3,0.243,4,0.082,5,0.072,7,0.156,8,0.761,11,0.023,12,0.768,25,0.743,26,1.097,28,1.607,29,1.127,30,0.574,31,0.281,37,0.092,38,0.036,40,0.855,45,1.867,47,0.01,48,0.007,63,0.602,77,0.641,78,0.602,92,2.181,93,0.879,99,2.86,102,1.87,103,1.743,104,0.718,105,1.406,106,2.334,108,1.629,114,0.743,151,0.805,164,3.239,165,1.271,166,0.743,167,1.409,168,3.816,170,1.349,172,2.181,174,1.664,175,1.878,176,3.412,177,3.272,178,2.388,180,2.7,181,2.582,182,3.563,183,2.887,184,2.461,186,1.097,188,1.878,192,1.707,193,1.097,194,2.068,195,1.878,196,3.19,197,3.164,198,1.097,201,1.972,213,1.504,235,2.398,236,1.115,237,1.504,238,2.843,245,1.664,267,1.972,277,1.831,281,1.546,337,2.914,346,1.504,392,5.156,394,1.664,417,1.377,440,0.879,546,1.664,576,1.972,585,1.097,586,2.618,591,0.805,597,3.275,630,0.743,652,1.1,653,1.271,654,1.029,655,1.957,657,1.919,660,1.1,679,0.643,681,0.643,709,0.972,710,0.689,711,0.879,712,2.092,713,0.879,726,0.879,727,1.097,728,1.097,750,1.377,788,1.504,791,3.382,793,3.366,797,1.097,874,1.097,877,3.816,880,1.878,884,1.097,885,1.097,904,1.097,905,1.878,906,1.878,921,2.461,922,1.878,924,1.878,925,1.097,934,1.878,938,1.878,942,1.878,946,1.878,959,1.878,961,1.097,965,1.271,967,1.097,1004,1.097,1005,2.203,1006,1.287,1007,1.287,1008,1.287,1009,2.203,1010,1.287,1011,1.287,1012,1.287,1013,1.287,1014,1.287,1015,1.287,1016,1.287,1017,2.203,1018,1.287,1019,1.878,1020,1.287,1021,1.878,1022,1.097,1023,3.418,1024,4.188,1025,2.887,1026,3.418,1027,3.418,1028,3.418,1029,1.878,1030,2.203,1031,2.203,1032,2.887,1033,4.476,1034,2.203,1035,2.887,1036,2.887,1037,2.887,1038,2.887,1039,2.887,1040,2.887,1041,2.181,1042,2.887,1043,2.887,1044,2.887,1045,2.887,1046,2.887,1047,2.887,1048,2.887,1049,3.842,1050,2.461,1051,2.887,1052,2.887,1053,2.203,1054,2.887,1055,2.461,1056,4.188,1057,2.887,1058,2.887,1059,1.287,1060,1.287,1061,2.203,1062,1.287,1063,1.287,1064,1.287,1065,2.887,1066,1.287,1067,2.203,1068,1.287,1069,2.203,1070,1.287,1071,1.287,1072,1.287,1073,1.287,1074,1.287,1075,1.287,1076,1.287,1077,1.287,1078,1.287,1079,1.287,1080,1.287,1081,2.203,1082,2.203,1083,1.287,1084,1.287,1085,2.203,1086,1.287,1087,1.287,1088,2.203,1089,1.287,1090,1.287,1091,1.287,1092,2.203,1093,1.287,1094,1.287,1095,2.203,1096,1.287,1097,1.287,1098,1.287,1099,1.097,1100,2.203,1101,1.287,1102,1.287,1103,2.203,1104,1.097,1105,2.203,1106,2.203,1107,1.287,1108,1.287,1109,1.287,1110,1.287,1111,2.887,1112,1.287,1113,2.203,1114,2.203,1115,2.203,1116,2.203,1117,2.203,1118,2.887,1119,1.287,1120,1.287,1121,1.287,1122,1.287,1123,1.287,1124,1.287,1125,2.203,1126,1.287,1127,1.287,1128,1.287,1129,1.287,1130,1.287]],["title/coverage.html",[1131,4.144]],["body/coverage.html",[0,2.236,1,2.093,5,0.172,6,2.613,11,0.022,34,1.768,38,0.196,47,0.013,48,0.013,73,2.158,77,1.872,79,2.613,89,2.093,90,2.613,96,1.916,104,0.431,108,1.073,125,1.768,128,1.916,130,1.531,146,1.916,163,2.613,167,1.264,170,1.433,183,1.433,201,1.768,203,3.303,204,3.481,235,1.642,238,1.768,246,1.768,247,2.613,248,3.303,257,1.433,274,1.768,275,2.613,276,3.303,285,1.768,317,1.768,318,3.147,319,2.613,320,3.303,537,2.093,561,2.613,575,2.093,576,2.093,578,2.613,579,2.613,601,2.613,606,2.613,619,2.613,635,2.613,650,2.093,651,2.613,671,1.916,677,1.768,682,1.768,702,2.613,710,1.642,712,1.531,726,5.025,748,2.093,749,2.613,752,2.093,759,1.916,762,1.768,779,2.613,801,2.613,812,2.613,835,2.093,836,2.613,841,2.316,844,1.916,848,1.768,868,2.613,886,2.613,897,2.613,899,2.613,903,2.613,919,2.093,920,2.613,932,2.316,965,1.768,1004,2.613,1055,4.346,1131,2.613,1132,3.065,1133,3.065,1134,3.065,1135,3.065,1136,6.892,1137,5.097,1138,5.097,1139,5.097,1140,3.065,1141,5.097,1142,6.11,1143,2.613,1144,6.543,1145,2.613,1146,2.613,1147,3.065,1148,3.728,1149,2.613,1150,3.728,1151,3.728,1152,3.728,1153,3.728,1154,3.728,1155,3.728,1156,2.613,1157,3.065,1158,4.372,1159,4.372,1160,4.372,1161,2.613,1162,2.613,1163,3.065,1164,3.065]],["title/dependencies.html",[52,1.88,1165,2.543]],["body/dependencies.html",[11,0.022,31,1.042,33,1.312,38,0.166,44,4.008,47,0.018,48,0.018,52,2.091,87,3.603,121,1.851,151,2.981,156,2.382,174,3.603,234,2.229,590,5.419,630,2.751,969,3.603,1019,4.066,1021,4.066,1022,4.066,1166,6.809,1167,4.769,1168,4.769,1169,4.769,1170,4.769,1171,4.769,1172,4.769,1173,4.769,1174,4.769,1175,4.769,1176,4.769,1177,4.769,1178,4.769,1179,4.769,1180,4.769,1181,4.769,1182,4.769,1183,4.769,1184,4.769,1185,4.769,1186,4.769,1187,4.769,1188,4.769]],["title/miscellaneous/functions.html",[1189,1.864,1190,3.656]],["body/miscellaneous/functions.html",[7,0.628,11,0.021,28,1.685,47,0.019,48,0.019,102,2.254,103,1.793,104,0.865,105,1.694,108,1.615,200,3.528,710,3.299,712,3.076,788,3.528,1099,5.61,1145,4.404,1146,5.61,1161,4.404,1162,4.404,1189,3.229,1190,4.404,1191,5.165,1192,5.165,1193,5.165,1194,5.165]],["title/index.html",[7,0.362,1195,2.037,1196,2.037]],["body/index.html",[11,0.021,15,2.373,17,1.896,19,2.373,21,3.897,23,3.462,24,3.237,25,2.19,47,0.015,48,0.015,81,3.237,222,2.033,257,1.774,329,3.83,332,3.83,353,2.868,384,3.237,413,2.868,417,3.567,429,2.373,433,2.868,441,2.868,454,2.868,462,2.373,463,4.334,465,3.83,479,2.868,504,2.868,514,2.868,569,3.83,1195,2.593,1196,2.593,1197,3.237,1198,3.237,1199,6.345,1200,3.796,1201,3.796,1202,5.069,1203,3.796,1204,3.796,1205,3.796,1206,3.796,1207,3.796,1208,3.796,1209,3.796,1210,3.796,1211,3.796,1212,3.237,1213,5.069,1214,3.796,1215,5.069,1216,5.069,1217,6.345,1218,3.796,1219,3.796,1220,3.796,1221,3.796,1222,3.237,1223,3.237,1224,3.796,1225,5.706,1226,3.796,1227,3.796,1228,3.796,1229,3.796,1230,5.069,1231,5.069,1232,6.527,1233,3.796,1234,5.069,1235,4.322,1236,3.796,1237,3.796,1238,3.796,1239,3.796,1240,3.796,1241,3.237,1242,3.237,1243,3.796,1244,3.796,1245,3.796,1246,3.237,1247,3.796,1248,3.796,1249,3.796,1250,3.796,1251,3.796,1252,3.796,1253,3.796,1254,3.796,1255,3.796,1256,3.796,1257,3.796,1258,3.796,1259,3.796,1260,3.796,1261,3.796,1262,3.796,1263,3.796,1264,3.796,1265,3.796,1266,3.796,1267,3.796,1268,3.796,1269,3.796,1270,3.237,1271,3.796,1272,3.796,1273,3.796,1274,3.237,1275,3.796,1276,3.796,1277,3.796,1278,5.069,1279,3.796,1280,3.796,1281,3.237,1282,3.237,1283,2.593,1284,2.868,1285,3.237,1286,3.796,1287,3.796,1288,3.796,1289,3.796]],["title/license.html",[1195,2.037,1196,2.037,1283,2.037]],["body/license.html",[4,0.374,5,0.232,11,0.02,12,0.166,30,0.2,47,0.008,48,0.006,103,0.321,108,0.271,183,1.633,236,1.139,244,0.705,252,0.484,255,0.636,257,0.901,263,0.689,279,0.689,282,1.112,361,1.456,391,3.274,537,0.753,609,0.94,654,0.901,754,0.94,838,0.94,845,2.623,1041,0.833,1050,1.643,1189,0.689,1197,0.94,1198,0.94,1212,1.643,1223,0.94,1235,2.623,1241,0.94,1242,0.94,1281,2.623,1282,3.274,1283,4.779,1284,4.274,1285,2.623,1290,1.103,1291,1.927,1292,6.495,1293,5.739,1294,1.927,1295,3.076,1296,3.84,1297,1.103,1298,1.103,1299,1.103,1300,1.103,1301,6.549,1302,6.598,1303,1.103,1304,2.566,1305,4.384,1306,1.103,1307,1.927,1308,3.84,1309,1.103,1310,3.493,1311,1.103,1312,1.103,1313,5.949,1314,6.333,1315,2.566,1316,2.566,1317,4.958,1318,3.493,1319,4.133,1320,6.435,1321,3.84,1322,1.103,1323,4.133,1324,1.103,1325,1.103,1326,1.103,1327,3.84,1328,5.107,1329,5.24,1330,2.566,1331,4.958,1332,3.076,1333,2.566,1334,6.522,1335,5.884,1336,1.103,1337,1.103,1338,4.958,1339,1.103,1340,3.84,1341,1.103,1342,1.103,1343,1.103,1344,1.103,1345,1.103,1346,1.103,1347,1.103,1348,2.566,1349,1.927,1350,1.927,1351,3.84,1352,1.927,1353,3.84,1354,2.566,1355,2.566,1356,1.103,1357,5.36,1358,1.927,1359,1.103,1360,1.103,1361,1.103,1362,1.103,1363,1.103,1364,1.103,1365,1.103,1366,4.791,1367,4.384,1368,1.103,1369,3.493,1370,4.384,1371,1.103,1372,1.103,1373,1.927,1374,1.927,1375,1.103,1376,1.103,1377,1.103,1378,1.927,1379,1.927,1380,1.103,1381,2.566,1382,2.566,1383,1.103,1384,3.493,1385,1.103,1386,1.103,1387,1.103,1388,3.84,1389,1.103,1390,1.103,1391,1.103,1392,1.103,1393,1.103,1394,1.103,1395,1.103,1396,1.103,1397,1.103,1398,1.103,1399,1.927,1400,1.103,1401,1.103,1402,1.103,1403,1.927,1404,1.927,1405,1.103,1406,1.103,1407,1.103,1408,2.566,1409,3.076,1410,2.566,1411,1.103,1412,1.103,1413,1.103,1414,1.103,1415,1.103,1416,3.84,1417,2.566,1418,1.927,1419,1.103,1420,1.103,1421,1.103,1422,1.927,1423,3.493,1424,1.103,1425,1.103,1426,1.103,1427,1.103,1428,3.84,1429,1.103,1430,1.927,1431,1.103,1432,1.103,1433,4.601,1434,1.103,1435,1.103,1436,3.076,1437,2.566,1438,1.103,1439,2.566,1440,1.103,1441,1.927,1442,4.601,1443,4.958,1444,2.566,1445,2.566,1446,1.927,1447,1.103,1448,3.076,1449,1.103,1450,3.493,1451,1.927,1452,3.84,1453,1.103,1454,1.103,1455,1.103,1456,2.566,1457,1.103,1458,1.103,1459,1.103,1460,1.103,1461,2.566,1462,1.103,1463,4.133,1464,1.103,1465,1.103,1466,1.103,1467,1.103,1468,1.103,1469,2.566,1470,3.84,1471,1.927,1472,2.566,1473,1.103,1474,2.566,1475,1.103,1476,1.927,1477,1.927,1478,1.927,1479,2.566,1480,1.103,1481,1.103,1482,1.927,1483,1.103,1484,1.103,1485,1.103,1486,1.103,1487,1.103,1488,2.566,1489,1.103,1490,1.927,1491,1.927,1492,2.566,1493,1.103,1494,1.103,1495,1.103,1496,1.103,1497,1.927,1498,2.566,1499,1.927,1500,1.103,1501,1.103,1502,1.927,1503,3.493,1504,3.076,1505,2.566,1506,2.566,1507,1.927,1508,3.076,1509,1.103,1510,2.566,1511,1.103,1512,1.103,1513,1.927,1514,1.927,1515,3.076,1516,1.103,1517,1.103,1518,3.076,1519,3.076,1520,1.103,1521,1.103,1522,1.927,1523,1.103,1524,1.103,1525,3.84,1526,1.103,1527,1.927,1528,4.384,1529,4.601,1530,1.103,1531,1.103,1532,1.103,1533,1.103,1534,1.103,1535,1.103,1536,1.103,1537,1.103,1538,1.103,1539,1.927,1540,1.103,1541,2.188,1542,2.566,1543,1.103,1544,1.927,1545,1.103,1546,1.103,1547,1.103,1548,1.103,1549,1.103,1550,1.103,1551,1.103,1552,1.103,1553,1.927,1554,2.566,1555,1.103,1556,1.927,1557,2.566,1558,3.076,1559,1.103,1560,1.103,1561,1.103,1562,1.103,1563,1.103,1564,1.103,1565,1.103,1566,1.103,1567,1.103,1568,1.103,1569,1.103,1570,1.103,1571,1.103,1572,1.103,1573,1.103,1574,3.076,1575,1.927,1576,1.927,1577,1.103,1578,1.927,1579,1.927,1580,1.103,1581,1.103,1582,1.103,1583,1.103,1584,1.103,1585,1.103,1586,1.927,1587,1.103,1588,1.103,1589,3.076,1590,2.566,1591,1.103,1592,1.927,1593,1.103,1594,1.103,1595,1.103,1596,1.927,1597,1.103,1598,1.103,1599,1.927,1600,1.103,1601,3.076,1602,2.566,1603,1.103,1604,1.103,1605,1.103,1606,1.927,1607,1.103,1608,1.103,1609,1.103,1610,1.927,1611,1.927,1612,1.103,1613,1.103,1614,1.103,1615,1.103,1616,1.103,1617,4.791,1618,1.103,1619,1.103,1620,1.103,1621,1.927,1622,1.103,1623,1.103,1624,1.103,1625,2.566,1626,1.103,1627,1.103,1628,1.103,1629,1.103,1630,1.103,1631,1.103,1632,1.103,1633,1.103,1634,1.103,1635,1.103,1636,1.103,1637,1.103,1638,1.103,1639,1.103,1640,1.103,1641,1.103,1642,1.103,1643,1.103,1644,1.103,1645,1.103,1646,1.103,1647,1.103,1648,1.103,1649,1.103,1650,1.927,1651,1.103,1652,1.103,1653,1.103,1654,1.927,1655,1.927,1656,3.493,1657,1.103,1658,1.103,1659,1.103,1660,1.103,1661,1.103,1662,1.103,1663,1.103,1664,1.103,1665,1.103,1666,1.103,1667,1.103,1668,1.103,1669,1.103,1670,1.103,1671,1.103,1672,1.927,1673,1.103,1674,1.103,1675,1.103,1676,1.103,1677,2.566,1678,1.103,1679,1.103,1680,1.103,1681,1.927,1682,1.103,1683,1.103,1684,1.103,1685,1.103,1686,1.103,1687,1.103,1688,1.103,1689,1.103,1690,1.103,1691,1.103,1692,1.103,1693,1.103,1694,1.103,1695,1.103,1696,1.103,1697,1.103,1698,1.103,1699,1.103,1700,1.103,1701,1.103,1702,1.927,1703,1.103,1704,1.103,1705,1.103,1706,1.103,1707,1.103,1708,1.103,1709,1.103,1710,1.103,1711,1.103,1712,1.103,1713,1.103,1714,3.076,1715,1.927,1716,1.103,1717,1.103,1718,1.103,1719,1.103,1720,1.103,1721,1.103,1722,2.566,1723,1.103,1724,1.103,1725,1.103,1726,1.103,1727,1.103,1728,1.103,1729,1.103,1730,1.927,1731,1.103,1732,1.103,1733,1.103,1734,1.103,1735,1.103,1736,1.103,1737,1.103,1738,1.103,1739,1.103,1740,1.103]],["title/modules.html",[51,2.131]],["body/modules.html",[11,0.019,47,0.019,48,0.019,50,3.538,51,2.271,56,3.238,57,2.271,58,3.238,59,3.238,60,3.238,61,3.238,1222,6.09,1541,6.09,1741,7.143,1742,7.143]],["title/overview.html",[1743,4.144]],["body/overview.html",[2,1.455,11,0.022,34,3.368,47,0.016,48,0.016,50,4.925,51,1.743,52,2.291,53,3.389,54,3.389,55,3.389,56,4.325,57,3.086,58,4.213,59,4.213,60,4.213,61,4.213,62,2.61,63,1.858,64,1.985,78,1.858,125,3.368,143,3.389,145,3.389,146,3.649,167,2.779,202,1.225,575,2.715,613,3.389,614,3.389,615,3.389,677,3.368,697,3.389,698,3.389,762,3.368,774,3.389,775,3.389,848,3.368,863,3.389,865,3.389,965,3.368,996,3.389,998,3.389,1104,3.389,1743,3.389,1744,3.974,1745,3.974,1746,3.974,1747,3.974]],["title/properties.html",[205,1.248,1165,2.543]],["body/properties.html",[11,0.022,47,0.019,48,0.019,205,1.621,244,2.038,1283,3.802,1284,4.206,1748,5.567,1749,5.567,1750,5.567]],["title/todo.html",[462,1.864,1195,2.037,1196,2.037]],["body/todo.html",[11,0.019,17,2.382,19,2.981,47,0.019,48,0.018,49,1.555,73,1.851,87,3.603,92,4.802,108,1.56,130,2.931,170,2.742,462,2.981,471,5.01,484,3.603,710,2.554,712,3.175,752,3.257,1041,3.603,1246,4.066,1270,4.066,1274,5.003,1751,5.988,1752,6.632,1753,6.933,1754,6.632,1755,6.632,1756,4.769,1757,4.769,1758,4.769,1759,4.769,1760,4.769,1761,4.769,1762,4.769,1763,5.867]],["title/miscellaneous/variables.html",[1189,1.864,1764,3.656]],["body/miscellaneous/variables.html",[7,0.237,11,0.022,15,1.219,17,3.45,19,1.942,21,4.546,23,2.122,25,2.233,43,1.663,45,0.674,47,0.009,48,0.009,73,2.091,103,0.568,104,0.544,108,1.183,130,1.552,164,1.934,170,2.253,176,2.582,177,1.552,178,1.452,180,2.205,183,0.912,191,1.474,192,0.974,208,1.219,222,1.045,236,1.263,244,0.714,249,1.219,250,1.219,251,1.362,252,1.362,253,1.452,254,1.219,265,1.219,278,1.125,279,1.942,280,1.125,321,1.474,326,4.378,329,4.225,332,1.474,334,1.663,335,1.663,336,4.592,344,2.649,346,1.332,350,3.301,351,1.663,352,1.663,353,2.925,354,1.663,356,1.663,357,1.663,358,2.649,360,3.301,361,4.354,369,1.663,371,1.663,380,2.649,385,3.301,386,3.301,394,5.2,395,2.649,396,1.663,397,2.649,398,1.663,399,1.663,400,1.663,401,1.663,402,1.663,403,3.301,404,3.301,405,2.649,406,2.649,407,2.649,408,1.663,409,1.663,410,1.663,411,1.663,412,1.663,413,2.347,414,2.649,415,1.663,416,1.663,417,3.21,418,2.649,419,2.649,420,3.301,421,1.663,422,2.649,423,1.663,424,1.663,425,1.663,426,1.663,427,1.663,428,1.663,429,1.219,430,3.764,431,1.663,432,1.663,433,1.474,434,1.663,435,1.663,436,3.301,437,1.663,438,5.141,439,1.663,440,1.332,441,2.925,442,1.663,443,1.663,444,2.649,445,1.663,446,2.649,447,1.663,448,1.663,449,1.663,450,3.301,451,2.649,452,1.663,453,1.663,454,2.347,455,1.663,456,1.663,457,1.663,458,1.663,459,1.663,460,1.663,461,2.649,462,1.219,463,3.819,464,1.663,465,1.474,466,1.663,467,1.663,468,1.663,469,1.663,470,3.301,471,2.347,472,3.764,473,1.663,474,1.663,475,1.663,476,1.663,477,1.663,478,1.663,479,2.925,480,1.663,481,1.663,482,1.663,483,1.663,484,1.474,485,1.663,486,1.663,487,1.663,488,1.663,489,2.649,490,1.663,491,1.663,492,1.663,493,1.663,495,1.663,496,2.649,497,2.649,498,1.663,499,1.663,500,1.663,501,2.649,502,1.663,503,1.663,504,1.474,505,1.663,506,1.663,507,1.663,508,1.663,509,1.663,510,1.663,511,1.663,512,1.663,513,1.663,514,1.474,515,1.663,516,4.11,517,3.764,518,1.663,519,1.663,520,1.663,521,2.649,522,1.663,523,1.663,524,2.649,525,2.649,526,1.663,527,1.663,528,1.663,529,1.663,530,1.663,531,2.649,532,1.663,533,1.663,534,1.663,535,2.649,536,1.663,537,1.332,538,1.663,539,1.663,541,1.663,542,1.663,543,1.663,544,1.663,545,1.663,546,1.474,547,1.663,548,1.663,549,1.663,550,1.663,551,1.663,552,1.663,553,1.663,554,1.663,555,2.649,556,2.649,557,1.663,558,1.663,559,1.663,560,1.663,568,1.663,569,1.474,620,3.764,655,1.809,682,1.125,726,3.292,752,2.644,789,1.663,841,2.347,875,1.663,932,2.347,1029,1.663,1143,2.649,1148,1.663,1149,2.649,1150,1.663,1151,3.301,1152,1.663,1153,3.301,1154,1.663,1155,3.301,1156,2.649,1189,1.219,1751,1.663,1764,1.663,1765,1.951,1766,3.107,1767,3.107,1768,3.107,1769,3.107,1770,5.762,1771,5.762,1772,1.951,1773,1.951,1774,1.951,1775,1.951,1776,1.951,1777,1.951,1778,1.951,1779,1.951,1780,1.951,1781,5.135,1782,1.951,1783,1.951,1784,1.951,1785,3.107,1786,1.951,1787,1.951,1788,1.951,1789,1.951,1790,1.951,1791,1.951,1792,1.951,1793,1.951,1794,1.951,1795,1.951,1796,1.951]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateResultDto.html":{},"classes/CreateSpecialtyDto.html":{},"classes/CreateTestDto.html":{},"classes/CreateUserDto.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Result.html":{},"controllers/ResultController.html":{},"modules/ResultModule.html":{},"injectables/ResultService.html":{},"controllers/SpecialtiesController.html":{},"modules/SpecialtiesModule.html":{},"injectables/SpecialtiesService.html":{},"classes/Specialty.html":{},"classes/Test.html":{},"controllers/TestController.html":{},"modules/TestModule.html":{},"injectables/TestService.html":{},"classes/UpdateResultDto.html":{},"classes/UpdateSpecialtyDto.html":{},"classes/UpdateTestDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":726,"title":{},"body":{"injectables/ResultService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.0.1",{"_index":1748,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":1182,"title":{},"body":{"dependencies.html":{}}}],["0.13.2",{"_index":1173,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":1172,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":1176,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1136,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1159,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1160,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1137,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1141,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1142,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1147,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1138,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1139,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1158,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1157,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1135,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":1747,"title":{},"body":{"overview.html":{}}}],["1.0.0",{"_index":1179,"title":{},"body":{"dependencies.html":{}}}],["1.1",{"_index":1291,"title":{},"body":{"license.html":{}}}],["1.10",{"_index":1359,"title":{},"body":{"license.html":{}}}],["1.12",{"_index":1380,"title":{},"body":{"license.html":{}}}],["1.13",{"_index":1390,"title":{},"body":{"license.html":{}}}],["1.14",{"_index":1392,"title":{},"body":{"license.html":{}}}],["1.2",{"_index":1303,"title":{},"body":{"license.html":{}}}],["1.3",{"_index":1311,"title":{},"body":{"license.html":{}}}],["1.4",{"_index":1312,"title":{},"body":{"license.html":{}}}],["1.5",{"_index":1326,"title":{},"body":{"license.html":{}}}],["1.7",{"_index":1339,"title":{},"body":{"license.html":{}}}],["1.8",{"_index":1345,"title":{},"body":{"license.html":{}}}],["1.9",{"_index":1347,"title":{},"body":{"license.html":{}}}],["1/2",{"_index":1140,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1795,"title":{},"body":{"miscellaneous/variables.html":{}}}],["10.1",{"_index":1712,"title":{},"body":{"license.html":{}}}],["10.2",{"_index":1477,"title":{},"body":{"license.html":{}}}],["10.3",{"_index":1715,"title":{},"body":{"license.html":{}}}],["10.4",{"_index":1728,"title":{},"body":{"license.html":{}}}],["12",{"_index":718,"title":{},"body":{"injectables/ResultService.html":{}}}],["15",{"_index":1746,"title":{},"body":{"overview.html":{}}}],["2",{"_index":263,"title":{},"body":{"classes/CreateResultDto.html":{},"classes/CreateSpecialtyDto.html":{},"injectables/ResultService.html":{},"classes/UpdateResultDto.html":{},"license.html":{}}}],["2.0",{"_index":1285,"title":{},"body":{"index.html":{},"license.html":{}}}],["2.1",{"_index":1384,"title":{},"body":{"license.html":{}}}],["2.1(b",{"_index":1455,"title":{},"body":{"license.html":{}}}],["2.2",{"_index":1440,"title":{},"body":{"license.html":{}}}],["2.3",{"_index":1447,"title":{},"body":{"license.html":{}}}],["2.4",{"_index":1473,"title":{},"body":{"license.html":{}}}],["2.5",{"_index":1480,"title":{},"body":{"license.html":{}}}],["2.6",{"_index":1487,"title":{},"body":{"license.html":{}}}],["2.7",{"_index":1496,"title":{},"body":{"license.html":{}}}],["200",{"_index":885,"title":{},"body":{"injectables/TestService.html":{},"injectables/UserService.html":{}}}],["24h",{"_index":162,"title":{},"body":{"modules/AuthModule.html":{}}}],["2})@apiproperty({description",{"_index":296,"title":{},"body":{"classes/CreateSpecialtyDto.html":{}}}],["2})@isoptional()@apiproperty({description",{"_index":887,"title":{},"body":{"classes/UpdateResultDto.html":{}}}],["3",{"_index":265,"title":{},"body":{"classes/CreateResultDto.html":{},"classes/CreateSpecialtyDto.html":{},"classes/CreateTestDto.html":{},"classes/UpdateResultDto.html":{},"miscellaneous/variables.html":{}}}],["3.0",{"_index":1386,"title":{},"body":{"license.html":{}}}],["3.0.2",{"_index":1184,"title":{},"body":{"dependencies.html":{}}}],["3.1",{"_index":1498,"title":{},"body":{"license.html":{}}}],["3.2",{"_index":1499,"title":{},"body":{"license.html":{}}}],["3.3",{"_index":1479,"title":{},"body":{"license.html":{}}}],["3.4",{"_index":1472,"title":{},"body":{"license.html":{}}}],["3.5",{"_index":1537,"title":{},"body":{"license.html":{}}}],["30",{"_index":1597,"title":{},"body":{"license.html":{}}}],["30m",{"_index":1003,"title":{},"body":{"modules/UserModule.html":{}}}],["4",{"_index":261,"title":{},"body":{"classes/CreateResultDto.html":{},"classes/CreateSpecialtyDto.html":{},"injectables/ResultService.html":{}}}],["4.0.0",{"_index":1177,"title":{},"body":{"dependencies.html":{}}}],["4.1.1",{"_index":1174,"title":{},"body":{"dependencies.html":{}}}],["4.3.1",{"_index":1169,"title":{},"body":{"dependencies.html":{}}}],["4.5.0",{"_index":1188,"title":{},"body":{"dependencies.html":{}}}],["40",{"_index":574,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["40)@isstring()@isnotempty()@apiproperty({description",{"_index":567,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["5",{"_index":267,"title":{},"body":{"classes/CreateResultDto.html":{},"classes/CreateSpecialtyDto.html":{},"injectables/ResultService.html":{},"injectables/UserService.html":{}}}],["5.1",{"_index":1575,"title":{},"body":{"license.html":{}}}],["5.1.0",{"_index":1170,"title":{},"body":{"dependencies.html":{}}}],["5.2",{"_index":1599,"title":{},"body":{"license.html":{}}}],["5.3",{"_index":1618,"title":{},"body":{"license.html":{}}}],["50",{"_index":537,"title":{},"body":{"classes/CreateTestDto.html":{},"coverage.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["587",{"_index":1040,"title":{},"body":{"injectables/UserService.html":{}}}],["6",{"_index":1745,"title":{},"body":{"overview.html":{}}}],["6.1.2",{"_index":1168,"title":{},"body":{"dependencies.html":{}}}],["6.8.0",{"_index":1175,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":1591,"title":{},"body":{"license.html":{}}}],["7",{"_index":1744,"title":{},"body":{"overview.html":{}}}],["7.2.0",{"_index":1186,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":1104,"title":{},"body":{"injectables/UserService.html":{},"overview.html":{}}}],["80",{"_index":545,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["9.0.0",{"_index":1166,"title":{},"body":{"dependencies.html":{}}}],["ability",{"_index":1696,"title":{},"body":{"license.html":{}}}],["abordar",{"_index":382,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["above",{"_index":1456,"title":{},"body":{"license.html":{}}}],["abranger",{"_index":343,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["absence",{"_index":1465,"title":{},"body":{"license.html":{}}}],["absolutely",{"_index":1545,"title":{},"body":{"license.html":{}}}],["accurate",{"_index":1740,"title":{},"body":{"license.html":{}}}],["acessar",{"_index":1116,"title":{},"body":{"injectables/UserService.html":{}}}],["actions",{"_index":1609,"title":{},"body":{"license.html":{}}}],["add",{"_index":1739,"title":{},"body":{"license.html":{}}}],["addition",{"_index":1360,"title":{},"body":{"license.html":{}}}],["additional",{"_index":1450,"title":{},"body":{"license.html":{}}}],["additionally",{"_index":1521,"title":{},"body":{"license.html":{}}}],["adiciona",{"_index":952,"title":{},"body":{"controllers/UserController.html":{}}}],["adipiscing",{"_index":292,"title":{},"body":{"classes/CreateSpecialtyDto.html":{}}}],["adm",{"_index":940,"title":{},"body":{"controllers/UserController.html":{}}}],["affect",{"_index":1563,"title":{},"body":{"license.html":{}}}],["affero",{"_index":1385,"title":{},"body":{"license.html":{}}}],["against",{"_index":1602,"title":{},"body":{"license.html":{}}}],["agilidade",{"_index":492,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["agree",{"_index":1550,"title":{},"body":{"license.html":{}}}],["agreement",{"_index":1698,"title":{},"body":{"license.html":{}}}],["agreements",{"_index":1620,"title":{},"body":{"license.html":{}}}],["ajuda",{"_index":436,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["ajudou",{"_index":530,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["ajustar",{"_index":486,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["algum",{"_index":519,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["alleging",{"_index":1612,"title":{},"body":{"license.html":{}}}],["allow",{"_index":1680,"title":{},"body":{"license.html":{}}}],["allusers",{"_index":1106,"title":{},"body":{"injectables/UserService.html":{}}}],["allusers.length",{"_index":1108,"title":{},"body":{"injectables/UserService.html":{}}}],["alone",{"_index":1549,"title":{},"body":{"license.html":{}}}],["already",{"_index":1060,"title":{},"body":{"injectables/UserService.html":{}}}],["alta",{"_index":406,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["alter",{"_index":1508,"title":{},"body":{"license.html":{}}}],["além",{"_index":506,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["ambiente",{"_index":1250,"title":{},"body":{"index.html":{}}}],["amet",{"_index":290,"title":{},"body":{"classes/CreateSpecialtyDto.html":{}}}],["analisa",{"_index":509,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["and/or",{"_index":185,"title":{},"body":{"injectables/AuthService.html":{}}}],["anyone",{"_index":1651,"title":{},"body":{"license.html":{}}}],["ao",{"_index":954,"title":{},"body":{"controllers/UserController.html":{}}}],["api",{"_index":1758,"title":{},"body":{"todo.html":{}}}],["apibearerauth",{"_index":122,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ResultController.html":{},"controllers/SpecialtiesController.html":{},"controllers/TestController.html":{},"controllers/UserController.html":{}}}],["apioperation",{"_index":123,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ResultController.html":{},"controllers/SpecialtiesController.html":{},"controllers/TestController.html":{},"controllers/UserController.html":{}}}],["apioperation({summary",{"_index":857,"title":{},"body":{"controllers/TestController.html":{}}}],["apiproperty",{"_index":227,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateResultDto.html":{},"classes/CreateSpecialtyDto.html":{},"classes/CreateTestDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/UpdateResultDto.html":{},"classes/UpdateUserDto.html":{}}}],["apiproperty({description",{"_index":607,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["apitags",{"_index":32,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ResultController.html":{},"controllers/SpecialtiesController.html":{},"controllers/TestController.html":{},"controllers/UserController.html":{}}}],["apitags('auth",{"_index":133,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('result",{"_index":683,"title":{},"body":{"controllers/ResultController.html":{}}}],["apitags('specialtie",{"_index":765,"title":{},"body":{"controllers/SpecialtiesController.html":{}}}],["apitags('status",{"_index":36,"title":{},"body":{"controllers/AppController.html":{}}}],["apitags('test",{"_index":851,"title":{},"body":{"controllers/TestController.html":{}}}],["apitags('user",{"_index":970,"title":{},"body":{"controllers/UserController.html":{}}}],["aplica",{"_index":517,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["aplicação",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"index.html":{}}}],["app",{"_index":627,"title":{},"body":{"injectables/PrismaService.html":{}}}],["app.close",{"_index":634,"title":{},"body":{"injectables/PrismaService.html":{}}}],["app.controller",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":35,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["apparatus",{"_index":1372,"title":{},"body":{"license.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applicable",{"_index":1491,"title":{},"body":{"license.html":{}}}],["application",{"_index":1538,"title":{},"body":{"license.html":{}}}],["apply",{"_index":1672,"title":{},"body":{"license.html":{}}}],["appmodule",{"_index":50,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":34,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["aprendendo",{"_index":431,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["arquitetura",{"_index":420,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["arquivo",{"_index":1287,"title":{},"body":{"index.html":{}}}],["arrayminsize",{"_index":388,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["arrayminsize(3",{"_index":494,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["arrayminsize(5",{"_index":393,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["asserting",{"_index":1603,"title":{},"body":{"license.html":{}}}],["assume",{"_index":1640,"title":{},"body":{"license.html":{}}}],["async",{"_index":164,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/ResultService.html":{},"injectables/SpecialtiesService.html":{},"injectables/TestService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["através",{"_index":332,"title":{},"body":{"classes/CreateTestDto.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["atribuir",{"_index":1760,"title":{},"body":{"todo.html":{}}}],["atributos",{"_index":338,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["attached",{"_index":1316,"title":{},"body":{"license.html":{}}}],["attempt",{"_index":1507,"title":{},"body":{"license.html":{}}}],["atual",{"_index":1121,"title":{},"body":{"injectables/UserService.html":{}}}],["auth",{"_index":92,"title":{},"body":{"controllers/AuthController.html":{},"injectables/UserService.html":{},"todo.html":{}}}],["auth.controller",{"_index":148,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":126,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":89,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authenticated",{"_index":111,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{},"classes/LoginResponseDto.html":{}}}],["authentication",{"_index":100,"title":{},"body":{"controllers/AuthController.html":{}}}],["authguard",{"_index":120,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ResultController.html":{},"controllers/SpecialtiesController.html":{},"controllers/TestController.html":{},"controllers/UserController.html":{}}}],["authmodule",{"_index":56,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["authmodule,testmodule,specialtiesmodule",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["author",{"_index":1750,"title":{},"body":{"properties.html":{}}}],["authorized",{"_index":1646,"title":{},"body":{"license.html":{}}}],["authservice",{"_index":125,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["automatically",{"_index":609,"title":{},"body":{"classes/LoginResponseDto.html":{},"license.html":{}}}],["autores",{"_index":1259,"title":{},"body":{"index.html":{}}}],["available",{"_index":1333,"title":{},"body":{"license.html":{}}}],["avaliar",{"_index":514,"title":{},"body":{"classes/CreateTestDto.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["await",{"_index":180,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/ResultService.html":{},"injectables/SpecialtiesService.html":{},"injectables/TestService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["azevedo",{"_index":1276,"title":{},"body":{"index.html":{}}}],["b",{"_index":1331,"title":{},"body":{"license.html":{}}}],["back",{"_index":1197,"title":{},"body":{"index.html":{},"license.html":{}}}],["backend",{"_index":1231,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":1017,"title":{},"body":{"injectables/UserService.html":{}}}],["badrequestexception('a",{"_index":1120,"title":{},"body":{"injectables/UserService.html":{}}}],["badrequestexception('as",{"_index":1025,"title":{},"body":{"injectables/UserService.html":{}}}],["badrequestexception('error",{"_index":1081,"title":{},"body":{"injectables/UserService.html":{}}}],["badrequestexception('informe",{"_index":1101,"title":{},"body":{"injectables/UserService.html":{}}}],["badrequestexception('token",{"_index":1086,"title":{},"body":{"injectables/UserService.html":{}}}],["barbosa",{"_index":1271,"title":{},"body":{"index.html":{}}}],["baseado",{"_index":490,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["basis",{"_index":1436,"title":{},"body":{"license.html":{}}}],["bcrypt",{"_index":174,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["bcrypt.compare(password",{"_index":190,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hash(dto.password",{"_index":1032,"title":{},"body":{"injectables/UserService.html":{}}}],["bcrypt.hash(obj.password",{"_index":1794,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bcrypt.hash(updateuserdto.newpassword",{"_index":1127,"title":{},"body":{"injectables/UserService.html":{}}}],["become",{"_index":1445,"title":{},"body":{"license.html":{}}}],["behalf",{"_index":1544,"title":{},"body":{"license.html":{}}}],["believes",{"_index":1483,"title":{},"body":{"license.html":{}}}],["beneficial",{"_index":1415,"title":{},"body":{"license.html":{}}}],["benefícios",{"_index":482,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["berteli",{"_index":1264,"title":{},"body":{"index.html":{}}}],["body",{"_index":115,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ResultController.html":{},"controllers/SpecialtiesController.html":{},"controllers/TestController.html":{},"controllers/UserController.html":{}}}],["bomfim",{"_index":1272,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":911,"title":{},"body":{"classes/User.html":{}}}],["bootcamp",{"_index":1200,"title":{},"body":{"index.html":{}}}],["bootstrap",{"_index":1146,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["bring",{"_index":1697,"title":{},"body":{"license.html":{}}}],["brought",{"_index":1683,"title":{},"body":{"license.html":{}}}],["browse",{"_index":1742,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1222,"title":{},"body":{"index.html":{},"modules.html":{}}}],["bruna",{"_index":1270,"title":{},"body":{"index.html":{},"todo.html":{}}}],["bugs",{"_index":401,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["build",{"_index":1253,"title":{},"body":{"index.html":{}}}],["buscadas",{"_index":375,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["buscados",{"_index":339,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["business",{"_index":1689,"title":{},"body":{"license.html":{}}}],["c",{"_index":1464,"title":{},"body":{"license.html":{}}}],["cada",{"_index":345,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["cadastradas",{"_index":730,"title":{},"body":{"injectables/ResultService.html":{}}}],["cadastrados",{"_index":1110,"title":{},"body":{"injectables/UserService.html":{}}}],["caminho",{"_index":507,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["caminhos",{"_index":475,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["campos",{"_index":1754,"title":{},"body":{"todo.html":{}}}],["capacidade",{"_index":324,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["capaz",{"_index":395,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["caracteres",{"_index":223,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["carreiras",{"_index":458,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["carvalho",{"_index":1268,"title":{},"body":{"index.html":{}}}],["case",{"_index":1322,"title":{},"body":{"license.html":{}}}],["catch",{"_index":1098,"title":{},"body":{"injectables/UserService.html":{}}}],["catch(handleerror",{"_index":791,"title":{},"body":{"injectables/SpecialtiesService.html":{},"injectables/TestService.html":{},"injectables/UserService.html":{}}}],["categoria",{"_index":894,"title":{},"body":{"classes/UpdateResultDto.html":{}}}],["category",{"_index":258,"title":{},"body":{"classes/CreateResultDto.html":{}}}],["cause",{"_index":1405,"title":{},"body":{"license.html":{}}}],["caused",{"_index":1459,"title":{},"body":{"license.html":{}}}],["chama",{"_index":476,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["change",{"_index":673,"title":{},"body":{"controllers/ResultController.html":{},"controllers/SpecialtiesController.html":{},"controllers/UserController.html":{}}}],["changed",{"_index":1105,"title":{},"body":{"injectables/UserService.html":{}}}],["changepassword",{"_index":921,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["changepassword(id",{"_index":925,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["changepassworddto",{"_index":201,"title":{"classes/ChangePasswordDto.html":{}},"body":{"classes/ChangePasswordDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["changes",{"_index":846,"title":{},"body":{"controllers/TestController.html":{}}}],["chapter",{"_index":346,"title":{},"body":{"classes/CreateTestDto.html":{},"classes/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["character",{"_index":1657,"title":{},"body":{"license.html":{}}}],["charge",{"_index":1513,"title":{},"body":{"license.html":{}}}],["check",{"_index":85,"title":{},"body":{"injectables/AppService.html":{}}}],["choice",{"_index":1476,"title":{},"body":{"license.html":{}}}],["choose",{"_index":1539,"title":{},"body":{"license.html":{}}}],["ci/cd",{"_index":385,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["ci/cd?https://petlove.atlassian.net/wiki/spaces/tec/pages/351666200/playbook",{"_index":540,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["circumstances",{"_index":1647,"title":{},"body":{"license.html":{}}}],["claim",{"_index":1605,"title":{},"body":{"license.html":{}}}],["claim(s",{"_index":1368,"title":{},"body":{"license.html":{}}}],["claims",{"_index":1367,"title":{},"body":{"license.html":{}}}],["class",{"_index":38,"title":{"classes/ChangePasswordDto.html":{},"classes/CreateResultDto.html":{},"classes/CreateSpecialtyDto.html":{},"classes/CreateTestDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Result.html":{},"classes/Specialty.html":{},"classes/Test.html":{},"classes/UpdateResultDto.html":{},"classes/UpdateSpecialtyDto.html":{},"classes/UpdateTestDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateResultDto.html":{},"classes/CreateSpecialtyDto.html":{},"classes/CreateTestDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Result.html":{},"controllers/ResultController.html":{},"modules/ResultModule.html":{},"injectables/ResultService.html":{},"controllers/SpecialtiesController.html":{},"modules/SpecialtiesModule.html":{},"injectables/SpecialtiesService.html":{},"classes/Specialty.html":{},"classes/Test.html":{},"controllers/TestController.html":{},"modules/TestModule.html":{},"injectables/TestService.html":{},"classes/UpdateResultDto.html":{},"classes/UpdateSpecialtyDto.html":{},"classes/UpdateTestDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":202,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateResultDto.html":{},"classes/CreateSpecialtyDto.html":{},"classes/CreateTestDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Result.html":{},"classes/Specialty.html":{},"classes/Test.html":{},"classes/UpdateResultDto.html":{},"classes/UpdateSpecialtyDto.html":{},"classes/UpdateTestDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"overview.html":{}}}],["clear",{"_index":1546,"title":{},"body":{"license.html":{}}}],["clientes",{"_index":505,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["clonando",{"_index":1224,"title":{},"body":{"index.html":{}}}],["clone",{"_index":1225,"title":{},"body":{"index.html":{}}}],["close",{"_index":1062,"title":{},"body":{"injectables/UserService.html":{}}}],["cluster_appmodule",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":143,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":144,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":145,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_prismamodule",{"_index":613,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_exports",{"_index":615,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_providers",{"_index":614,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_resultmodule",{"_index":697,"title":{},"body":{"modules/ResultModule.html":{},"overview.html":{}}}],["cluster_resultmodule_imports",{"_index":699,"title":{},"body":{"modules/ResultModule.html":{}}}],["cluster_resultmodule_providers",{"_index":698,"title":{},"body":{"modules/ResultModule.html":{},"overview.html":{}}}],["cluster_specialtiesmodule",{"_index":774,"title":{},"body":{"modules/SpecialtiesModule.html":{},"overview.html":{}}}],["cluster_specialtiesmodule_imports",{"_index":776,"title":{},"body":{"modules/SpecialtiesModule.html":{}}}],["cluster_specialtiesmodule_providers",{"_index":775,"title":{},"body":{"modules/SpecialtiesModule.html":{},"overview.html":{}}}],["cluster_testmodule",{"_index":863,"title":{},"body":{"modules/TestModule.html":{},"overview.html":{}}}],["cluster_testmodule_imports",{"_index":864,"title":{},"body":{"modules/TestModule.html":{}}}],["cluster_testmodule_providers",{"_index":865,"title":{},"body":{"modules/TestModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":996,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_imports",{"_index":997,"title":{},"body":{"modules/UserModule.html":{}}}],["cluster_usermodule_providers",{"_index":998,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["coach",{"_index":453,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["cobra",{"_index":548,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["code",{"_index":1313,"title":{},"body":{"license.html":{}}}],["coisas",{"_index":374,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["colaboradores",{"_index":1207,"title":{},"body":{"index.html":{}}}],["colegas",{"_index":525,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["com",{"_index":25,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateTestDto.html":{},"injectables/TestService.html":{},"injectables/UserService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["comando",{"_index":1228,"title":{},"body":{"index.html":{}}}],["comandos",{"_index":1252,"title":{},"body":{"index.html":{}}}],["combination",{"_index":1304,"title":{},"body":{"license.html":{}}}],["combines",{"_index":1341,"title":{},"body":{"license.html":{}}}],["come",{"_index":1593,"title":{},"body":{"license.html":{}}}],["commercial",{"_index":1666,"title":{},"body":{"license.html":{}}}],["common",{"_index":1398,"title":{},"body":{"license.html":{}}}],["como",{"_index":384,"title":{},"body":{"classes/CreateTestDto.html":{},"index.html":{}}}],["complete",{"_index":838,"title":{},"body":{"controllers/TestController.html":{},"license.html":{}}}],["complexidade",{"_index":407,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["compliance",{"_index":1589,"title":{},"body":{"license.html":{}}}],["compliant",{"_index":1578,"title":{},"body":{"license.html":{}}}],["comply",{"_index":1470,"title":{},"body":{"license.html":{}}}],["comportamentos",{"_index":503,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["computacionais",{"_index":331,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["computational",{"_index":259,"title":{},"body":{"classes/CreateResultDto.html":{}}}],["computationalfundamentals",{"_index":249,"title":{},"body":{"classes/CreateResultDto.html":{},"classes/CreateTestDto.html":{},"classes/Test.html":{},"injectables/TestService.html":{},"miscellaneous/variables.html":{}}}],["computationalfundamentals:string",{"_index":832,"title":{},"body":{"classes/Test.html":{}}}],["computer",{"_index":1663,"title":{},"body":{"license.html":{}}}],["conceito",{"_index":535,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["conceitos",{"_index":544,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["concerning",{"_index":1699,"title":{},"body":{"license.html":{}}}],["conditions",{"_index":1417,"title":{},"body":{"license.html":{}}}],["confirmpassword",{"_index":206,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["conflict",{"_index":1692,"title":{},"body":{"license.html":{}}}],["conhece",{"_index":516,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["conhecer",{"_index":367,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["conhecimento",{"_index":364,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["consectetur",{"_index":291,"title":{},"body":{"classes/CreateSpecialtyDto.html":{}}}],["consegue",{"_index":555,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["consequential",{"_index":1655,"title":{},"body":{"license.html":{}}}],["considerando",{"_index":499,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["consistentes",{"_index":468,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["consistência",{"_index":473,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["console.log(`dto",{"_index":179,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(err",{"_index":1057,"title":{},"body":{"injectables/UserService.html":{}}}],["console.log(file",{"_index":995,"title":{},"body":{"controllers/UserController.html":{}}}],["console.log(info",{"_index":1058,"title":{},"body":{"injectables/UserService.html":{}}}],["console.log(resettoken",{"_index":1087,"title":{},"body":{"injectables/UserService.html":{}}}],["const",{"_index":176,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/ResultService.html":{},"injectables/SpecialtiesService.html":{},"injectables/TestService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["constitutes",{"_index":1644,"title":{},"body":{"license.html":{}}}],["constructor",{"_index":165,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/ResultService.html":{},"injectables/SpecialtiesService.html":{},"injectables/TestService.html":{},"injectables/UserService.html":{}}}],["constructor(prisma",{"_index":166,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/ResultService.html":{},"injectables/SpecialtiesService.html":{},"injectables/TestService.html":{},"injectables/UserService.html":{}}}],["constructor(private",{"_index":39,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{},"controllers/ResultController.html":{},"injectables/ResultService.html":{},"controllers/SpecialtiesController.html":{},"injectables/SpecialtiesService.html":{},"controllers/TestController.html":{},"injectables/TestService.html":{},"controllers/UserController.html":{}}}],["construe",{"_index":1711,"title":{},"body":{"license.html":{}}}],["construed",{"_index":1709,"title":{},"body":{"license.html":{}}}],["construção",{"_index":455,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["construído",{"_index":1255,"title":{},"body":{"index.html":{}}}],["constrói",{"_index":541,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["contained",{"_index":1530,"title":{},"body":{"license.html":{}}}],["contains",{"_index":1364,"title":{},"body":{"license.html":{}}}],["contents",{"_index":1363,"title":{},"body":{"license.html":{}}}],["contingências",{"_index":428,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["contract",{"_index":1408,"title":{},"body":{"license.html":{}}}],["contribute",{"_index":1501,"title":{},"body":{"license.html":{}}}],["contributes",{"_index":1298,"title":{},"body":{"license.html":{}}}],["contribution",{"_index":1310,"title":{},"body":{"license.html":{}}}],["contributions",{"_index":1305,"title":{},"body":{"license.html":{}}}],["contributor",{"_index":1292,"title":{},"body":{"license.html":{}}}],["contributor's",{"_index":1309,"title":{},"body":{"license.html":{}}}],["contributors",{"_index":1616,"title":{},"body":{"license.html":{}}}],["control",{"_index":1399,"title":{},"body":{"license.html":{}}}],["controlar",{"_index":412,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["controlled",{"_index":1397,"title":{},"body":{"license.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ResultController.html":{},"controllers/SpecialtiesController.html":{},"controllers/TestController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ResultController.html":{},"controllers/SpecialtiesController.html":{},"controllers/TestController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":134,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('result",{"_index":684,"title":{},"body":{"controllers/ResultController.html":{}}}],["controller('specialty",{"_index":766,"title":{},"body":{"controllers/SpecialtiesController.html":{}}}],["controller('test",{"_index":852,"title":{},"body":{"controllers/TestController.html":{}}}],["controller('user",{"_index":971,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/ResultController.html":{},"modules/ResultModule.html":{},"controllers/SpecialtiesController.html":{},"modules/SpecialtiesModule.html":{},"controllers/TestController.html":{},"modules/TestModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["controls",{"_index":1396,"title":{},"body":{"license.html":{}}}],["conveyed",{"_index":1358,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1506,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1492,"title":{},"body":{"license.html":{}}}],["correction",{"_index":1643,"title":{},"body":{"license.html":{}}}],["cost",{"_index":1514,"title":{},"body":{"license.html":{}}}],["counter",{"_index":1610,"title":{},"body":{"license.html":{}}}],["courts",{"_index":1684,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":1131,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["covered",{"_index":1301,"title":{},"body":{"license.html":{}}}],["create",{"_index":236,"title":{},"body":{"classes/ChangePasswordDto.html":{},"controllers/ResultController.html":{},"injectables/ResultService.html":{},"controllers/SpecialtiesController.html":{},"injectables/SpecialtiesService.html":{},"controllers/TestController.html":{},"injectables/TestService.html":{},"classes/UpdateResultDto.html":{},"classes/UpdateSpecialtyDto.html":{},"classes/UpdateTestDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["create(@body",{"_index":767,"title":{},"body":{"controllers/SpecialtiesController.html":{},"controllers/TestController.html":{},"controllers/UserController.html":{}}}],["create(@loggeduser",{"_index":685,"title":{},"body":{"controllers/ResultController.html":{}}}],["create(createuserdto",{"_index":929,"title":{},"body":{"controllers/UserController.html":{}}}],["create(dto",{"_index":750,"title":{},"body":{"controllers/SpecialtiesController.html":{},"injectables/SpecialtiesService.html":{},"controllers/TestController.html":{},"injectables/TestService.html":{},"injectables/UserService.html":{}}}],["create(user",{"_index":656,"title":{},"body":{"controllers/ResultController.html":{},"injectables/ResultService.html":{}}}],["createadm",{"_index":1005,"title":{},"body":{"injectables/UserService.html":{}}}],["createadm(dto",{"_index":1009,"title":{},"body":{"injectables/UserService.html":{}}}],["createdat",{"_index":277,"title":{},"body":{"classes/CreateSpecialtyDto.html":{},"classes/Result.html":{},"classes/Specialty.html":{},"classes/Test.html":{},"injectables/TestService.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["createdat:date",{"_index":833,"title":{},"body":{"classes/Test.html":{}}}],["createparamdecorator((_",{"_index":1772,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresultdto",{"_index":246,"title":{"classes/CreateResultDto.html":{}},"body":{"classes/CreateResultDto.html":{},"controllers/ResultController.html":{},"injectables/ResultService.html":{},"classes/UpdateResultDto.html":{},"coverage.html":{}}}],["creates",{"_index":1297,"title":{},"body":{"license.html":{}}}],["createspecialtydto",{"_index":274,"title":{"classes/CreateSpecialtyDto.html":{}},"body":{"classes/CreateSpecialtyDto.html":{},"controllers/SpecialtiesController.html":{},"injectables/SpecialtiesService.html":{},"classes/UpdateSpecialtyDto.html":{},"coverage.html":{}}}],["createtestdto",{"_index":317,"title":{"classes/CreateTestDto.html":{}},"body":{"classes/CreateTestDto.html":{},"controllers/TestController.html":{},"injectables/TestService.html":{},"classes/UpdateTestDto.html":{},"coverage.html":{}}}],["createtestdto,@loggeduser",{"_index":854,"title":{},"body":{"controllers/TestController.html":{}}}],["createuserdto",{"_index":235,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["creation",{"_index":1299,"title":{},"body":{"license.html":{}}}],["creation(s",{"_index":1485,"title":{},"body":{"license.html":{}}}],["cria",{"_index":426,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["cross",{"_index":1611,"title":{},"body":{"license.html":{}}}],["crud",{"_index":1751,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{}}}],["crud.ts",{"_index":1153,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["crud/dto/create",{"_index":319,"title":{},"body":{"classes/CreateTestDto.html":{},"coverage.html":{}}}],["crud/dto/update",{"_index":899,"title":{},"body":{"classes/UpdateTestDto.html":{},"coverage.html":{}}}],["crud/entities/test.entity.ts",{"_index":812,"title":{},"body":{"classes/Test.html":{},"coverage.html":{}}}],["crud/entities/test.entity.ts:10",{"_index":813,"title":{},"body":{"classes/Test.html":{}}}],["crud/entities/test.entity.ts:11",{"_index":814,"title":{},"body":{"classes/Test.html":{}}}],["crud/entities/test.entity.ts:12",{"_index":823,"title":{},"body":{"classes/Test.html":{}}}],["crud/entities/test.entity.ts:2",{"_index":816,"title":{},"body":{"classes/Test.html":{}}}],["crud/entities/test.entity.ts:3",{"_index":821,"title":{},"body":{"classes/Test.html":{}}}],["crud/entities/test.entity.ts:4",{"_index":819,"title":{},"body":{"classes/Test.html":{}}}],["crud/entities/test.entity.ts:5",{"_index":817,"title":{},"body":{"classes/Test.html":{}}}],["crud/entities/test.entity.ts:6",{"_index":820,"title":{},"body":{"classes/Test.html":{}}}],["crud/entities/test.entity.ts:7",{"_index":815,"title":{},"body":{"classes/Test.html":{}}}],["crud/entities/test.entity.ts:8",{"_index":822,"title":{},"body":{"classes/Test.html":{}}}],["crud/entities/test.entity.ts:9",{"_index":818,"title":{},"body":{"classes/Test.html":{}}}],["crud/test.controller.ts",{"_index":836,"title":{},"body":{"controllers/TestController.html":{},"coverage.html":{}}}],["crud/test.controller.ts:19",{"_index":839,"title":{},"body":{"controllers/TestController.html":{}}}],["crud/test.controller.ts:25",{"_index":842,"title":{},"body":{"controllers/TestController.html":{}}}],["crud/test.controller.ts:32",{"_index":847,"title":{},"body":{"controllers/TestController.html":{}}}],["crud/test.controller.ts:39",{"_index":843,"title":{},"body":{"controllers/TestController.html":{}}}],["crud/test.module",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["crud/test.module.ts",{"_index":866,"title":{},"body":{"modules/TestModule.html":{}}}],["crud/test.service.ts",{"_index":868,"title":{},"body":{"injectables/TestService.html":{},"coverage.html":{}}}],["crud/test.service.ts:16",{"_index":869,"title":{},"body":{"injectables/TestService.html":{}}}],["crud/test.service.ts:19",{"_index":870,"title":{},"body":{"injectables/TestService.html":{}}}],["crud/test.service.ts:49",{"_index":871,"title":{},"body":{"injectables/TestService.html":{}}}],["crud/test.service.ts:57",{"_index":873,"title":{},"body":{"injectables/TestService.html":{}}}],["crud/test.service.ts:91",{"_index":872,"title":{},"body":{"injectables/TestService.html":{}}}],["crypto",{"_index":1021,"title":{},"body":{"injectables/UserService.html":{},"dependencies.html":{}}}],["crypto.aes.decrypt",{"_index":1093,"title":{},"body":{"injectables/UserService.html":{}}}],["crypto.aes.encrypt",{"_index":1068,"title":{},"body":{"injectables/UserService.html":{}}}],["ctx",{"_index":1773,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":1775,"title":{},"body":{"miscellaneous/variables.html":{}}}],["current",{"_index":746,"title":{},"body":{"injectables/ResultService.html":{}}}],["currently",{"_index":110,"title":{},"body":{"controllers/AuthController.html":{}}}],["código",{"_index":336,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["códigos",{"_index":542,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["da",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateTestDto.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["dados",{"_index":553,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["damages",{"_index":1656,"title":{},"body":{"license.html":{}}}],["das",{"_index":489,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["data",{"_index":196,"title":{},"body":{"injectables/AuthService.html":{},"classes/LoginResponseDto.html":{},"controllers/ResultController.html":{},"injectables/SpecialtiesService.html":{},"injectables/TestService.html":{},"injectables/UserService.html":{}}}],["data.password",{"_index":1128,"title":{},"body":{"injectables/UserService.html":{}}}],["date",{"_index":282,"title":{},"body":{"classes/CreateSpecialtyDto.html":{},"classes/Result.html":{},"classes/Specialty.html":{},"classes/Test.html":{},"classes/User.html":{},"license.html":{}}}],["days",{"_index":1592,"title":{},"body":{"license.html":{}}}],["de",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateTestDto.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["dealing",{"_index":1494,"title":{},"body":{"license.html":{}}}],["death",{"_index":1673,"title":{},"body":{"license.html":{}}}],["declaratory",{"_index":1607,"title":{},"body":{"license.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateResultDto.html":{},"classes/CreateSpecialtyDto.html":{},"classes/CreateTestDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"controllers/ResultController.html":{},"controllers/SpecialtiesController.html":{},"controllers/TestController.html":{},"classes/UpdateResultDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{}}}],["default",{"_index":1770,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultstrategy",{"_index":155,"title":{},"body":{"modules/AuthModule.html":{},"modules/ResultModule.html":{},"modules/SpecialtiesModule.html":{},"modules/TestModule.html":{},"modules/UserModule.html":{}}}],["defective",{"_index":1639,"title":{},"body":{"license.html":{}}}],["defects",{"_index":1630,"title":{},"body":{"license.html":{}}}],["defendant",{"_index":1685,"title":{},"body":{"license.html":{}}}],["define",{"_index":422,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateResultDto.html":{},"classes/CreateSpecialtyDto.html":{},"classes/CreateTestDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"injectables/PrismaService.html":{},"classes/Result.html":{},"controllers/ResultController.html":{},"injectables/ResultService.html":{},"controllers/SpecialtiesController.html":{},"injectables/SpecialtiesService.html":{},"classes/Specialty.html":{},"classes/Test.html":{},"controllers/TestController.html":{},"injectables/TestService.html":{},"classes/UpdateResultDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"license.html":{}}}],["definido",{"_index":522,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["definidos",{"_index":359,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["definir",{"_index":531,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["definition",{"_index":1401,"title":{},"body":{"license.html":{}}}],["definitions",{"_index":1290,"title":{},"body":{"license.html":{}}}],["definições",{"_index":500,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["deles",{"_index":333,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["deletado",{"_index":884,"title":{},"body":{"injectables/TestService.html":{},"injectables/UserService.html":{}}}],["delete",{"_index":192,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/ResultController.html":{},"controllers/SpecialtiesController.html":{},"controllers/TestController.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["delete(':email",{"_index":989,"title":{},"body":{"controllers/UserController.html":{}}}],["delete(':id",{"_index":668,"title":{},"body":{"controllers/ResultController.html":{},"controllers/SpecialtiesController.html":{},"controllers/TestController.html":{}}}],["delete(':id')@apioperation({summary",{"_index":757,"title":{},"body":{"controllers/SpecialtiesController.html":{},"controllers/TestController.html":{}}}],["deleted",{"_index":800,"title":{},"body":{"injectables/SpecialtiesService.html":{}}}],["deletion",{"_index":1361,"title":{},"body":{"license.html":{}}}],["dentro",{"_index":351,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["dependencies",{"_index":52,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/ResultModule.html":{},"modules/SpecialtiesModule.html":{},"modules/TestModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deploy",{"_index":1246,"title":{},"body":{"index.html":{},"todo.html":{}}}],["desafios",{"_index":442,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["describe",{"_index":1562,"title":{},"body":{"license.html":{}}}],["described",{"_index":1330,"title":{},"body":{"license.html":{}}}],["description",{"_index":244,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateResultDto.html":{},"classes/CreateSpecialtyDto.html":{},"classes/CreateTestDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Specialty.html":{},"classes/UpdateResultDto.html":{},"classes/UpdateUserDto.html":{},"license.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["descrição",{"_index":1786,"title":{},"body":{"miscellaneous/variables.html":{}}}],["desenha",{"_index":402,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["desenhar",{"_index":556,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["desenvolve",{"_index":419,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["desenvolvido",{"_index":1201,"title":{},"body":{"index.html":{}}}],["desenvolvimento",{"_index":450,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["design",{"_index":250,"title":{},"body":{"classes/CreateResultDto.html":{},"classes/CreateTestDto.html":{},"classes/Test.html":{},"injectables/TestService.html":{},"miscellaneous/variables.html":{}}}],["design:string",{"_index":829,"title":{},"body":{"classes/Test.html":{}}}],["desirable",{"_index":1734,"title":{},"body":{"license.html":{}}}],["desktop",{"_index":1233,"title":{},"body":{"index.html":{}}}],["detailed",{"_index":1570,"title":{},"body":{"license.html":{}}}],["detalhes",{"_index":1289,"title":{},"body":{"index.html":{}}}],["determinam",{"_index":1209,"title":{},"body":{"index.html":{}}}],["dev",{"_index":1216,"title":{},"body":{"index.html":{}}}],["development",{"_index":1214,"title":{},"body":{"index.html":{}}}],["devidos",{"_index":1755,"title":{},"body":{"todo.html":{}}}],["devpr",{"_index":1218,"title":{},"body":{"index.html":{}}}],["different",{"_index":1517,"title":{},"body":{"license.html":{}}}],["differs",{"_index":1727,"title":{},"body":{"license.html":{}}}],["difundir",{"_index":328,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["direct",{"_index":1403,"title":{},"body":{"license.html":{}}}],["direction",{"_index":1406,"title":{},"body":{"license.html":{}}}],["directly",{"_index":1613,"title":{},"body":{"license.html":{}}}],["directory",{"_index":1738,"title":{},"body":{"license.html":{}}}],["disciplina",{"_index":493,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["disclaimer",{"_index":1625,"title":{},"body":{"license.html":{}}}],["disclaimers",{"_index":1527,"title":{},"body":{"license.html":{}}}],["discussões",{"_index":448,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["display",{"_index":1431,"title":{},"body":{"license.html":{}}}],["distinguishing",{"_index":1718,"title":{},"body":{"license.html":{}}}],["distribute",{"_index":1433,"title":{},"body":{"license.html":{}}}],["distributed",{"_index":1732,"title":{},"body":{"license.html":{}}}],["distributes",{"_index":1446,"title":{},"body":{"license.html":{}}}],["distributing",{"_index":1729,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":1452,"title":{},"body":{"license.html":{}}}],["distributions",{"_index":1567,"title":{},"body":{"license.html":{}}}],["distributors",{"_index":1621,"title":{},"body":{"license.html":{}}}],["docs",{"_index":88,"title":{},"body":{"injectables/AppService.html":{}}}],["doctrines",{"_index":1493,"title":{},"body":{"license.html":{}}}],["document",{"_index":1346,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":1132,"title":{},"body":{"coverage.html":{}}}],["documentação",{"_index":27,"title":{},"body":{"controllers/AppController.html":{}}}],["dolor",{"_index":288,"title":{},"body":{"classes/CreateSpecialtyDto.html":{}}}],["done",{"_index":1761,"title":{},"body":{"todo.html":{}}}],["dos",{"_index":504,"title":{},"body":{"classes/CreateTestDto.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["drafter",{"_index":1710,"title":{},"body":{"license.html":{}}}],["dto",{"_index":657,"title":{},"body":{"controllers/ResultController.html":{},"injectables/ResultService.html":{},"controllers/SpecialtiesController.html":{},"injectables/SpecialtiesService.html":{},"controllers/TestController.html":{},"injectables/TestService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dto.computationalfundamentals",{"_index":717,"title":{},"body":{"injectables/ResultService.html":{},"injectables/TestService.html":{}}}],["dto.confirmpassword",{"_index":1024,"title":{},"body":{"injectables/UserService.html":{}}}],["dto.design",{"_index":715,"title":{},"body":{"injectables/ResultService.html":{},"injectables/TestService.html":{}}}],["dto.email",{"_index":1031,"title":{},"body":{"injectables/UserService.html":{}}}],["dto.name",{"_index":1030,"title":{},"body":{"injectables/UserService.html":{}}}],["dto.password",{"_index":1023,"title":{},"body":{"injectables/UserService.html":{}}}],["dto.person",{"_index":721,"title":{},"body":{"injectables/ResultService.html":{},"injectables/TestService.html":{}}}],["dto.process",{"_index":720,"title":{},"body":{"injectables/ResultService.html":{},"injectables/TestService.html":{}}}],["dto.system",{"_index":719,"title":{},"body":{"injectables/ResultService.html":{},"injectables/TestService.html":{}}}],["dto.test",{"_index":716,"title":{},"body":{"injectables/ResultService.html":{},"injectables/TestService.html":{}}}],["dto.toolshop",{"_index":714,"title":{},"body":{"injectables/ResultService.html":{},"injectables/TestService.html":{}}}],["dto/create",{"_index":679,"title":{},"body":{"controllers/ResultController.html":{},"injectables/ResultService.html":{},"controllers/SpecialtiesController.html":{},"injectables/SpecialtiesService.html":{},"controllers/TestController.html":{},"injectables/TestService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dto/login.dto",{"_index":127,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/login.response.dto",{"_index":129,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/update",{"_index":681,"title":{},"body":{"controllers/ResultController.html":{},"injectables/ResultService.html":{},"controllers/SpecialtiesController.html":{},"injectables/SpecialtiesService.html":{},"controllers/TestController.html":{},"injectables/TestService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["due",{"_index":1556,"title":{},"body":{"license.html":{}}}],["débitos",{"_index":409,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["e",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateTestDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["e1q2u3a4l",{"_index":1077,"title":{},"body":{"injectables/UserService.html":{}}}],["e2e",{"_index":511,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["each",{"_index":391,"title":{},"body":{"classes/CreateTestDto.html":{},"license.html":{}}}],["earlier",{"_index":1336,"title":{},"body":{"license.html":{}}}],["edit",{"_index":948,"title":{},"body":{"controllers/UserController.html":{}}}],["effect",{"_index":1719,"title":{},"body":{"license.html":{}}}],["effective",{"_index":1441,"title":{},"body":{"license.html":{}}}],["elit",{"_index":293,"title":{},"body":{"classes/CreateSpecialtyDto.html":{}}}],["em",{"_index":326,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["email",{"_index":177,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["empresa",{"_index":366,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["enableshutdownhooks",{"_index":622,"title":{},"body":{"injectables/PrismaService.html":{}}}],["enableshutdownhooks(app",{"_index":624,"title":{},"body":{"injectables/PrismaService.html":{}}}],["encontrado",{"_index":880,"title":{},"body":{"injectables/TestService.html":{},"injectables/UserService.html":{}}}],["end",{"_index":1198,"title":{},"body":{"index.html":{},"license.html":{}}}],["enforceable",{"_index":1706,"title":{},"body":{"license.html":{}}}],["engajamento",{"_index":357,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["ensina",{"_index":547,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["entendam",{"_index":481,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["entidade",{"_index":1763,"title":{},"body":{"todo.html":{}}}],["entire",{"_index":1635,"title":{},"body":{"license.html":{}}}],["entities",{"_index":1394,"title":{},"body":{"license.html":{}}}],["entities/jwtchangepassword.entity",{"_index":1020,"title":{},"body":{"injectables/UserService.html":{}}}],["entities/specialty.entity",{"_index":787,"title":{},"body":{"injectables/SpecialtiesService.html":{}}}],["entities/user.entity",{"_index":967,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["entity",{"_index":1296,"title":{},"body":{"license.html":{}}}],["entregando",{"_index":467,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["equipe",{"_index":1202,"title":{},"body":{"index.html":{}}}],["equivalents",{"_index":1495,"title":{},"body":{"license.html":{}}}],["err",{"_index":1056,"title":{},"body":{"injectables/UserService.html":{}}}],["error",{"_index":1099,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["escolher",{"_index":889,"title":{},"body":{"classes/UpdateResultDto.html":{}}}],["escolherem",{"_index":526,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["escutando",{"_index":487,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["especiais",{"_index":224,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["especialidades",{"_index":729,"title":{},"body":{"injectables/ResultService.html":{}}}],["especialista",{"_index":305,"title":{},"body":{"classes/CreateSpecialtyDto.html":{}}}],["essa",{"_index":1117,"title":{},"body":{"injectables/UserService.html":{}}}],["essential",{"_index":1645,"title":{},"body":{"license.html":{}}}],["est",{"_index":429,"title":{},"body":{"classes/CreateTestDto.html":{},"injectables/SpecialtiesService.html":{},"injectables/TestService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["estabelecer",{"_index":327,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["este",{"_index":1279,"title":{},"body":{"index.html":{}}}],["estruturas",{"_index":552,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["estuda",{"_index":432,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["even",{"_index":1668,"title":{},"body":{"license.html":{}}}],["event",{"_index":1619,"title":{},"body":{"license.html":{}}}],["example",{"_index":225,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateResultDto.html":{},"classes/CreateSpecialtyDto.html":{},"classes/CreateTestDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/UpdateResultDto.html":{},"classes/UpdateUserDto.html":{}}}],["excelência",{"_index":425,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["except",{"_index":1463,"title":{},"body":{"license.html":{}}}],["excluding",{"_index":1606,"title":{},"body":{"license.html":{}}}],["exclusion",{"_index":1681,"title":{},"body":{"license.html":{}}}],["exclusive",{"_index":1424,"title":{},"body":{"license.html":{}}}],["executable",{"_index":1319,"title":{},"body":{"license.html":{}}}],["executioncontext",{"_index":1774,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exercising",{"_index":1393,"title":{},"body":{"license.html":{}}}],["exhibit",{"_index":1318,"title":{},"body":{"license.html":{}}}],["exist",{"_index":600,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["existem",{"_index":728,"title":{},"body":{"injectables/ResultService.html":{},"injectables/UserService.html":{}}}],["expectativas",{"_index":459,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["expiresin",{"_index":161,"title":{},"body":{"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["explicitly",{"_index":1583,"title":{},"body":{"license.html":{}}}],["exploit",{"_index":1434,"title":{},"body":{"license.html":{}}}],["export",{"_index":37,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateResultDto.html":{},"classes/CreateSpecialtyDto.html":{},"classes/CreateTestDto.html":{},"classes/CreateUserDto.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Result.html":{},"controllers/ResultController.html":{},"modules/ResultModule.html":{},"injectables/ResultService.html":{},"controllers/SpecialtiesController.html":{},"modules/SpecialtiesModule.html":{},"injectables/SpecialtiesService.html":{},"classes/Specialty.html":{},"classes/Test.html":{},"controllers/TestController.html":{},"modules/TestModule.html":{},"injectables/TestService.html":{},"classes/UpdateResultDto.html":{},"classes/UpdateSpecialtyDto.html":{},"classes/UpdateTestDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":617,"title":{},"body":{"modules/PrismaModule.html":{}}}],["express",{"_index":44,"title":{},"body":{"controllers/AppController.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"dependencies.html":{}}}],["expressed",{"_index":1627,"title":{},"body":{"license.html":{}}}],["extends",{"_index":239,"title":{},"body":{"classes/ChangePasswordDto.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"classes/UpdateResultDto.html":{},"classes/UpdateSpecialtyDto.html":{},"classes/UpdateTestDto.html":{},"classes/UpdateUserDto.html":{}}}],["extent",{"_index":1353,"title":{},"body":{"license.html":{}}}],["extractjwt",{"_index":588,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":595,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["factual",{"_index":1535,"title":{},"body":{"license.html":{}}}],["fail",{"_index":1577,"title":{},"body":{"license.html":{}}}],["fails",{"_index":1587,"title":{},"body":{"license.html":{}}}],["failure",{"_index":1664,"title":{},"body":{"license.html":{}}}],["fair",{"_index":1488,"title":{},"body":{"license.html":{}}}],["false",{"_index":597,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}}}],["features",{"_index":397,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["fee",{"_index":1540,"title":{},"body":{"license.html":{}}}],["feedbacks",{"_index":446,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["felipe",{"_index":1274,"title":{},"body":{"index.html":{},"todo.html":{}}}],["feliz",{"_index":508,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["fifty",{"_index":1411,"title":{},"body":{"license.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateResultDto.html":{},"classes/CreateSpecialtyDto.html":{},"classes/CreateTestDto.html":{},"classes/CreateUserDto.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Result.html":{},"controllers/ResultController.html":{},"modules/ResultModule.html":{},"injectables/ResultService.html":{},"controllers/SpecialtiesController.html":{},"modules/SpecialtiesModule.html":{},"injectables/SpecialtiesService.html":{},"classes/Specialty.html":{},"classes/Test.html":{},"controllers/TestController.html":{},"modules/TestModule.html":{},"injectables/TestService.html":{},"classes/UpdateResultDto.html":{},"classes/UpdateSpecialtyDto.html":{},"classes/UpdateTestDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"license.html":{}}}],["fileinterceptor",{"_index":968,"title":{},"body":{"controllers/UserController.html":{}}}],["files",{"_index":1344,"title":{},"body":{"license.html":{}}}],["finally",{"_index":1584,"title":{},"body":{"license.html":{}}}],["find",{"_index":665,"title":{},"body":{"controllers/ResultController.html":{},"controllers/SpecialtiesController.html":{}}}],["findall",{"_index":652,"title":{},"body":{"controllers/ResultController.html":{},"injectables/ResultService.html":{},"controllers/SpecialtiesController.html":{},"injectables/SpecialtiesService.html":{},"controllers/TestController.html":{},"injectables/TestService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findall(@loggeduser",{"_index":687,"title":{},"body":{"controllers/ResultController.html":{},"controllers/SpecialtiesController.html":{},"controllers/TestController.html":{},"controllers/UserController.html":{}}}],["findall(user",{"_index":660,"title":{},"body":{"controllers/ResultController.html":{},"injectables/ResultService.html":{},"controllers/SpecialtiesController.html":{},"injectables/SpecialtiesService.html":{},"controllers/TestController.html":{},"injectables/TestService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findone",{"_index":653,"title":{},"body":{"controllers/ResultController.html":{},"injectables/ResultService.html":{},"controllers/SpecialtiesController.html":{},"injectables/SpecialtiesService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findone(@param('email",{"_index":984,"title":{},"body":{"controllers/UserController.html":{}}}],["findone(@param('id",{"_index":690,"title":{},"body":{"controllers/ResultController.html":{},"controllers/SpecialtiesController.html":{}}}],["findone(email",{"_index":934,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findone(id",{"_index":663,"title":{},"body":{"controllers/ResultController.html":{},"injectables/ResultService.html":{},"controllers/SpecialtiesController.html":{},"injectables/SpecialtiesService.html":{}}}],["findunique",{"_index":797,"title":{},"body":{"injectables/SpecialtiesService.html":{},"injectables/UserService.html":{}}}],["first",{"_index":1212,"title":{},"body":{"index.html":{},"license.html":{}}}],["fit",{"_index":1632,"title":{},"body":{"license.html":{}}}],["flow",{"_index":464,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["flows",{"_index":472,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["foi",{"_index":452,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["following",{"_index":1242,"title":{},"body":{"index.html":{},"license.html":{}}}],["fora",{"_index":352,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["form",{"_index":1314,"title":{},"body":{"license.html":{}}}],["foto",{"_index":953,"title":{},"body":{"controllers/UserController.html":{}}}],["found",{"_index":1065,"title":{},"body":{"injectables/UserService.html":{}}}],["foundation",{"_index":1713,"title":{},"body":{"license.html":{}}}],["fraca",{"_index":243,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["fraca'})@isnotempty()@apiproperty({description",{"_index":215,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateUserDto.html":{}}}],["fraca'})@isoptional()@apiproperty({description",{"_index":901,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["free",{"_index":1422,"title":{},"body":{"license.html":{}}}],["function",{"_index":1055,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["functions",{"_index":1190,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["fundamentals",{"_index":260,"title":{},"body":{"classes/CreateResultDto.html":{}}}],["fundamentos",{"_index":330,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["função",{"_index":1753,"title":{},"body":{"todo.html":{}}}],["further",{"_index":1524,"title":{},"body":{"license.html":{}}}],["futuras",{"_index":421,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["garantindo",{"_index":478,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["general",{"_index":1382,"title":{},"body":{"license.html":{}}}],["generated",{"_index":608,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["gerencia",{"_index":457,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["gestores",{"_index":1205,"title":{},"body":{"index.html":{}}}],["get('/alltests",{"_index":856,"title":{},"body":{"controllers/TestController.html":{}}}],["get('/alltests')@apioperation({summary",{"_index":840,"title":{},"body":{"controllers/TestController.html":{}}}],["get(':email",{"_index":983,"title":{},"body":{"controllers/UserController.html":{}}}],["get(':id",{"_index":689,"title":{},"body":{"controllers/ResultController.html":{},"controllers/SpecialtiesController.html":{}}}],["get(':id')@apioperation({summary",{"_index":664,"title":{},"body":{"controllers/ResultController.html":{},"controllers/SpecialtiesController.html":{}}}],["get('send/:email",{"_index":976,"title":{},"body":{"controllers/UserController.html":{}}}],["get('send/:email')@apioperation({summary",{"_index":943,"title":{},"body":{"controllers/UserController.html":{}}}],["get('verify/:id",{"_index":973,"title":{},"body":{"controllers/UserController.html":{}}}],["get('verify/:id')@apioperation({summary",{"_index":960,"title":{},"body":{"controllers/UserController.html":{}}}],["get()@apioperation({summary",{"_index":109,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ResultController.html":{},"controllers/SpecialtiesController.html":{}}}],["getappstatus",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":1195,"title":{"index.html":{},"license.html":{},"todo.html":{}},"body":{"index.html":{}}}],["gh",{"_index":1236,"title":{},"body":{"index.html":{}}}],["giovanne",{"_index":1263,"title":{},"body":{"index.html":{}}}],["git",{"_index":465,"title":{},"body":{"classes/CreateTestDto.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["github",{"_index":1232,"title":{},"body":{"index.html":{}}}],["given",{"_index":1717,"title":{},"body":{"license.html":{}}}],["gmail",{"_index":1042,"title":{},"body":{"injectables/UserService.html":{}}}],["gnu",{"_index":1381,"title":{},"body":{"license.html":{}}}],["goodwill",{"_index":1661,"title":{},"body":{"license.html":{}}}],["governed",{"_index":1504,"title":{},"body":{"license.html":{}}}],["grant",{"_index":1351,"title":{},"body":{"license.html":{}}}],["granted",{"_index":1442,"title":{},"body":{"license.html":{}}}],["grants",{"_index":1416,"title":{},"body":{"license.html":{}}}],["guiando",{"_index":488,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["handleerror",{"_index":710,"title":{},"body":{"injectables/ResultService.html":{},"injectables/SpecialtiesService.html":{},"injectables/TestService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"todo.html":{}}}],["handleerror(error",{"_index":1194,"title":{},"body":{"miscellaneous/functions.html":{}}}],["hashedpassword",{"_index":1103,"title":{},"body":{"injectables/UserService.html":{}}}],["having",{"_index":1349,"title":{},"body":{"license.html":{}}}],["held",{"_index":1703,"title":{},"body":{"license.html":{}}}],["hereby",{"_index":1418,"title":{},"body":{"license.html":{}}}],["hereof",{"_index":1701,"title":{},"body":{"license.html":{}}}],["homepage",{"_index":621,"title":{},"body":{"injectables/PrismaService.html":{}}}],["host",{"_index":1037,"title":{},"body":{"injectables/UserService.html":{}}}],["html",{"_index":1051,"title":{},"body":{"injectables/UserService.html":{}}}],["http://localhost:3000",{"_index":1221,"title":{},"body":{"index.html":{}}}],["http://localhost:3000/change/${tokentourl}/${user.id",{"_index":1080,"title":{},"body":{"injectables/UserService.html":{}}}],["http://localhost:3333/api",{"_index":86,"title":{},"body":{"injectables/AppService.html":{}}}],["http://mozilla.org/mpl/2.0",{"_index":1733,"title":{},"body":{"license.html":{}}}],["httpcode",{"_index":117,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpcode(httpstatus.ok",{"_index":135,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpexception",{"_index":874,"title":{},"body":{"injectables/TestService.html":{},"injectables/UserService.html":{}}}],["httpexception('test",{"_index":883,"title":{},"body":{"injectables/TestService.html":{}}}],["httpexception('usuário",{"_index":1130,"title":{},"body":{"injectables/UserService.html":{}}}],["https://github.com/brunabbomfim",{"_index":1273,"title":{},"body":{"index.html":{}}}],["https://github.com/felipe360flp",{"_index":1277,"title":{},"body":{"index.html":{}}}],["https://github.com/hethus",{"_index":1265,"title":{},"body":{"index.html":{}}}],["https://github.com/jcvalgas",{"_index":1269,"title":{},"body":{"index.html":{}}}],["https://github.com/pedroasdoliveira",{"_index":1262,"title":{},"body":{"index.html":{}}}],["https://github.com/pedroasdoliveira/petlove",{"_index":1229,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":118,"title":{},"body":{"controllers/AuthController.html":{}}}],["id",{"_index":194,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"classes/Result.html":{},"controllers/ResultController.html":{},"injectables/ResultService.html":{},"controllers/SpecialtiesController.html":{},"injectables/SpecialtiesService.html":{},"classes/Specialty.html":{},"classes/Test.html":{},"controllers/TestController.html":{},"injectables/TestService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["id:${user.id",{"_index":1079,"title":{},"body":{"injectables/UserService.html":{}}}],["id:string,@loggeduser",{"_index":861,"title":{},"body":{"controllers/TestController.html":{}}}],["id?:string",{"_index":824,"title":{},"body":{"classes/Test.html":{}}}],["identifier",{"_index":1133,"title":{},"body":{"coverage.html":{}}}],["ignoreexpiration",{"_index":596,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["iguais",{"_index":1028,"title":{},"body":{"injectables/UserService.html":{}}}],["ii",{"_index":1462,"title":{},"body":{"license.html":{}}}],["impactar",{"_index":368,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["impacto",{"_index":510,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["impactos",{"_index":483,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["implementa",{"_index":403,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["implementar",{"_index":396,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["implements",{"_index":631,"title":{},"body":{"injectables/PrismaService.html":{}}}],["implied",{"_index":1451,"title":{},"body":{"license.html":{}}}],["import",{"_index":30,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateResultDto.html":{},"classes/CreateSpecialtyDto.html":{},"classes/CreateTestDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ResultController.html":{},"modules/ResultModule.html":{},"injectables/ResultService.html":{},"controllers/SpecialtiesController.html":{},"modules/SpecialtiesModule.html":{},"injectables/SpecialtiesService.html":{},"controllers/TestController.html":{},"modules/TestModule.html":{},"injectables/TestService.html":{},"classes/UpdateResultDto.html":{},"classes/UpdateSpecialtyDto.html":{},"classes/UpdateTestDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"license.html":{}}}],["imports",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ResultModule.html":{},"modules/SpecialtiesModule.html":{},"modules/TestModule.html":{},"modules/UserModule.html":{}}}],["importância",{"_index":371,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["impossible",{"_index":1559,"title":{},"body":{"license.html":{}}}],["inability",{"_index":1555,"title":{},"body":{"license.html":{}}}],["inaccuracies",{"_index":1536,"title":{},"body":{"license.html":{}}}],["incidental",{"_index":1654,"title":{},"body":{"license.html":{}}}],["include",{"_index":1553,"title":{},"body":{"license.html":{}}}],["included",{"_index":1566,"title":{},"body":{"license.html":{}}}],["includes",{"_index":1395,"title":{},"body":{"license.html":{}}}],["including",{"_index":1323,"title":{},"body":{"license.html":{}}}],["incluir",{"_index":1752,"title":{},"body":{"todo.html":{}}}],["incompatible",{"_index":1327,"title":{},"body":{"license.html":{}}}],["incurred",{"_index":1552,"title":{},"body":{"license.html":{}}}],["indemnify",{"_index":1551,"title":{},"body":{"license.html":{}}}],["indemnity",{"_index":1542,"title":{},"body":{"license.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateResultDto.html":{},"classes/CreateSpecialtyDto.html":{},"classes/CreateTestDto.html":{},"classes/CreateUserDto.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"injectables/PrismaService.html":{},"classes/Result.html":{},"controllers/ResultController.html":{},"injectables/ResultService.html":{},"controllers/SpecialtiesController.html":{},"injectables/SpecialtiesService.html":{},"classes/Specialty.html":{},"classes/Test.html":{},"controllers/TestController.html":{},"injectables/TestService.html":{},"classes/UpdateResultDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["indirect",{"_index":1404,"title":{},"body":{"license.html":{}}}],["indirectly",{"_index":1614,"title":{},"body":{"license.html":{}}}],["individuais",{"_index":1211,"title":{},"body":{"index.html":{}}}],["individual",{"_index":1294,"title":{},"body":{"license.html":{}}}],["inestapplication",{"_index":625,"title":{},"body":{"injectables/PrismaService.html":{}}}],["influence",{"_index":278,"title":{},"body":{"classes/CreateSpecialtyDto.html":{},"classes/Result.html":{},"injectables/ResultService.html":{},"classes/Specialty.html":{},"classes/UpdateResultDto.html":{},"miscellaneous/variables.html":{}}}],["influencediff",{"_index":737,"title":{},"body":{"injectables/ResultService.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateResultDto.html":{},"classes/CreateSpecialtyDto.html":{},"classes/CreateTestDto.html":{},"classes/CreateUserDto.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Result.html":{},"controllers/ResultController.html":{},"modules/ResultModule.html":{},"injectables/ResultService.html":{},"controllers/SpecialtiesController.html":{},"modules/SpecialtiesModule.html":{},"injectables/SpecialtiesService.html":{},"classes/Specialty.html":{},"classes/Test.html":{},"controllers/TestController.html":{},"modules/TestModule.html":{},"injectables/TestService.html":{},"classes/UpdateResultDto.html":{},"classes/UpdateSpecialtyDto.html":{},"classes/UpdateTestDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["inform",{"_index":1502,"title":{},"body":{"license.html":{}}}],["informadas",{"_index":1027,"title":{},"body":{"injectables/UserService.html":{}}}],["information",{"_index":760,"title":{},"body":{"controllers/SpecialtiesController.html":{},"controllers/UserController.html":{}}}],["informed",{"_index":1670,"title":{},"body":{"license.html":{}}}],["infringed",{"_index":1373,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":1604,"title":{},"body":{"license.html":{}}}],["infringements",{"_index":1458,"title":{},"body":{"license.html":{}}}],["infringes",{"_index":1615,"title":{},"body":{"license.html":{}}}],["infringing",{"_index":1634,"title":{},"body":{"license.html":{}}}],["initial",{"_index":1315,"title":{},"body":{"license.html":{}}}],["initiate",{"_index":1600,"title":{},"body":{"license.html":{}}}],["injectable",{"_index":77,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/ResultService.html":{},"injectables/SpecialtiesService.html":{},"injectables/TestService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/ResultService.html":{},"injectables/SpecialtiesService.html":{},"injectables/TestService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":78,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/ResultService.html":{},"injectables/SpecialtiesService.html":{},"injectables/TestService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["injury",{"_index":1675,"title":{},"body":{"license.html":{}}}],["inserir",{"_index":1785,"title":{},"body":{"miscellaneous/variables.html":{}}}],["instalação",{"_index":1244,"title":{},"body":{"index.html":{}}}],["install",{"_index":1245,"title":{},"body":{"index.html":{}}}],["integração",{"_index":512,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["intellectual",{"_index":1425,"title":{},"body":{"license.html":{}}}],["intended",{"_index":1489,"title":{},"body":{"license.html":{}}}],["interface",{"_index":575,"title":{"interfaces/JwtPayload.html":{}},"body":{"interfaces/JwtPayload.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":577,"title":{},"body":{"interfaces/JwtPayload.html":{}}}],["intermedeia",{"_index":447,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["ipsum",{"_index":287,"title":{},"body":{"classes/CreateSpecialtyDto.html":{}}}],["isadmin",{"_index":712,"title":{},"body":{"injectables/ResultService.html":{},"injectables/SpecialtiesService.html":{},"injectables/TestService.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"todo.html":{}}}],["isadmin(user",{"_index":788,"title":{},"body":{"injectables/SpecialtiesService.html":{},"injectables/TestService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["isarray",{"_index":389,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["isemail",{"_index":572,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{}}}],["ishashvalid",{"_index":189,"title":{},"body":{"injectables/AuthService.html":{}}}],["isnotempty",{"_index":232,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/UpdateUserDto.html":{}}}],["isnotempty()@isemail()@apiproperty({description",{"_index":563,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isnumber",{"_index":273,"title":{},"body":{"classes/CreateResultDto.html":{},"classes/CreateSpecialtyDto.html":{},"classes/UpdateResultDto.html":{}}}],["isnumber()@apiproperty({description",{"_index":256,"title":{},"body":{"classes/CreateResultDto.html":{}}}],["isnumber({maxdecimalplaces",{"_index":295,"title":{},"body":{"classes/CreateSpecialtyDto.html":{},"classes/UpdateResultDto.html":{}}}],["isoptional",{"_index":233,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/UpdateResultDto.html":{},"classes/UpdateUserDto.html":{}}}],["isso",{"_index":549,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["isstring",{"_index":230,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateSpecialtyDto.html":{},"classes/CreateTestDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/UpdateResultDto.html":{},"classes/UpdateUserDto.html":{}}}],["isstring()@apiproperty({description",{"_index":284,"title":{},"body":{"classes/CreateSpecialtyDto.html":{},"classes/CreateTestDto.html":{},"classes/UpdateResultDto.html":{}}}],["isstring()@isnotempty()@apiproperty({description",{"_index":604,"title":{},"body":{"classes/LoginDto.html":{}}}],["isstring()@isnotempty()@apiproperty({example",{"_index":207,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateUserDto.html":{}}}],["isstring()@isnotempty()@isemail()@apiproperty({description",{"_index":602,"title":{},"body":{"classes/LoginDto.html":{}}}],["isstring({each",{"_index":322,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["isvalided",{"_index":636,"title":{},"body":{"classes/Result.html":{},"classes/UpdateResultDto.html":{}}}],["isverified",{"_index":904,"title":{},"body":{"classes/User.html":{},"injectables/UserService.html":{}}}],["j",{"_index":451,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["javascript",{"_index":1256,"title":{},"body":{"index.html":{}}}],["jira",{"_index":466,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["joão",{"_index":1266,"title":{},"body":{"index.html":{}}}],["js",{"_index":1022,"title":{},"body":{"injectables/UserService.html":{},"dependencies.html":{}}}],["judgment",{"_index":1608,"title":{},"body":{"license.html":{}}}],["judicial",{"_index":1560,"title":{},"body":{"license.html":{}}}],["junior",{"_index":302,"title":{},"body":{"classes/CreateSpecialtyDto.html":{},"classes/UpdateResultDto.html":{}}}],["jurisdiction",{"_index":1554,"title":{},"body":{"license.html":{}}}],["jurisdictions",{"_index":1679,"title":{},"body":{"license.html":{}}}],["jwt",{"_index":156,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"classes/LoginResponseDto.html":{},"modules/ResultModule.html":{},"modules/SpecialtiesModule.html":{},"modules/TestModule.html":{},"modules/UserModule.html":{},"dependencies.html":{}}}],["jwt.strategy",{"_index":153,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtfromrequest",{"_index":594,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":150,"title":{},"body":{"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["jwtmodule.register",{"_index":157,"title":{},"body":{"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["jwtpayload",{"_index":576,"title":{"interfaces/JwtPayload.html":{}},"body":{"interfaces/JwtPayload.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["jwtservice",{"_index":168,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["jwtstrategy",{"_index":146,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["jwtverify",{"_index":1095,"title":{},"body":{"injectables/UserService.html":{}}}],["jwtverify.id",{"_index":1100,"title":{},"body":{"injectables/UserService.html":{}}}],["kind",{"_index":1626,"title":{},"body":{"license.html":{}}}],["known",{"_index":1534,"title":{},"body":{"license.html":{}}}],["language",{"_index":1708,"title":{},"body":{"license.html":{}}}],["larger",{"_index":1340,"title":{},"body":{"license.html":{}}}],["later",{"_index":1387,"title":{},"body":{"license.html":{}}}],["law",{"_index":1677,"title":{},"body":{"license.html":{}}}],["laws",{"_index":1690,"title":{},"body":{"license.html":{}}}],["lead",{"_index":307,"title":{},"body":{"classes/CreateSpecialtyDto.html":{}}}],["learn",{"_index":1234,"title":{},"body":{"index.html":{}}}],["legal",{"_index":1295,"title":{},"body":{"license.html":{}}}],["length",{"_index":573,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["length(15",{"_index":566,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["lesser",{"_index":1383,"title":{},"body":{"license.html":{}}}],["letras",{"_index":218,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["level",{"_index":300,"title":{},"body":{"classes/CreateSpecialtyDto.html":{}}}],["liability",{"_index":1529,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1652,"title":{},"body":{"license.html":{}}}],["licensable",{"_index":1348,"title":{},"body":{"license.html":{}}}],["license",{"_index":1283,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["license(s",{"_index":1522,"title":{},"body":{"license.html":{}}}],["license.1.6",{"_index":1337,"title":{},"body":{"license.html":{}}}],["license.md",{"_index":1288,"title":{},"body":{"index.html":{}}}],["licenses",{"_index":1329,"title":{},"body":{"license.html":{}}}],["licensing",{"_index":1453,"title":{},"body":{"license.html":{}}}],["licença",{"_index":1278,"title":{},"body":{"index.html":{}}}],["lidera",{"_index":423,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["limit",{"_index":1490,"title":{},"body":{"license.html":{}}}],["limitation",{"_index":1370,"title":{},"body":{"license.html":{}}}],["limitations",{"_index":1448,"title":{},"body":{"license.html":{}}}],["limpo",{"_index":386,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["link",{"_index":536,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["list",{"_index":661,"title":{},"body":{"controllers/ResultController.html":{},"controllers/SpecialtiesController.html":{},"controllers/TestController.html":{},"controllers/UserController.html":{}}}],["literal",{"_index":583,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["litigation",{"_index":1601,"title":{},"body":{"license.html":{}}}],["local",{"_index":1178,"title":{},"body":{"dependencies.html":{}}}],["location",{"_index":1736,"title":{},"body":{"license.html":{}}}],["logado",{"_index":794,"title":{},"body":{"injectables/SpecialtiesService.html":{},"injectables/TestService.html":{}}}],["logged",{"_index":131,"title":{},"body":{"controllers/AuthController.html":{}}}],["loggeduser",{"_index":130,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ResultController.html":{},"controllers/SpecialtiesController.html":{},"controllers/TestController.html":{},"controllers/UserController.html":{},"coverage.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["login",{"_index":93,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginResponseDto.html":{},"injectables/UserService.html":{}}}],["login(@body",{"_index":137,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(logindto",{"_index":95,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["logindto",{"_index":96,"title":{"classes/LoginDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginDto.html":{},"coverage.html":{}}}],["loginresponsedto",{"_index":128,"title":{"classes/LoginResponseDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginResponseDto.html":{},"coverage.html":{}}}],["logos",{"_index":1468,"title":{},"body":{"license.html":{}}}],["look",{"_index":1241,"title":{},"body":{"index.html":{},"license.html":{}}}],["lorem",{"_index":286,"title":{},"body":{"classes/CreateSpecialtyDto.html":{}}}],["loss",{"_index":1660,"title":{},"body":{"license.html":{}}}],["losses",{"_index":1667,"title":{},"body":{"license.html":{}}}],["lost",{"_index":1658,"title":{},"body":{"license.html":{}}}],["love",{"_index":1048,"title":{},"body":{"injectables/UserService.html":{}}}],["made",{"_index":1332,"title":{},"body":{"license.html":{}}}],["maildata",{"_index":1046,"title":{},"body":{"injectables/UserService.html":{}}}],["maintains",{"_index":1686,"title":{},"body":{"license.html":{}}}],["mais",{"_index":433,"title":{},"body":{"classes/CreateTestDto.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["maiúsculas",{"_index":219,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["make",{"_index":845,"title":{},"body":{"controllers/TestController.html":{},"license.html":{}}}],["makes",{"_index":1475,"title":{},"body":{"license.html":{}}}],["making",{"_index":1374,"title":{},"body":{"license.html":{}}}],["malfunction",{"_index":1665,"title":{},"body":{"license.html":{}}}],["management",{"_index":1407,"title":{},"body":{"license.html":{}}}],["manager",{"_index":523,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["manner",{"_index":1512,"title":{},"body":{"license.html":{}}}],["manualmente",{"_index":498,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["maquina",{"_index":1226,"title":{},"body":{"index.html":{}}}],["marks",{"_index":1467,"title":{},"body":{"license.html":{}}}],["matches",{"_index":231,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["matches(/((?=.*\\d)|(?=.*\\w+))(?![.\\n])(?=.*[a",{"_index":242,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["matching",{"_index":48,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateResultDto.html":{},"classes/CreateSpecialtyDto.html":{},"classes/CreateTestDto.html":{},"classes/CreateUserDto.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Result.html":{},"controllers/ResultController.html":{},"modules/ResultModule.html":{},"injectables/ResultService.html":{},"controllers/SpecialtiesController.html":{},"modules/SpecialtiesModule.html":{},"injectables/SpecialtiesService.html":{},"classes/Specialty.html":{},"classes/Test.html":{},"controllers/TestController.html":{},"modules/TestModule.html":{},"injectables/TestService.html":{},"classes/UpdateResultDto.html":{},"classes/UpdateSpecialtyDto.html":{},"classes/UpdateTestDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["material",{"_index":1342,"title":{},"body":{"license.html":{}}}],["math.abs(influencediff",{"_index":743,"title":{},"body":{"injectables/ResultService.html":{}}}],["math.abs(persondiff",{"_index":740,"title":{},"body":{"injectables/ResultService.html":{}}}],["math.abs(processdiff",{"_index":742,"title":{},"body":{"injectables/ResultService.html":{}}}],["math.abs(systemdiff",{"_index":739,"title":{},"body":{"injectables/ResultService.html":{}}}],["math.abs(technologydiff",{"_index":741,"title":{},"body":{"injectables/ResultService.html":{}}}],["matter",{"_index":1700,"title":{},"body":{"license.html":{}}}],["maturidade",{"_index":491,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["maxdecimalplaces",{"_index":316,"title":{},"body":{"classes/CreateSpecialtyDto.html":{},"classes/UpdateResultDto.html":{}}}],["maximum",{"_index":1352,"title":{},"body":{"license.html":{}}}],["means",{"_index":1293,"title":{},"body":{"license.html":{}}}],["melhor",{"_index":528,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["melhorar",{"_index":334,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["menos",{"_index":524,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["mentora",{"_index":449,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["merchantable",{"_index":1631,"title":{},"body":{"license.html":{}}}],["message",{"_index":114,"title":{},"body":{"controllers/AuthController.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateUserDto.html":{},"injectables/SpecialtiesService.html":{},"classes/UpdateUserDto.html":{},"injectables/UserService.html":{}}}],["message:`${user.name",{"_index":141,"title":{},"body":{"controllers/AuthController.html":{}}}],["metadata",{"_index":1181,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":1371,"title":{},"body":{"license.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/ResultController.html":{},"injectables/ResultService.html":{},"controllers/SpecialtiesController.html":{},"injectables/SpecialtiesService.html":{},"controllers/TestController.html":{},"injectables/TestService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["minlength",{"_index":229,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["minlength(6",{"_index":241,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["minlength(6)@isstring()@matches(/((?=.*\\d)|(?=.*\\w+))(?![.\\n])(?=.*[a",{"_index":210,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["minúsculas",{"_index":220,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["miscellaneous",{"_index":1189,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["modification",{"_index":1362,"title":{},"body":{"license.html":{}}}],["modifications",{"_index":1321,"title":{},"body":{"license.html":{}}}],["modified",{"_index":1722,"title":{},"body":{"license.html":{}}}],["modify",{"_index":1430,"title":{},"body":{"license.html":{}}}],["modulares",{"_index":543,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["module",{"_index":49,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/ResultModule.html":{},"modules/SpecialtiesModule.html":{},"modules/TestModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/ResultModule.html":{},"modules/SpecialtiesModule.html":{},"modules/TestModule.html":{},"modules/UserModule.html":{},"todo.html":{}}}],["modules",{"_index":51,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/ResultModule.html":{},"modules/SpecialtiesModule.html":{},"modules/TestModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["monitora",{"_index":415,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["monitorar",{"_index":515,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["more",{"_index":1235,"title":{},"body":{"index.html":{},"license.html":{}}}],["moreover",{"_index":1594,"title":{},"body":{"license.html":{}}}],["mozilla",{"_index":1281,"title":{},"body":{"index.html":{},"license.html":{}}}],["mpl",{"_index":1731,"title":{},"body":{"license.html":{}}}],["mudanças",{"_index":470,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["muito",{"_index":214,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["multermodule",{"_index":1001,"title":{},"body":{"modules/UserModule.html":{}}}],["multermodule.register({dest:'./upload",{"_index":1002,"title":{},"body":{"modules/UserModule.html":{}}}],["multis",{"_index":558,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["multithreading",{"_index":554,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["média",{"_index":405,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["múltiplos",{"_index":560,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["n",{"_index":83,"title":{},"body":{"injectables/AppService.html":{}}}],["na",{"_index":454,"title":{},"body":{"classes/CreateTestDto.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["name",{"_index":103,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/ResultController.html":{},"injectables/ResultService.html":{},"controllers/SpecialtiesController.html":{},"injectables/SpecialtiesService.html":{},"controllers/TestController.html":{},"injectables/TestService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["near",{"_index":744,"title":{},"body":{"injectables/ResultService.html":{}}}],["necessary",{"_index":1469,"title":{},"body":{"license.html":{}}}],["necessário",{"_index":435,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["negligence",{"_index":1650,"title":{},"body":{"license.html":{}}}],["nessa",{"_index":340,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["nesses",{"_index":376,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["nest.js",{"_index":1258,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":31,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ResultController.html":{},"modules/ResultModule.html":{},"injectables/ResultService.html":{},"controllers/SpecialtiesController.html":{},"modules/SpecialtiesModule.html":{},"injectables/SpecialtiesService.html":{},"controllers/TestController.html":{},"modules/TestModule.html":{},"injectables/TestService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":1167,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":151,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":121,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"controllers/ResultController.html":{},"modules/ResultModule.html":{},"controllers/SpecialtiesController.html":{},"modules/SpecialtiesModule.html":{},"controllers/TestController.html":{},"modules/TestModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":969,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":33,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateResultDto.html":{},"classes/CreateSpecialtyDto.html":{},"classes/CreateTestDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"controllers/ResultController.html":{},"controllers/SpecialtiesController.html":{},"controllers/TestController.html":{},"classes/UpdateResultDto.html":{},"classes/UpdateSpecialtyDto.html":{},"classes/UpdateTestDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"dependencies.html":{}}}],["new",{"_index":183,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/ResultService.html":{},"injectables/SpecialtiesService.html":{},"injectables/TestService.html":{},"injectables/UserService.html":{},"coverage.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["newpassword",{"_index":245,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/UpdateUserDto.html":{},"injectables/UserService.html":{}}}],["next.js",{"_index":1239,"title":{},"body":{"index.html":{}}}],["nextrole",{"_index":637,"title":{},"body":{"classes/Result.html":{},"classes/UpdateResultDto.html":{}}}],["nextrolevalue",{"_index":722,"title":{},"body":{"injectables/ResultService.html":{}}}],["nodemailer",{"_index":1019,"title":{},"body":{"injectables/UserService.html":{},"dependencies.html":{}}}],["nodemailer.createtransport",{"_index":1036,"title":{},"body":{"injectables/UserService.html":{}}}],["nome",{"_index":568,"title":{},"body":{"classes/CreateUserDto.html":{},"miscellaneous/variables.html":{}}}],["non",{"_index":1423,"title":{},"body":{"license.html":{}}}],["nos",{"_index":471,"title":{},"body":{"classes/CreateTestDto.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["nossos",{"_index":539,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["notacceptableexception",{"_index":1018,"title":{},"body":{"injectables/UserService.html":{}}}],["notacceptableexception('email",{"_index":1059,"title":{},"body":{"injectables/UserService.html":{}}}],["note",{"_index":1726,"title":{},"body":{"license.html":{}}}],["notfoundexception",{"_index":709,"title":{},"body":{"injectables/ResultService.html":{},"injectables/TestService.html":{},"injectables/UserService.html":{}}}],["notfoundexception('não",{"_index":727,"title":{},"body":{"injectables/ResultService.html":{},"injectables/UserService.html":{}}}],["notfoundexception(`email",{"_index":1064,"title":{},"body":{"injectables/UserService.html":{}}}],["notfoundexception(`email:${email",{"_index":1129,"title":{},"body":{"injectables/UserService.html":{}}}],["notfoundexception(`id:${id",{"_index":879,"title":{},"body":{"injectables/TestService.html":{}}}],["notfoundexception(`registro",{"_index":1112,"title":{},"body":{"injectables/UserService.html":{}}}],["notfoundexception(`user",{"_index":1084,"title":{},"body":{"injectables/UserService.html":{}}}],["nothing",{"_index":1694,"title":{},"body":{"license.html":{}}}],["notice",{"_index":1317,"title":{},"body":{"license.html":{}}}],["notices",{"_index":1525,"title":{},"body":{"license.html":{}}}],["notifies",{"_index":1595,"title":{},"body":{"license.html":{}}}],["notify",{"_index":1588,"title":{},"body":{"license.html":{}}}],["notwithstanding",{"_index":1454,"title":{},"body":{"license.html":{}}}],["nova",{"_index":1102,"title":{},"body":{"injectables/UserService.html":{}}}],["novas",{"_index":1126,"title":{},"body":{"injectables/UserService.html":{}}}],["npm",{"_index":1215,"title":{},"body":{"index.html":{}}}],["null",{"_index":198,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["number",{"_index":255,"title":{},"body":{"classes/CreateResultDto.html":{},"classes/CreateSpecialtyDto.html":{},"classes/Result.html":{},"classes/Specialty.html":{},"classes/UpdateResultDto.html":{},"license.html":{}}}],["não",{"_index":793,"title":{},"body":{"injectables/SpecialtiesService.html":{},"injectables/TestService.html":{},"classes/UpdateResultDto.html":{},"injectables/UserService.html":{}}}],["níveis",{"_index":377,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["nível",{"_index":356,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["números",{"_index":221,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["o",{"_index":463,"title":{},"body":{"classes/CreateTestDto.html":{},"classes/UpdateResultDto.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["obj",{"_index":1781,"title":{},"body":{"miscellaneous/variables.html":{}}}],["obj.email",{"_index":1793,"title":{},"body":{"miscellaneous/variables.html":{}}}],["obj.performance",{"_index":1784,"title":{},"body":{"miscellaneous/variables.html":{}}}],["obj.title",{"_index":1790,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.entries",{"_index":1777,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.values(specialties",{"_index":1782,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.values(test",{"_index":1788,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.values(users",{"_index":1791,"title":{},"body":{"miscellaneous/variables.html":{}}}],["objeto",{"_index":20,"title":{},"body":{"controllers/AppController.html":{}}}],["obligation",{"_index":1547,"title":{},"body":{"license.html":{}}}],["obligations",{"_index":1543,"title":{},"body":{"license.html":{}}}],["obtain",{"_index":1505,"title":{},"body":{"license.html":{}}}],["offer",{"_index":1439,"title":{},"body":{"license.html":{}}}],["offered",{"_index":1548,"title":{},"body":{"license.html":{}}}],["offering",{"_index":1377,"title":{},"body":{"license.html":{}}}],["oi1",{"_index":1052,"title":{},"body":{"injectables/UserService.html":{}}}],["oi2",{"_index":1053,"title":{},"body":{"injectables/UserService.html":{}}}],["olhando",{"_index":416,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["oliveira",{"_index":1261,"title":{},"body":{"index.html":{}}}],["onde",{"_index":1204,"title":{},"body":{"index.html":{}}}],["one",{"_index":1519,"title":{},"body":{"license.html":{}}}],["ongoing",{"_index":1586,"title":{},"body":{"license.html":{}}}],["onmoduleinit",{"_index":623,"title":{},"body":{"injectables/PrismaService.html":{}}}],["open",{"_index":1220,"title":{},"body":{"index.html":{}}}],["option",{"_index":1523,"title":{},"body":{"license.html":{}}}],["optional",{"_index":105,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"classes/Result.html":{},"controllers/ResultController.html":{},"injectables/ResultService.html":{},"controllers/SpecialtiesController.html":{},"injectables/SpecialtiesService.html":{},"classes/Specialty.html":{},"classes/Test.html":{},"controllers/TestController.html":{},"injectables/TestService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["order",{"_index":1561,"title":{},"body":{"license.html":{}}}],["ordinary",{"_index":1571,"title":{},"body":{"license.html":{}}}],["organiza",{"_index":443,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["original",{"_index":1484,"title":{},"body":{"license.html":{}}}],["originally",{"_index":1720,"title":{},"body":{"license.html":{}}}],["os",{"_index":329,"title":{},"body":{"classes/CreateTestDto.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["others",{"_index":1306,"title":{},"body":{"license.html":{}}}],["otherwise",{"_index":1409,"title":{},"body":{"license.html":{}}}],["ou",{"_index":222,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateTestDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateResultDto.html":{},"classes/UpdateUserDto.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["out",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/ResultModule.html":{},"modules/SpecialtiesModule.html":{},"modules/TestModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["outro",{"_index":520,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["outros",{"_index":350,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["outstanding",{"_index":1413,"title":{},"body":{"license.html":{}}}],["overview",{"_index":1743,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["ownership",{"_index":1410,"title":{},"body":{"license.html":{}}}],["owns",{"_index":1300,"title":{},"body":{"license.html":{}}}],["p1l2u3s",{"_index":1073,"title":{},"body":{"injectables/UserService.html":{}}}],["package",{"_index":1165,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padrões",{"_index":532,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["page",{"_index":1063,"title":{},"body":{"injectables/UserService.html":{}}}],["para",{"_index":417,"title":{},"body":{"classes/CreateTestDto.html":{},"classes/UpdateResultDto.html":{},"injectables/UserService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["param",{"_index":41,"title":{},"body":{"controllers/AppController.html":{},"controllers/ResultController.html":{},"controllers/SpecialtiesController.html":{},"controllers/TestController.html":{},"controllers/UserController.html":{}}}],["param('email",{"_index":987,"title":{},"body":{"controllers/UserController.html":{}}}],["param('id",{"_index":771,"title":{},"body":{"controllers/SpecialtiesController.html":{},"controllers/UserController.html":{}}}],["param('resettoken",{"_index":980,"title":{},"body":{"controllers/UserController.html":{}}}],["parameters",{"_index":102,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/ResultController.html":{},"injectables/ResultService.html":{},"controllers/SpecialtiesController.html":{},"injectables/SpecialtiesService.html":{},"controllers/TestController.html":{},"injectables/TestService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["part",{"_index":1437,"title":{},"body":{"license.html":{}}}],["partial",{"_index":798,"title":{},"body":{"injectables/SpecialtiesService.html":{}}}],["partialtype",{"_index":228,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/UpdateResultDto.html":{},"classes/UpdateSpecialtyDto.html":{},"classes/UpdateTestDto.html":{},"classes/UpdateUserDto.html":{}}}],["partialtype(createresultdto",{"_index":896,"title":{},"body":{"classes/UpdateResultDto.html":{}}}],["partialtype(createspecialtydto",{"_index":898,"title":{},"body":{"classes/UpdateSpecialtyDto.html":{}}}],["partialtype(createtestdto",{"_index":900,"title":{},"body":{"classes/UpdateTestDto.html":{}}}],["partialtype(createuserdto",{"_index":240,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/UpdateUserDto.html":{}}}],["particular",{"_index":1308,"title":{},"body":{"license.html":{}}}],["party",{"_index":1669,"title":{},"body":{"license.html":{}}}],["party's",{"_index":1461,"title":{},"body":{"license.html":{}}}],["pass",{"_index":1044,"title":{},"body":{"injectables/UserService.html":{}}}],["passou",{"_index":891,"title":{},"body":{"classes/UpdateResultDto.html":{}}}],["passport",{"_index":590,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":152,"title":{},"body":{"modules/AuthModule.html":{},"modules/ResultModule.html":{},"modules/SpecialtiesModule.html":{},"modules/TestModule.html":{},"modules/UserModule.html":{}}}],["passportmodule.register",{"_index":154,"title":{},"body":{"modules/AuthModule.html":{},"modules/ResultModule.html":{},"modules/SpecialtiesModule.html":{},"modules/TestModule.html":{},"modules/UserModule.html":{}}}],["passportstrategy",{"_index":587,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":592,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":178,"title":{},"body":{"injectables/AuthService.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["patch",{"_index":676,"title":{},"body":{"controllers/ResultController.html":{},"controllers/SpecialtiesController.html":{},"controllers/TestController.html":{},"controllers/UserController.html":{}}}],["patch(':email",{"_index":986,"title":{},"body":{"controllers/UserController.html":{}}}],["patch(':id",{"_index":692,"title":{},"body":{"controllers/ResultController.html":{},"controllers/SpecialtiesController.html":{},"controllers/TestController.html":{}}}],["patch(':id')@apioperation({summary",{"_index":672,"title":{},"body":{"controllers/ResultController.html":{},"controllers/SpecialtiesController.html":{},"controllers/TestController.html":{}}}],["patch('change/password/:resettoken/:id",{"_index":979,"title":{},"body":{"controllers/UserController.html":{}}}],["patch('change/password/:resettoken/:id')@apioperation({summary",{"_index":926,"title":{},"body":{"controllers/UserController.html":{}}}],["patent",{"_index":1366,"title":{},"body":{"license.html":{}}}],["pattern",{"_index":521,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["payload",{"_index":585,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}}}],["payload.email",{"_index":599,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["pdi",{"_index":456,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["pedro",{"_index":1260,"title":{},"body":{"index.html":{}}}],["pedroasdoliveira/petlove",{"_index":1238,"title":{},"body":{"index.html":{}}}],["pelo",{"_index":360,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["pequenos",{"_index":400,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["percent",{"_index":1412,"title":{},"body":{"license.html":{}}}],["perfil",{"_index":955,"title":{},"body":{"controllers/UserController.html":{}}}],["perform",{"_index":1432,"title":{},"body":{"license.html":{}}}],["performance",{"_index":279,"title":{},"body":{"classes/CreateSpecialtyDto.html":{},"injectables/ResultService.html":{},"classes/Specialty.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["performances",{"_index":460,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["performed",{"_index":674,"title":{},"body":{"controllers/ResultController.html":{}}}],["permissão",{"_index":1115,"title":{},"body":{"injectables/UserService.html":{}}}],["permita",{"_index":513,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["permits",{"_index":1520,"title":{},"body":{"license.html":{}}}],["permitted",{"_index":1478,"title":{},"body":{"license.html":{}}}],["person",{"_index":251,"title":{},"body":{"classes/CreateResultDto.html":{},"classes/CreateSpecialtyDto.html":{},"classes/CreateTestDto.html":{},"classes/Result.html":{},"injectables/ResultService.html":{},"classes/Specialty.html":{},"classes/Test.html":{},"injectables/TestService.html":{},"classes/UpdateResultDto.html":{},"miscellaneous/variables.html":{}}}],["person:string",{"_index":827,"title":{},"body":{"classes/Test.html":{}}}],["personal",{"_index":1674,"title":{},"body":{"license.html":{}}}],["persondiff",{"_index":734,"title":{},"body":{"injectables/ResultService.html":{}}}],["persons",{"_index":309,"title":{},"body":{"classes/CreateSpecialtyDto.html":{}}}],["pessoa",{"_index":325,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["pessoas",{"_index":437,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["pet",{"_index":1047,"title":{},"body":{"injectables/UserService.html":{}}}],["petlove",{"_index":569,"title":{},"body":{"classes/CreateUserDto.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["petlove@123",{"_index":208,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/UpdateUserDto.html":{},"miscellaneous/variables.html":{}}}],["petlove@bootcamp.com",{"_index":1796,"title":{},"body":{"miscellaneous/variables.html":{}}}],["petlove@gmail.com",{"_index":564,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{}}}],["place",{"_index":1688,"title":{},"body":{"license.html":{}}}],["placed",{"_index":1564,"title":{},"body":{"license.html":{}}}],["planos",{"_index":427,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["please",{"_index":84,"title":{},"body":{"injectables/AppService.html":{}}}],["pleno",{"_index":303,"title":{},"body":{"classes/CreateSpecialtyDto.html":{}}}],["pode",{"_index":1122,"title":{},"body":{"injectables/UserService.html":{}}}],["por",{"_index":485,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["port",{"_index":1039,"title":{},"body":{"injectables/UserService.html":{}}}],["portions",{"_index":1324,"title":{},"body":{"license.html":{}}}],["possam",{"_index":1206,"title":{},"body":{"index.html":{}}}],["possibility",{"_index":1671,"title":{},"body":{"license.html":{}}}],["possible",{"_index":1354,"title":{},"body":{"license.html":{}}}],["post",{"_index":116,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ResultController.html":{},"controllers/SpecialtiesController.html":{},"controllers/TestController.html":{},"controllers/UserController.html":{}}}],["post('/create",{"_index":853,"title":{},"body":{"controllers/TestController.html":{},"controllers/UserController.html":{}}}],["post('/create')@apioperation({summary",{"_index":837,"title":{},"body":{"controllers/TestController.html":{},"controllers/UserController.html":{}}}],["post('upload",{"_index":992,"title":{},"body":{"controllers/UserController.html":{}}}],["post()@apioperation({summary",{"_index":658,"title":{},"body":{"controllers/ResultController.html":{},"controllers/SpecialtiesController.html":{}}}],["post()@httpcode(httpstatus.ok)@apioperation({summary",{"_index":97,"title":{},"body":{"controllers/AuthController.html":{}}}],["power",{"_index":1402,"title":{},"body":{"license.html":{}}}],["preferred",{"_index":1391,"title":{},"body":{"license.html":{}}}],["prefix",{"_index":91,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ResultController.html":{},"controllers/SpecialtiesController.html":{},"controllers/TestController.html":{},"controllers/UserController.html":{}}}],["prev.totaldiff",{"_index":747,"title":{},"body":{"injectables/ResultService.html":{}}}],["prevent",{"_index":1695,"title":{},"body":{"license.html":{}}}],["principal",{"_index":1687,"title":{},"body":{"license.html":{}}}],["princípios",{"_index":344,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["prior",{"_index":1590,"title":{},"body":{"license.html":{}}}],["prisma",{"_index":170,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/ResultService.html":{},"injectables/SpecialtiesService.html":{},"injectables/TestService.html":{},"injectables/UserService.html":{},"coverage.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["prisma.service",{"_index":618,"title":{},"body":{"modules/PrismaModule.html":{}}}],["prisma.specialtie.upsert",{"_index":1783,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prisma.specialtiecreateinput",{"_index":789,"title":{},"body":{"injectables/SpecialtiesService.html":{},"miscellaneous/variables.html":{}}}],["prisma.test.upsert",{"_index":1789,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prisma.testcreateinput",{"_index":875,"title":{},"body":{"injectables/TestService.html":{},"miscellaneous/variables.html":{}}}],["prisma.testupdateinput",{"_index":881,"title":{},"body":{"injectables/TestService.html":{}}}],["prisma.user.upsert",{"_index":1792,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prisma.usercreateinput",{"_index":1029,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["prisma.userupdateinput",{"_index":1061,"title":{},"body":{"injectables/UserService.html":{}}}],["prisma/client",{"_index":630,"title":{},"body":{"injectables/PrismaService.html":{},"injectables/ResultService.html":{},"injectables/SpecialtiesService.html":{},"injectables/TestService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["prisma/prisma.module",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["prisma/prisma.service",{"_index":173,"title":{},"body":{"injectables/AuthService.html":{}}}],["prismaclient",{"_index":620,"title":{},"body":{"injectables/PrismaService.html":{},"miscellaneous/variables.html":{}}}],["prismamodule",{"_index":57,"title":{"modules/PrismaModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/ResultModule.html":{},"modules/SpecialtiesModule.html":{},"modules/TestModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["prismaservice",{"_index":167,"title":{"injectables/PrismaService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"injectables/ResultService.html":{},"injectables/SpecialtiesService.html":{},"injectables/TestService.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["private",{"_index":175,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["problema",{"_index":529,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["process",{"_index":252,"title":{},"body":{"classes/CreateResultDto.html":{},"classes/CreateSpecialtyDto.html":{},"classes/CreateTestDto.html":{},"classes/Result.html":{},"injectables/ResultService.html":{},"classes/Specialty.html":{},"classes/Test.html":{},"injectables/TestService.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["process.env.jwt_change_password_secret",{"_index":1069,"title":{},"body":{"injectables/UserService.html":{}}}],["process.env.jwt_secret",{"_index":159,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"modules/UserModule.html":{}}}],["process:string",{"_index":831,"title":{},"body":{"classes/Test.html":{}}}],["processdiff",{"_index":736,"title":{},"body":{"injectables/ResultService.html":{}}}],["processos",{"_index":358,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["procurando",{"_index":474,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["produto",{"_index":501,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["produção",{"_index":413,"title":{},"body":{"classes/CreateTestDto.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["professional",{"_index":299,"title":{},"body":{"classes/CreateSpecialtyDto.html":{}}}],["proficiência",{"_index":390,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["profile",{"_index":94,"title":{},"body":{"controllers/AuthController.html":{}}}],["profile(@loggeduser",{"_index":140,"title":{},"body":{"controllers/AuthController.html":{}}}],["profile(user",{"_index":107,"title":{},"body":{"controllers/AuthController.html":{}}}],["profits",{"_index":1659,"title":{},"body":{"license.html":{}}}],["progress",{"_index":1759,"title":{},"body":{"todo.html":{}}}],["prohibited",{"_index":1568,"title":{},"body":{"license.html":{}}}],["prohibits",{"_index":1678,"title":{},"body":{"license.html":{}}}],["project",{"_index":1230,"title":{},"body":{"index.html":{}}}],["projeto",{"_index":1199,"title":{},"body":{"index.html":{}}}],["projetopetlover@gmail.com",{"_index":1043,"title":{},"body":{"injectables/UserService.html":{}}}],["projetos",{"_index":533,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["promise",{"_index":106,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["promove",{"_index":445,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["properties",{"_index":205,"title":{"properties.html":{}},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateResultDto.html":{},"classes/CreateSpecialtyDto.html":{},"classes/CreateTestDto.html":{},"classes/CreateUserDto.html":{},"interfaces/JwtPayload.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"injectables/PrismaService.html":{},"classes/Result.html":{},"classes/Specialty.html":{},"classes/Test.html":{},"classes/UpdateResultDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"properties.html":{}}}],["property",{"_index":1426,"title":{},"body":{"license.html":{}}}],["prove",{"_index":1638,"title":{},"body":{"license.html":{}}}],["provided",{"_index":1518,"title":{},"body":{"license.html":{}}}],["providers",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/ResultModule.html":{},"modules/SpecialtiesModule.html":{},"modules/TestModule.html":{},"modules/UserModule.html":{}}}],["provides",{"_index":1707,"title":{},"body":{"license.html":{}}}],["provision",{"_index":1702,"title":{},"body":{"license.html":{}}}],["provisionally",{"_index":1580,"title":{},"body":{"license.html":{}}}],["provisions",{"_index":1693,"title":{},"body":{"license.html":{}}}],["prs",{"_index":550,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["public",{"_index":1282,"title":{},"body":{"index.html":{},"license.html":{}}}],["publish",{"_index":1716,"title":{},"body":{"license.html":{}}}],["published",{"_index":1721,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":1633,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":1400,"title":{},"body":{"license.html":{}}}],["put",{"_index":1735,"title":{},"body":{"license.html":{}}}],["qual",{"_index":527,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["qualidade",{"_index":335,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["qualidades",{"_index":1210,"title":{},"body":{"index.html":{}}}],["quality",{"_index":1637,"title":{},"body":{"license.html":{}}}],["quando",{"_index":434,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["que",{"_index":479,"title":{},"body":{"classes/CreateTestDto.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["questionarios",{"_index":1208,"title":{},"body":{"index.html":{}}}],["rea",{"_index":546,"title":{},"body":{"classes/CreateTestDto.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["readme",{"_index":1756,"title":{},"body":{"todo.html":{}}}],["readonly",{"_index":40,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/ResultController.html":{},"injectables/ResultService.html":{},"controllers/SpecialtiesController.html":{},"injectables/SpecialtiesService.html":{},"controllers/TestController.html":{},"injectables/TestService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["reasonable",{"_index":1510,"title":{},"body":{"license.html":{}}}],["reavaliar",{"_index":477,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["recebe",{"_index":14,"title":{},"body":{"controllers/AppController.html":{}}}],["receipt",{"_index":1598,"title":{},"body":{"license.html":{}}}],["received",{"_index":1596,"title":{},"body":{"license.html":{}}}],["receiving",{"_index":98,"title":{},"body":{"controllers/AuthController.html":{}}}],["recipient",{"_index":1515,"title":{},"body":{"license.html":{}}}],["recipients",{"_index":1503,"title":{},"body":{"license.html":{}}}],["record",{"_index":1111,"title":{},"body":{"injectables/UserService.html":{}}}],["recover",{"_index":927,"title":{},"body":{"controllers/UserController.html":{}}}],["reduzindo",{"_index":408,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["reference",{"_index":1691,"title":{},"body":{"license.html":{}}}],["references",{"_index":1725,"title":{},"body":{"license.html":{}}}],["referente",{"_index":1203,"title":{},"body":{"index.html":{}}}],["reflect",{"_index":1180,"title":{},"body":{"dependencies.html":{}}}],["reformed",{"_index":1705,"title":{},"body":{"license.html":{}}}],["regulation",{"_index":1558,"title":{},"body":{"license.html":{}}}],["reinstated",{"_index":1579,"title":{},"body":{"license.html":{}}}],["relacionamento",{"_index":349,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["relating",{"_index":1682,"title":{},"body":{"license.html":{}}}],["relevant",{"_index":1737,"title":{},"body":{"license.html":{}}}],["remedy",{"_index":1533,"title":{},"body":{"license.html":{}}}],["remove",{"_index":654,"title":{},"body":{"controllers/ResultController.html":{},"injectables/ResultService.html":{},"controllers/SpecialtiesController.html":{},"injectables/SpecialtiesService.html":{},"controllers/TestController.html":{},"injectables/TestService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"license.html":{}}}],["remove(@param('email",{"_index":990,"title":{},"body":{"controllers/UserController.html":{}}}],["remove(@param('id",{"_index":695,"title":{},"body":{"controllers/ResultController.html":{},"controllers/SpecialtiesController.html":{},"controllers/TestController.html":{}}}],["remove(email",{"_index":938,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["remove(id",{"_index":667,"title":{},"body":{"controllers/ResultController.html":{},"injectables/ResultService.html":{},"controllers/SpecialtiesController.html":{},"injectables/SpecialtiesService.html":{},"controllers/TestController.html":{},"injectables/TestService.html":{}}}],["removed",{"_index":1457,"title":{},"body":{"license.html":{}}}],["rename",{"_index":1724,"title":{},"body":{"license.html":{}}}],["repair",{"_index":1642,"title":{},"body":{"license.html":{}}}],["replace(/=/g",{"_index":1076,"title":{},"body":{"injectables/UserService.html":{}}}],["replace(/\\+/g",{"_index":1072,"title":{},"body":{"injectables/UserService.html":{}}}],["replace(/\\//g",{"_index":1074,"title":{},"body":{"injectables/UserService.html":{}}}],["replace(/e1q2u3a4l/g",{"_index":1091,"title":{},"body":{"injectables/UserService.html":{}}}],["replace(/p1l2u3s/g",{"_index":1089,"title":{},"body":{"injectables/UserService.html":{}}}],["replace(/s1l2a3s4h/g",{"_index":1090,"title":{},"body":{"injectables/UserService.html":{}}}],["repo",{"_index":1237,"title":{},"body":{"index.html":{}}}],["representation",{"_index":1481,"title":{},"body":{"license.html":{}}}],["represents",{"_index":1482,"title":{},"body":{"license.html":{}}}],["reproduce",{"_index":1429,"title":{},"body":{"license.html":{}}}],["req",{"_index":42,"title":{},"body":{"controllers/AppController.html":{}}}],["requer",{"_index":217,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["request",{"_index":43,"title":{},"body":{"controllers/AppController.html":{},"miscellaneous/variables.html":{}}}],["request.user",{"_index":1776,"title":{},"body":{"miscellaneous/variables.html":{}}}],["require('./seed/01",{"_index":1778,"title":{},"body":{"miscellaneous/variables.html":{}}}],["require('./seed/02",{"_index":1779,"title":{},"body":{"miscellaneous/variables.html":{}}}],["require('./seed/03",{"_index":1780,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":1532,"title":{},"body":{"license.html":{}}}],["requirements",{"_index":1471,"title":{},"body":{"license.html":{}}}],["requisitos",{"_index":1219,"title":{},"body":{"index.html":{}}}],["requisição",{"_index":16,"title":{},"body":{"controllers/AppController.html":{}}}],["resellers",{"_index":1622,"title":{},"body":{"license.html":{}}}],["reset",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/ResultModule.html":{},"modules/SpecialtiesModule.html":{},"modules/TestModule.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["resettoken",{"_index":197,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["resettokendecrypted",{"_index":1092,"title":{},"body":{"injectables/UserService.html":{}}}],["resettokentotext",{"_index":1088,"title":{},"body":{"injectables/UserService.html":{}}}],["resolver",{"_index":399,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["resources",{"_index":1243,"title":{},"body":{"index.html":{}}}],["respect",{"_index":1444,"title":{},"body":{"license.html":{}}}],["responsibilities",{"_index":1500,"title":{},"body":{"license.html":{}}}],["responsável",{"_index":484,"title":{},"body":{"classes/CreateTestDto.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["restrict",{"_index":1509,"title":{},"body":{"license.html":{}}}],["result",{"_index":257,"title":{"classes/Result.html":{}},"body":{"classes/CreateResultDto.html":{},"classes/Result.html":{},"controllers/ResultController.html":{},"injectables/ResultService.html":{},"classes/UpdateResultDto.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["result.controller",{"_index":701,"title":{},"body":{"modules/ResultModule.html":{}}}],["result.dto",{"_index":680,"title":{},"body":{"controllers/ResultController.html":{},"injectables/ResultService.html":{},"classes/UpdateResultDto.html":{}}}],["result.dto.ts",{"_index":248,"title":{},"body":{"classes/CreateResultDto.html":{},"classes/UpdateResultDto.html":{},"coverage.html":{}}}],["result.dto.ts:10",{"_index":269,"title":{},"body":{"classes/CreateResultDto.html":{}}}],["result.dto.ts:11",{"_index":895,"title":{},"body":{"classes/UpdateResultDto.html":{}}}],["result.dto.ts:17",{"_index":266,"title":{},"body":{"classes/CreateResultDto.html":{}}}],["result.dto.ts:18",{"_index":893,"title":{},"body":{"classes/UpdateResultDto.html":{}}}],["result.dto.ts:24",{"_index":270,"title":{},"body":{"classes/CreateResultDto.html":{}}}],["result.dto.ts:28",{"_index":888,"title":{},"body":{"classes/UpdateResultDto.html":{}}}],["result.dto.ts:31",{"_index":268,"title":{},"body":{"classes/CreateResultDto.html":{}}}],["result.dto.ts:38",{"_index":264,"title":{},"body":{"classes/CreateResultDto.html":{},"classes/UpdateResultDto.html":{}}}],["result.dto.ts:45",{"_index":272,"title":{},"body":{"classes/CreateResultDto.html":{}}}],["result.dto.ts:52",{"_index":262,"title":{},"body":{"classes/CreateResultDto.html":{}}}],["result.reduce((prev",{"_index":745,"title":{},"body":{"injectables/ResultService.html":{}}}],["result.service",{"_index":678,"title":{},"body":{"controllers/ResultController.html":{},"modules/ResultModule.html":{}}}],["result/result.module",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["resultcontroller",{"_index":650,"title":{"controllers/ResultController.html":{}},"body":{"controllers/ResultController.html":{},"modules/ResultModule.html":{},"coverage.html":{}}}],["resulting",{"_index":1676,"title":{},"body":{"license.html":{}}}],["resultmodule",{"_index":58,"title":{"modules/ResultModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ResultModule.html":{},"modules.html":{},"overview.html":{}}}],["results",{"_index":47,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateResultDto.html":{},"classes/CreateSpecialtyDto.html":{},"classes/CreateTestDto.html":{},"classes/CreateUserDto.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Result.html":{},"controllers/ResultController.html":{},"modules/ResultModule.html":{},"injectables/ResultService.html":{},"controllers/SpecialtiesController.html":{},"modules/SpecialtiesModule.html":{},"injectables/SpecialtiesService.html":{},"classes/Specialty.html":{},"classes/Test.html":{},"controllers/TestController.html":{},"modules/TestModule.html":{},"injectables/TestService.html":{},"classes/UpdateResultDto.html":{},"classes/UpdateSpecialtyDto.html":{},"classes/UpdateTestDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["resultservice",{"_index":677,"title":{"injectables/ResultService.html":{}},"body":{"controllers/ResultController.html":{},"modules/ResultModule.html":{},"injectables/ResultService.html":{},"coverage.html":{},"overview.html":{}}}],["retorna",{"_index":18,"title":{},"body":{"controllers/AppController.html":{}}}],["return",{"_index":45,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/ResultController.html":{},"injectables/ResultService.html":{},"controllers/SpecialtiesController.html":{},"injectables/SpecialtiesService.html":{},"controllers/TestController.html":{},"injectables/TestService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/ResultController.html":{},"injectables/ResultService.html":{},"controllers/SpecialtiesController.html":{},"injectables/SpecialtiesService.html":{},"controllers/TestController.html":{},"injectables/TestService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["revisa",{"_index":551,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["right",{"_index":1350,"title":{},"body":{"license.html":{}}}],["rights",{"_index":1357,"title":{},"body":{"license.html":{}}}],["rimraf",{"_index":1183,"title":{},"body":{"dependencies.html":{}}}],["risk",{"_index":1636,"title":{},"body":{"license.html":{}}}],["roda",{"_index":1249,"title":{},"body":{"index.html":{}}}],["rodando",{"_index":1248,"title":{},"body":{"index.html":{}}}],["role",{"_index":905,"title":{},"body":{"classes/User.html":{},"injectables/UserService.html":{}}}],["royalty",{"_index":1421,"title":{},"body":{"license.html":{}}}],["run",{"_index":1213,"title":{},"body":{"index.html":{}}}],["running",{"_index":82,"title":{},"body":{"injectables/AppService.html":{}}}],["rxjs",{"_index":1185,"title":{},"body":{"dependencies.html":{}}}],["s.o.l.i.d",{"_index":518,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["s1l2a3s4h",{"_index":1075,"title":{},"body":{"injectables/UserService.html":{}}}],["sale",{"_index":1378,"title":{},"body":{"license.html":{}}}],["santos",{"_index":1275,"title":{},"body":{"index.html":{}}}],["schema",{"_index":1762,"title":{},"body":{"todo.html":{}}}],["scope",{"_index":1449,"title":{},"body":{"license.html":{}}}],["score",{"_index":297,"title":{},"body":{"classes/CreateSpecialtyDto.html":{}}}],["se",{"_index":890,"title":{},"body":{"classes/UpdateResultDto.html":{}}}],["secondary",{"_index":1328,"title":{},"body":{"license.html":{}}}],["secret",{"_index":158,"title":{},"body":{"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["secretorkey",{"_index":598,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["section",{"_index":1443,"title":{},"body":{"license.html":{}}}],["sections",{"_index":1497,"title":{},"body":{"license.html":{}}}],["see",{"_index":1223,"title":{},"body":{"index.html":{},"license.html":{}}}],["seeds",{"_index":1149,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["segue",{"_index":461,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["seguindo",{"_index":538,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["select",{"_index":877,"title":{},"body":{"injectables/TestService.html":{},"injectables/UserService.html":{}}}],["sell",{"_index":1438,"title":{},"body":{"license.html":{}}}],["selling",{"_index":1376,"title":{},"body":{"license.html":{}}}],["sempre",{"_index":430,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["send",{"_index":944,"title":{},"body":{"controllers/UserController.html":{}}}],["sendemailforgotpassword",{"_index":922,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["sendemailforgotpassword(@param('email",{"_index":977,"title":{},"body":{"controllers/UserController.html":{}}}],["sendemailforgotpassword(email",{"_index":942,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["sending",{"_index":1082,"title":{},"body":{"injectables/UserService.html":{}}}],["senha",{"_index":213,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"injectables/UserService.html":{}}}],["senhas",{"_index":1026,"title":{},"body":{"injectables/UserService.html":{}}}],["senior",{"_index":304,"title":{},"body":{"classes/CreateSpecialtyDto.html":{}}}],["sent",{"_index":1083,"title":{},"body":{"injectables/UserService.html":{}}}],["separate",{"_index":1343,"title":{},"body":{"license.html":{}}}],["ser",{"_index":1123,"title":{},"body":{"injectables/UserService.html":{}}}],["server",{"_index":81,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["service",{"_index":1041,"title":{},"body":{"injectables/UserService.html":{},"license.html":{},"todo.html":{}}}],["servicing",{"_index":1641,"title":{},"body":{"license.html":{}}}],["seu",{"_index":438,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["seus",{"_index":441,"title":{},"body":{"classes/CreateTestDto.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["shall",{"_index":1617,"title":{},"body":{"license.html":{}}}],["shares",{"_index":1414,"title":{},"body":{"license.html":{}}}],["signoptions",{"_index":160,"title":{},"body":{"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["sim",{"_index":892,"title":{},"body":{"classes/UpdateResultDto.html":{}}}],["simples",{"_index":398,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["simula",{"_index":502,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["sistema",{"_index":557,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["sistemas",{"_index":369,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["sistêmica",{"_index":559,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["sistêmico",{"_index":365,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["sit",{"_index":289,"title":{},"body":{"classes/CreateSpecialtyDto.html":{}}}],["skbfwjaibimleyou",{"_index":1045,"title":{},"body":{"injectables/UserService.html":{}}}],["skill",{"_index":1572,"title":{},"body":{"license.html":{}}}],["slas",{"_index":418,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["smtp.gmail.com",{"_index":1038,"title":{},"body":{"injectables/UserService.html":{}}}],["sob",{"_index":1280,"title":{},"body":{"index.html":{}}}],["software",{"_index":1302,"title":{},"body":{"license.html":{}}}],["software.1.11",{"_index":1365,"title":{},"body":{"license.html":{}}}],["solução",{"_index":497,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["soluções",{"_index":404,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateResultDto.html":{},"classes/CreateSpecialtyDto.html":{},"classes/CreateTestDto.html":{},"classes/CreateUserDto.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Result.html":{},"controllers/ResultController.html":{},"modules/ResultModule.html":{},"injectables/ResultService.html":{},"controllers/SpecialtiesController.html":{},"modules/SpecialtiesModule.html":{},"injectables/SpecialtiesService.html":{},"classes/Specialty.html":{},"classes/Test.html":{},"controllers/TestController.html":{},"modules/TestModule.html":{},"injectables/TestService.html":{},"classes/UpdateResultDto.html":{},"classes/UpdateSpecialtyDto.html":{},"classes/UpdateTestDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"license.html":{}}}],["special",{"_index":1653,"title":{},"body":{"license.html":{}}}],["specialtie",{"_index":1156,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["specialties",{"_index":752,"title":{},"body":{"controllers/SpecialtiesController.html":{},"coverage.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["specialties.controller",{"_index":778,"title":{},"body":{"modules/SpecialtiesModule.html":{}}}],["specialties.service",{"_index":763,"title":{},"body":{"controllers/SpecialtiesController.html":{},"modules/SpecialtiesModule.html":{}}}],["specialties.ts",{"_index":1155,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["specialties/specialties.module",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["specialtiescontroller",{"_index":748,"title":{"controllers/SpecialtiesController.html":{}},"body":{"controllers/SpecialtiesController.html":{},"modules/SpecialtiesModule.html":{},"coverage.html":{}}}],["specialtiesmodule",{"_index":59,"title":{"modules/SpecialtiesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SpecialtiesModule.html":{},"modules.html":{},"overview.html":{}}}],["specialtiesservice",{"_index":762,"title":{"injectables/SpecialtiesService.html":{}},"body":{"controllers/SpecialtiesController.html":{},"modules/SpecialtiesModule.html":{},"injectables/SpecialtiesService.html":{},"coverage.html":{},"overview.html":{}}}],["specialty",{"_index":285,"title":{"classes/Specialty.html":{}},"body":{"classes/CreateSpecialtyDto.html":{},"controllers/SpecialtiesController.html":{},"injectables/SpecialtiesService.html":{},"classes/Specialty.html":{},"coverage.html":{}}}],["specialty.dto",{"_index":764,"title":{},"body":{"controllers/SpecialtiesController.html":{},"injectables/SpecialtiesService.html":{},"classes/UpdateSpecialtyDto.html":{}}}],["specialty.dto.ts",{"_index":276,"title":{},"body":{"classes/CreateSpecialtyDto.html":{},"classes/UpdateSpecialtyDto.html":{},"coverage.html":{}}}],["specialty.dto.ts:11",{"_index":308,"title":{},"body":{"classes/CreateSpecialtyDto.html":{}}}],["specialty.dto.ts:18",{"_index":294,"title":{},"body":{"classes/CreateSpecialtyDto.html":{}}}],["specialty.dto.ts:27",{"_index":313,"title":{},"body":{"classes/CreateSpecialtyDto.html":{}}}],["specialty.dto.ts:36",{"_index":310,"title":{},"body":{"classes/CreateSpecialtyDto.html":{}}}],["specialty.dto.ts:45",{"_index":314,"title":{},"body":{"classes/CreateSpecialtyDto.html":{}}}],["specialty.dto.ts:54",{"_index":311,"title":{},"body":{"classes/CreateSpecialtyDto.html":{}}}],["specialty.dto.ts:63",{"_index":298,"title":{},"body":{"classes/CreateSpecialtyDto.html":{}}}],["specialty.dto.ts:65",{"_index":283,"title":{},"body":{"classes/CreateSpecialtyDto.html":{}}}],["specialty.dto.ts:66",{"_index":315,"title":{},"body":{"classes/CreateSpecialtyDto.html":{}}}],["specialtys",{"_index":723,"title":{},"body":{"injectables/ResultService.html":{}}}],["specialtys.length",{"_index":725,"title":{},"body":{"injectables/ResultService.html":{}}}],["specialtys.map((specialy",{"_index":731,"title":{},"body":{"injectables/ResultService.html":{}}}],["specialy",{"_index":732,"title":{},"body":{"injectables/ResultService.html":{}}}],["specific",{"_index":754,"title":{},"body":{"controllers/SpecialtiesController.html":{},"license.html":{}}}],["squad",{"_index":354,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["src/.../01",{"_index":1769,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../02",{"_index":1768,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../03",{"_index":1767,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../handleerror.utils.ts",{"_index":1192,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../isadmin.utils.ts",{"_index":1193,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../logged",{"_index":1765,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1191,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../seed.ts",{"_index":1766,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:17",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":79,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":80,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":90,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:28",{"_index":101,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:38",{"_index":113,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":147,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":163,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:15",{"_index":171,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:9",{"_index":169,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/dto/login.dto.ts",{"_index":601,"title":{},"body":{"classes/LoginDto.html":{},"coverage.html":{}}}],["src/auth/dto/login.dto.ts:13",{"_index":603,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/dto/login.dto.ts:21",{"_index":605,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/dto/login.response.dto.ts",{"_index":606,"title":{},"body":{"classes/LoginResponseDto.html":{},"coverage.html":{}}}],["src/auth/dto/login.response.dto.ts:10",{"_index":610,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["src/auth/dto/login.response.dto.ts:15",{"_index":611,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["src/auth/jwt.strategy.ts",{"_index":579,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts:16",{"_index":584,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/jwt.strategy.ts:7",{"_index":581,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/logged",{"_index":682,"title":{},"body":{"controllers/ResultController.html":{},"controllers/SpecialtiesController.html":{},"controllers/TestController.html":{},"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/main.ts",{"_index":1145,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/prisma/prisma.module",{"_index":149,"title":{},"body":{"modules/AuthModule.html":{},"modules/ResultModule.html":{},"modules/SpecialtiesModule.html":{},"modules/TestModule.html":{},"modules/UserModule.html":{}}}],["src/prisma/prisma.module.ts",{"_index":616,"title":{},"body":{"modules/PrismaModule.html":{}}}],["src/prisma/prisma.service",{"_index":591,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/ResultService.html":{},"injectables/SpecialtiesService.html":{},"injectables/TestService.html":{},"injectables/UserService.html":{}}}],["src/prisma/prisma.service.ts",{"_index":619,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["src/prisma/prisma.service.ts:11",{"_index":626,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/prisma.service.ts:6",{"_index":629,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/prisma.service.ts:7",{"_index":628,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/seed.ts",{"_index":1148,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/prisma/seed/01",{"_index":1150,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/prisma/seed/02",{"_index":1152,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/prisma/seed/03",{"_index":1154,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/result/dto/create",{"_index":247,"title":{},"body":{"classes/CreateResultDto.html":{},"coverage.html":{}}}],["src/result/dto/update",{"_index":886,"title":{},"body":{"classes/UpdateResultDto.html":{},"coverage.html":{}}}],["src/result/entities/result.entity.ts",{"_index":635,"title":{},"body":{"classes/Result.html":{},"coverage.html":{}}}],["src/result/entities/result.entity.ts:10",{"_index":649,"title":{},"body":{"classes/Result.html":{}}}],["src/result/entities/result.entity.ts:11",{"_index":639,"title":{},"body":{"classes/Result.html":{}}}],["src/result/entities/result.entity.ts:12",{"_index":648,"title":{},"body":{"classes/Result.html":{}}}],["src/result/entities/result.entity.ts:2",{"_index":640,"title":{},"body":{"classes/Result.html":{}}}],["src/result/entities/result.entity.ts:3",{"_index":643,"title":{},"body":{"classes/Result.html":{}}}],["src/result/entities/result.entity.ts:4",{"_index":646,"title":{},"body":{"classes/Result.html":{}}}],["src/result/entities/result.entity.ts:5",{"_index":644,"title":{},"body":{"classes/Result.html":{}}}],["src/result/entities/result.entity.ts:6",{"_index":645,"title":{},"body":{"classes/Result.html":{}}}],["src/result/entities/result.entity.ts:7",{"_index":647,"title":{},"body":{"classes/Result.html":{}}}],["src/result/entities/result.entity.ts:8",{"_index":641,"title":{},"body":{"classes/Result.html":{}}}],["src/result/entities/result.entity.ts:9",{"_index":642,"title":{},"body":{"classes/Result.html":{}}}],["src/result/result.controller.ts",{"_index":651,"title":{},"body":{"controllers/ResultController.html":{},"coverage.html":{}}}],["src/result/result.controller.ts:28",{"_index":659,"title":{},"body":{"controllers/ResultController.html":{}}}],["src/result/result.controller.ts:34",{"_index":662,"title":{},"body":{"controllers/ResultController.html":{}}}],["src/result/result.controller.ts:40",{"_index":666,"title":{},"body":{"controllers/ResultController.html":{}}}],["src/result/result.controller.ts:46",{"_index":675,"title":{},"body":{"controllers/ResultController.html":{}}}],["src/result/result.controller.ts:51",{"_index":669,"title":{},"body":{"controllers/ResultController.html":{}}}],["src/result/result.module.ts",{"_index":700,"title":{},"body":{"modules/ResultModule.html":{}}}],["src/result/result.service.ts",{"_index":702,"title":{},"body":{"injectables/ResultService.html":{},"coverage.html":{}}}],["src/result/result.service.ts:104",{"_index":706,"title":{},"body":{"injectables/ResultService.html":{}}}],["src/result/result.service.ts:11",{"_index":703,"title":{},"body":{"injectables/ResultService.html":{}}}],["src/result/result.service.ts:123",{"_index":708,"title":{},"body":{"injectables/ResultService.html":{}}}],["src/result/result.service.ts:13",{"_index":704,"title":{},"body":{"injectables/ResultService.html":{}}}],["src/result/result.service.ts:172",{"_index":707,"title":{},"body":{"injectables/ResultService.html":{}}}],["src/result/result.service.ts:82",{"_index":705,"title":{},"body":{"injectables/ResultService.html":{}}}],["src/specialties/dto/create",{"_index":275,"title":{},"body":{"classes/CreateSpecialtyDto.html":{},"coverage.html":{}}}],["src/specialties/dto/update",{"_index":897,"title":{},"body":{"classes/UpdateSpecialtyDto.html":{},"coverage.html":{}}}],["src/specialties/entities/specialty.entity.ts",{"_index":801,"title":{},"body":{"classes/Specialty.html":{},"coverage.html":{}}}],["src/specialties/entities/specialty.entity.ts:10",{"_index":802,"title":{},"body":{"classes/Specialty.html":{}}}],["src/specialties/entities/specialty.entity.ts:11",{"_index":811,"title":{},"body":{"classes/Specialty.html":{}}}],["src/specialties/entities/specialty.entity.ts:2",{"_index":804,"title":{},"body":{"classes/Specialty.html":{}}}],["src/specialties/entities/specialty.entity.ts:3",{"_index":806,"title":{},"body":{"classes/Specialty.html":{}}}],["src/specialties/entities/specialty.entity.ts:4",{"_index":803,"title":{},"body":{"classes/Specialty.html":{}}}],["src/specialties/entities/specialty.entity.ts:5",{"_index":809,"title":{},"body":{"classes/Specialty.html":{}}}],["src/specialties/entities/specialty.entity.ts:6",{"_index":807,"title":{},"body":{"classes/Specialty.html":{}}}],["src/specialties/entities/specialty.entity.ts:7",{"_index":810,"title":{},"body":{"classes/Specialty.html":{}}}],["src/specialties/entities/specialty.entity.ts:8",{"_index":808,"title":{},"body":{"classes/Specialty.html":{}}}],["src/specialties/entities/specialty.entity.ts:9",{"_index":805,"title":{},"body":{"classes/Specialty.html":{}}}],["src/specialties/specialties.controller.ts",{"_index":749,"title":{},"body":{"controllers/SpecialtiesController.html":{},"coverage.html":{}}}],["src/specialties/specialties.controller.ts:28",{"_index":751,"title":{},"body":{"controllers/SpecialtiesController.html":{}}}],["src/specialties/specialties.controller.ts:34",{"_index":753,"title":{},"body":{"controllers/SpecialtiesController.html":{}}}],["src/specialties/specialties.controller.ts:40",{"_index":756,"title":{},"body":{"controllers/SpecialtiesController.html":{}}}],["src/specialties/specialties.controller.ts:46",{"_index":761,"title":{},"body":{"controllers/SpecialtiesController.html":{}}}],["src/specialties/specialties.controller.ts:56",{"_index":758,"title":{},"body":{"controllers/SpecialtiesController.html":{}}}],["src/specialties/specialties.module.ts",{"_index":777,"title":{},"body":{"modules/SpecialtiesModule.html":{}}}],["src/specialties/specialties.service.ts",{"_index":779,"title":{},"body":{"injectables/SpecialtiesService.html":{},"coverage.html":{}}}],["src/specialties/specialties.service.ts:12",{"_index":780,"title":{},"body":{"injectables/SpecialtiesService.html":{}}}],["src/specialties/specialties.service.ts:15",{"_index":781,"title":{},"body":{"injectables/SpecialtiesService.html":{}}}],["src/specialties/specialties.service.ts:21",{"_index":782,"title":{},"body":{"injectables/SpecialtiesService.html":{}}}],["src/specialties/specialties.service.ts:29",{"_index":783,"title":{},"body":{"injectables/SpecialtiesService.html":{}}}],["src/specialties/specialties.service.ts:39",{"_index":785,"title":{},"body":{"injectables/SpecialtiesService.html":{}}}],["src/specialties/specialties.service.ts:50",{"_index":784,"title":{},"body":{"injectables/SpecialtiesService.html":{}}}],["src/test",{"_index":318,"title":{},"body":{"classes/CreateTestDto.html":{},"classes/Test.html":{},"controllers/TestController.html":{},"modules/TestModule.html":{},"injectables/TestService.html":{},"classes/UpdateTestDto.html":{},"coverage.html":{}}}],["src/user/dto/create",{"_index":561,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/user/dto/update",{"_index":203,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/user/entities/jwtchangepassword.entity.ts",{"_index":578,"title":{},"body":{"interfaces/JwtPayload.html":{},"coverage.html":{}}}],["src/user/entities/user.entity",{"_index":124,"title":{},"body":{"controllers/AuthController.html":{},"classes/LoginResponseDto.html":{},"controllers/ResultController.html":{},"injectables/ResultService.html":{},"controllers/SpecialtiesController.html":{},"injectables/SpecialtiesService.html":{},"controllers/TestController.html":{},"injectables/TestService.html":{}}}],["src/user/entities/user.entity.ts",{"_index":903,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/user/entities/user.entity.ts:10",{"_index":913,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:11",{"_index":908,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:12",{"_index":918,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:2",{"_index":910,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:3",{"_index":914,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:4",{"_index":909,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:5",{"_index":915,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:6",{"_index":917,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:7",{"_index":907,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:8",{"_index":916,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:9",{"_index":912,"title":{},"body":{"classes/User.html":{}}}],["src/user/user.controller.ts",{"_index":920,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/user/user.controller.ts:102",{"_index":957,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:29",{"_index":930,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:37",{"_index":962,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:45",{"_index":945,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:53",{"_index":928,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:65",{"_index":933,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:73",{"_index":937,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:81",{"_index":949,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:93",{"_index":941,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.module.ts",{"_index":999,"title":{},"body":{"modules/UserModule.html":{}}}],["src/user/user.service.ts",{"_index":1004,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/user/user.service.ts:111",{"_index":1014,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:177",{"_index":1007,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:23",{"_index":1006,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:271",{"_index":1010,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:29",{"_index":1008,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:300",{"_index":1011,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:322",{"_index":1012,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:351",{"_index":1015,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:408",{"_index":1013,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:87",{"_index":1016,"title":{},"body":{"injectables/UserService.html":{}}}],["src/utils/handleerror.utils",{"_index":711,"title":{},"body":{"injectables/ResultService.html":{},"injectables/SpecialtiesService.html":{},"injectables/TestService.html":{},"injectables/UserService.html":{}}}],["src/utils/handleerror.utils.ts",{"_index":1161,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/utils/isadmin.utils",{"_index":713,"title":{},"body":{"injectables/ResultService.html":{},"injectables/SpecialtiesService.html":{},"injectables/TestService.html":{},"injectables/UserService.html":{}}}],["src/utils/isadmin.utils.ts",{"_index":1162,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["start",{"_index":1254,"title":{},"body":{"index.html":{}}}],["started",{"_index":1196,"title":{"index.html":{},"license.html":{},"todo.html":{}},"body":{"index.html":{}}}],["statements",{"_index":1134,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":22,"title":{},"body":{"controllers/AppController.html":{}}}],["statute",{"_index":1557,"title":{},"body":{"license.html":{}}}],["statutory",{"_index":1628,"title":{},"body":{"license.html":{}}}],["steward",{"_index":1714,"title":{},"body":{"license.html":{}}}],["stoppage",{"_index":1662,"title":{},"body":{"license.html":{}}}],["strategy",{"_index":589,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["string",{"_index":29,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateSpecialtyDto.html":{},"classes/CreateTestDto.html":{},"classes/CreateUserDto.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Result.html":{},"controllers/ResultController.html":{},"injectables/ResultService.html":{},"controllers/SpecialtiesController.html":{},"injectables/SpecialtiesService.html":{},"classes/Specialty.html":{},"classes/Test.html":{},"controllers/TestController.html":{},"injectables/TestService.html":{},"classes/UpdateResultDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["sua",{"_index":353,"title":{},"body":{"classes/CreateTestDto.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["subir",{"_index":411,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["subject",{"_index":1050,"title":{},"body":{"injectables/UserService.html":{},"license.html":{}}}],["sublicense",{"_index":1516,"title":{},"body":{"license.html":{}}}],["subsequent",{"_index":1474,"title":{},"body":{"license.html":{}}}],["subsequently",{"_index":1356,"title":{},"body":{"license.html":{}}}],["substance",{"_index":1526,"title":{},"body":{"license.html":{}}}],["successfully",{"_index":142,"title":{},"body":{"controllers/AuthController.html":{},"injectables/SpecialtiesService.html":{}}}],["sucesso",{"_index":440,"title":{},"body":{"classes/CreateTestDto.html":{},"injectables/TestService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["such",{"_index":1320,"title":{},"body":{"license.html":{}}}],["sufficient",{"_index":1486,"title":{},"body":{"license.html":{}}}],["sufficiently",{"_index":1569,"title":{},"body":{"license.html":{}}}],["sugere",{"_index":469,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["summary",{"_index":136,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ResultController.html":{},"controllers/SpecialtiesController.html":{},"controllers/TestController.html":{},"controllers/UserController.html":{}}}],["super",{"_index":593,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["support",{"_index":1541,"title":{},"body":{"license.html":{},"modules.html":{}}}],["survive",{"_index":1624,"title":{},"body":{"license.html":{}}}],["svg",{"_index":1741,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":87,"title":{},"body":{"injectables/AppService.html":{},"dependencies.html":{},"todo.html":{}}}],["system",{"_index":253,"title":{},"body":{"classes/CreateResultDto.html":{},"classes/CreateSpecialtyDto.html":{},"classes/CreateTestDto.html":{},"classes/Result.html":{},"injectables/ResultService.html":{},"classes/Specialty.html":{},"classes/Test.html":{},"injectables/TestService.html":{},"miscellaneous/variables.html":{}}}],["system:string",{"_index":826,"title":{},"body":{"classes/Test.html":{}}}],["systemdiff",{"_index":733,"title":{},"body":{"injectables/ResultService.html":{}}}],["systems",{"_index":312,"title":{},"body":{"classes/CreateSpecialtyDto.html":{}}}],["são",{"_index":337,"title":{},"body":{"classes/CreateTestDto.html":{},"injectables/UserService.html":{}}}],["table",{"_index":1164,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1163,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":1240,"title":{},"body":{"index.html":{}}}],["também",{"_index":414,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["team",{"_index":906,"title":{},"body":{"classes/User.html":{},"injectables/UserService.html":{}}}],["tech",{"_index":306,"title":{},"body":{"classes/CreateSpecialtyDto.html":{}}}],["technology",{"_index":280,"title":{},"body":{"classes/CreateSpecialtyDto.html":{},"classes/Result.html":{},"injectables/ResultService.html":{},"classes/Specialty.html":{},"classes/UpdateResultDto.html":{},"miscellaneous/variables.html":{}}}],["technologydiff",{"_index":735,"title":{},"body":{"injectables/ResultService.html":{}}}],["tecnologia",{"_index":362,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["tem",{"_index":1114,"title":{},"body":{"injectables/UserService.html":{}}}],["temas",{"_index":383,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["terem",{"_index":439,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["terminate",{"_index":1576,"title":{},"body":{"license.html":{}}}],["terminates",{"_index":1585,"title":{},"body":{"license.html":{}}}],["termination",{"_index":1574,"title":{},"body":{"license.html":{}}}],["terms",{"_index":1335,"title":{},"body":{"license.html":{}}}],["test",{"_index":73,"title":{"classes/Test.html":{}},"body":{"modules/AppModule.html":{},"classes/CreateResultDto.html":{},"classes/CreateTestDto.html":{},"controllers/ResultController.html":{},"classes/Test.html":{},"controllers/TestController.html":{},"injectables/TestService.html":{},"classes/UpdateResultDto.html":{},"coverage.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["test.controller",{"_index":867,"title":{},"body":{"modules/TestModule.html":{}}}],["test.dto",{"_index":850,"title":{},"body":{"controllers/TestController.html":{},"injectables/TestService.html":{},"classes/UpdateTestDto.html":{}}}],["test.dto.ts",{"_index":320,"title":{},"body":{"classes/CreateTestDto.html":{},"classes/UpdateTestDto.html":{},"coverage.html":{}}}],["test.dto.ts:10",{"_index":381,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["test.dto.ts:112",{"_index":342,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["test.dto.ts:26",{"_index":370,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["test.dto.ts:42",{"_index":355,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["test.dto.ts:58",{"_index":363,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["test.dto.ts:72",{"_index":378,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["test.dto.ts:85",{"_index":347,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["test.dto.ts:98",{"_index":387,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["test.service",{"_index":849,"title":{},"body":{"controllers/TestController.html":{},"modules/TestModule.html":{}}}],["test:string",{"_index":828,"title":{},"body":{"classes/Test.html":{}}}],["testa",{"_index":496,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["testar",{"_index":1757,"title":{},"body":{"todo.html":{}}}],["testcontroller",{"_index":835,"title":{"controllers/TestController.html":{}},"body":{"controllers/TestController.html":{},"modules/TestModule.html":{},"coverage.html":{}}}],["teste",{"_index":380,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["testes",{"_index":372,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["testmodule",{"_index":60,"title":{"modules/TestModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TestModule.html":{},"modules.html":{},"overview.html":{}}}],["tests",{"_index":841,"title":{},"body":{"controllers/TestController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["testservice",{"_index":848,"title":{"injectables/TestService.html":{}},"body":{"controllers/TestController.html":{},"modules/TestModule.html":{},"injectables/TestService.html":{},"coverage.html":{},"overview.html":{}}}],["text",{"_index":1565,"title":{},"body":{"license.html":{}}}],["then((user",{"_index":1034,"title":{},"body":{"injectables/UserService.html":{}}}],["theory",{"_index":1648,"title":{},"body":{"license.html":{}}}],["thereof",{"_index":1325,"title":{},"body":{"license.html":{}}}],["third",{"_index":1460,"title":{},"body":{"license.html":{}}}],["this.$connect",{"_index":632,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$on('beforeexit",{"_index":633,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.appservice.getappstatus",{"_index":46,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.login(logindto",{"_index":138,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.jwtservice.sign",{"_index":199,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.sign(payload",{"_index":1066,"title":{},"body":{"injectables/UserService.html":{}}}],["this.jwtservice.verify(user.resettoken",{"_index":1097,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.specialtie",{"_index":796,"title":{},"body":{"injectables/SpecialtiesService.html":{}}}],["this.prisma.specialtie.create",{"_index":790,"title":{},"body":{"injectables/SpecialtiesService.html":{}}}],["this.prisma.specialtie.delete",{"_index":799,"title":{},"body":{"injectables/SpecialtiesService.html":{}}}],["this.prisma.specialtie.findmany",{"_index":724,"title":{},"body":{"injectables/ResultService.html":{}}}],["this.prisma.specialtie.findmany().catch(handleerror",{"_index":795,"title":{},"body":{"injectables/SpecialtiesService.html":{}}}],["this.prisma.test",{"_index":876,"title":{},"body":{"injectables/TestService.html":{}}}],["this.prisma.test.delete",{"_index":882,"title":{},"body":{"injectables/TestService.html":{}}}],["this.prisma.test.findmany().catch(handleerror",{"_index":878,"title":{},"body":{"injectables/TestService.html":{}}}],["this.prisma.user",{"_index":1033,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.user.findmany",{"_index":1107,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.user.findunique",{"_index":181,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}}}],["this.prisma.user.update",{"_index":193,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["this.resultservice.create(user",{"_index":686,"title":{},"body":{"controllers/ResultController.html":{}}}],["this.resultservice.findall(user",{"_index":688,"title":{},"body":{"controllers/ResultController.html":{}}}],["this.resultservice.findone(id",{"_index":691,"title":{},"body":{"controllers/ResultController.html":{}}}],["this.resultservice.remove(id",{"_index":696,"title":{},"body":{"controllers/ResultController.html":{}}}],["this.resultservice.update(id",{"_index":694,"title":{},"body":{"controllers/ResultController.html":{}}}],["this.specialty.create(dto",{"_index":768,"title":{},"body":{"controllers/SpecialtiesController.html":{}}}],["this.specialty.findall(user",{"_index":769,"title":{},"body":{"controllers/SpecialtiesController.html":{}}}],["this.specialty.findone(id",{"_index":770,"title":{},"body":{"controllers/SpecialtiesController.html":{}}}],["this.specialty.remove(id",{"_index":773,"title":{},"body":{"controllers/SpecialtiesController.html":{}}}],["this.specialty.update(id",{"_index":772,"title":{},"body":{"controllers/SpecialtiesController.html":{}}}],["this.testservice.create(dto,user",{"_index":855,"title":{},"body":{"controllers/TestController.html":{}}}],["this.testservice.findall(user",{"_index":858,"title":{},"body":{"controllers/TestController.html":{}}}],["this.testservice.remove(id,user",{"_index":862,"title":{},"body":{"controllers/TestController.html":{}}}],["this.testservice.update(id,dto,user",{"_index":860,"title":{},"body":{"controllers/TestController.html":{}}}],["this.userservice.changepassword(id",{"_index":981,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.create(createuserdto",{"_index":972,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findall(user",{"_index":982,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findone(email",{"_index":985,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.remove(email",{"_index":991,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.sendemailforgotpassword(email",{"_index":978,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.update(email",{"_index":988,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.verifyuseremail(id",{"_index":975,"title":{},"body":{"controllers/UserController.html":{}}}],["those",{"_index":1389,"title":{},"body":{"license.html":{}}}],["through",{"_index":755,"title":{},"body":{"controllers/SpecialtiesController.html":{}}}],["throw",{"_index":182,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/ResultService.html":{},"injectables/SpecialtiesService.html":{},"injectables/TestService.html":{},"injectables/UserService.html":{}}}],["time",{"_index":361,"title":{},"body":{"classes/CreateTestDto.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["timely",{"_index":1511,"title":{},"body":{"license.html":{}}}],["times",{"_index":444,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["times/produtos",{"_index":534,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["tipos",{"_index":373,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["title",{"_index":321,"title":{},"body":{"classes/CreateTestDto.html":{},"classes/Test.html":{},"miscellaneous/variables.html":{}}}],["title:'proeficiencia",{"_index":1787,"title":{},"body":{"miscellaneous/variables.html":{}}}],["title?:string",{"_index":825,"title":{},"body":{"classes/Test.html":{}}}],["todo",{"_index":462,"title":{"todo.html":{}},"body":{"classes/CreateTestDto.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["todos",{"_index":480,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["token",{"_index":99,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginResponseDto.html":{},"injectables/UserService.html":{}}}],["token:${tokentourl",{"_index":1078,"title":{},"body":{"injectables/UserService.html":{}}}],["tokencrypt",{"_index":1067,"title":{},"body":{"injectables/UserService.html":{}}}],["tokentourl",{"_index":1071,"title":{},"body":{"injectables/UserService.html":{}}}],["tooling",{"_index":271,"title":{},"body":{"classes/CreateResultDto.html":{}}}],["toolshop",{"_index":254,"title":{},"body":{"classes/CreateResultDto.html":{},"classes/CreateTestDto.html":{},"classes/Test.html":{},"injectables/TestService.html":{},"miscellaneous/variables.html":{}}}],["toolshop:string",{"_index":830,"title":{},"body":{"classes/Test.html":{}}}],["tort",{"_index":1649,"title":{},"body":{"license.html":{}}}],["tostring",{"_index":1070,"title":{},"body":{"injectables/UserService.html":{}}}],["tostring(crypto.enc.utf8",{"_index":1094,"title":{},"body":{"injectables/UserService.html":{}}}],["totaldiff",{"_index":738,"title":{},"body":{"injectables/ResultService.html":{}}}],["trademark",{"_index":1427,"title":{},"body":{"license.html":{}}}],["trademarks",{"_index":1466,"title":{},"body":{"license.html":{}}}],["trainee",{"_index":301,"title":{},"body":{"classes/CreateSpecialtyDto.html":{}}}],["transfer",{"_index":1379,"title":{},"body":{"license.html":{}}}],["transformer",{"_index":1171,"title":{},"body":{"dependencies.html":{}}}],["transporter",{"_index":1035,"title":{},"body":{"injectables/UserService.html":{}}}],["transporter.sendmail(maildata",{"_index":1054,"title":{},"body":{"injectables/UserService.html":{}}}],["true",{"_index":392,"title":{},"body":{"classes/CreateTestDto.html":{},"injectables/TestService.html":{},"injectables/UserService.html":{}}}],["true})@isarray()@arrayminsize(3)@apiproperty({description",{"_index":323,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["true})@isarray()@arrayminsize(5)@apiproperty({description",{"_index":348,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["try",{"_index":1096,"title":{},"body":{"injectables/UserService.html":{}}}],["type",{"_index":104,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateResultDto.html":{},"classes/CreateSpecialtyDto.html":{},"classes/CreateTestDto.html":{},"classes/CreateUserDto.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"injectables/PrismaService.html":{},"classes/Result.html":{},"controllers/ResultController.html":{},"injectables/ResultService.html":{},"controllers/SpecialtiesController.html":{},"injectables/SpecialtiesService.html":{},"classes/Specialty.html":{},"classes/Test.html":{},"controllers/TestController.html":{},"injectables/TestService.html":{},"classes/UpdateResultDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["typescript",{"_index":1257,"title":{},"body":{"index.html":{}}}],["técnicas",{"_index":424,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["técnicos",{"_index":410,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["título",{"_index":379,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["ui",{"_index":1187,"title":{},"body":{"dependencies.html":{}}}],["um",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateTestDto.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["uma",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateTestDto.html":{},"controllers/UserController.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["unauthorizedexception",{"_index":172,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}}}],["unauthorizedexception('invalid",{"_index":184,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["unauthorizedexception('user",{"_index":187,"title":{},"body":{"injectables/AuthService.html":{}}}],["undefined",{"_index":200,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateTestDto.html":{},"injectables/ResultService.html":{},"miscellaneous/functions.html":{}}}],["under",{"_index":1334,"title":{},"body":{"license.html":{}}}],["understand",{"_index":1573,"title":{},"body":{"license.html":{}}}],["unenforceable",{"_index":1704,"title":{},"body":{"license.html":{}}}],["unitário",{"_index":495,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["unknown",{"_index":586,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/ResultService.html":{},"injectables/SpecialtiesService.html":{},"injectables/TestService.html":{},"injectables/UserService.html":{}}}],["unless",{"_index":1581,"title":{},"body":{"license.html":{}}}],["unlicensed",{"_index":1749,"title":{},"body":{"properties.html":{}}}],["unmodified",{"_index":1435,"title":{},"body":{"license.html":{}}}],["unprocessableentityexception",{"_index":786,"title":{},"body":{"injectables/SpecialtiesService.html":{},"injectables/TestService.html":{}}}],["unprocessableentityexception('usuário",{"_index":792,"title":{},"body":{"injectables/SpecialtiesService.html":{},"injectables/TestService.html":{}}}],["until",{"_index":1582,"title":{},"body":{"license.html":{}}}],["update",{"_index":655,"title":{},"body":{"controllers/ResultController.html":{},"injectables/ResultService.html":{},"controllers/SpecialtiesController.html":{},"injectables/SpecialtiesService.html":{},"controllers/TestController.html":{},"injectables/TestService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["update(@param('id",{"_index":693,"title":{},"body":{"controllers/ResultController.html":{},"controllers/TestController.html":{}}}],["update(email",{"_index":946,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["update(id",{"_index":670,"title":{},"body":{"controllers/ResultController.html":{},"injectables/ResultService.html":{},"controllers/SpecialtiesController.html":{},"injectables/SpecialtiesService.html":{},"controllers/TestController.html":{},"injectables/TestService.html":{}}}],["updatedat",{"_index":281,"title":{},"body":{"classes/CreateSpecialtyDto.html":{},"classes/Result.html":{},"classes/Specialty.html":{},"classes/Test.html":{},"injectables/TestService.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["updatedat:date",{"_index":834,"title":{},"body":{"classes/Test.html":{}}}],["updateresultdto",{"_index":671,"title":{"classes/UpdateResultDto.html":{}},"body":{"controllers/ResultController.html":{},"injectables/ResultService.html":{},"classes/UpdateResultDto.html":{},"coverage.html":{}}}],["updatespecialtydto",{"_index":759,"title":{"classes/UpdateSpecialtyDto.html":{}},"body":{"controllers/SpecialtiesController.html":{},"injectables/SpecialtiesService.html":{},"classes/UpdateSpecialtyDto.html":{},"coverage.html":{}}}],["updatetestdto",{"_index":844,"title":{"classes/UpdateTestDto.html":{}},"body":{"controllers/TestController.html":{},"injectables/TestService.html":{},"classes/UpdateTestDto.html":{},"coverage.html":{}}}],["updatetestdto,@loggeduser",{"_index":859,"title":{},"body":{"controllers/TestController.html":{}}}],["updateuserdto",{"_index":238,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/ChangePasswordDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["updateuserdto.confirmpassword",{"_index":1125,"title":{},"body":{"injectables/UserService.html":{}}}],["updateuserdto.newpassword",{"_index":1118,"title":{},"body":{"injectables/UserService.html":{}}}],["updateuserdto.password",{"_index":1119,"title":{},"body":{"injectables/UserService.html":{}}}],["uploadedfiles",{"_index":963,"title":{},"body":{"controllers/UserController.html":{}}}],["uploadfile",{"_index":923,"title":{},"body":{"controllers/UserController.html":{}}}],["uploadfile(@uploadedfiles",{"_index":994,"title":{},"body":{"controllers/UserController.html":{}}}],["uploadfile(file",{"_index":950,"title":{},"body":{"controllers/UserController.html":{}}}],["url",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"injectables/UserService.html":{}}}],["use",{"_index":1428,"title":{},"body":{"license.html":{}}}],["used",{"_index":1307,"title":{},"body":{"license.html":{}}}],["useguards",{"_index":119,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ResultController.html":{},"controllers/SpecialtiesController.html":{},"controllers/TestController.html":{},"controllers/UserController.html":{}}}],["useguards(authguard",{"_index":139,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ResultController.html":{},"controllers/SpecialtiesController.html":{},"controllers/TestController.html":{},"controllers/UserController.html":{}}}],["useguards(undefined)@apibearerauth()@delete(':email')@apioperation({summary",{"_index":939,"title":{},"body":{"controllers/UserController.html":{}}}],["useguards(undefined)@apibearerauth()@get(':email')@apioperation({summary",{"_index":935,"title":{},"body":{"controllers/UserController.html":{}}}],["useguards(undefined)@apibearerauth()@get()@apioperation({summary",{"_index":931,"title":{},"body":{"controllers/UserController.html":{}}}],["useguards(undefined)@apibearerauth()@patch(':email')@apioperation({summary",{"_index":947,"title":{},"body":{"controllers/UserController.html":{}}}],["useguards(undefined)@apibearerauth()@post('upload')@apioperation({summary",{"_index":951,"title":{},"body":{"controllers/UserController.html":{}}}],["useinterceptors",{"_index":964,"title":{},"body":{"controllers/UserController.html":{}}}],["useinterceptors(fileinterceptor('file",{"_index":993,"title":{},"body":{"controllers/UserController.html":{}}}],["user",{"_index":108,"title":{"classes/User.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"controllers/ResultController.html":{},"injectables/ResultService.html":{},"controllers/SpecialtiesController.html":{},"injectables/SpecialtiesService.html":{},"controllers/TestController.html":{},"injectables/TestService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["user'})@useguards(undefined)@apibearerauth",{"_index":112,"title":{},"body":{"controllers/AuthController.html":{}}}],["user.controller",{"_index":1000,"title":{},"body":{"modules/UserModule.html":{}}}],["user.decorator",{"_index":132,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ResultController.html":{},"controllers/SpecialtiesController.html":{},"controllers/TestController.html":{},"controllers/UserController.html":{}}}],["user.decorator.ts",{"_index":1143,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.dto",{"_index":237,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["user.dto.ts",{"_index":204,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:19",{"_index":570,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:23",{"_index":902,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:27",{"_index":565,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:38",{"_index":226,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["user.dto.ts:40",{"_index":571,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:45",{"_index":209,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["user.dto.ts:47",{"_index":562,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.email",{"_index":1049,"title":{},"body":{"injectables/UserService.html":{}}}],["user.id",{"_index":195,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["user.isadmin",{"_index":1113,"title":{},"body":{"injectables/UserService.html":{}}}],["user.isverified",{"_index":186,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["user.password",{"_index":191,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"miscellaneous/variables.html":{}}}],["user.resettoken",{"_index":1085,"title":{},"body":{"injectables/UserService.html":{}}}],["user.service",{"_index":966,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["user.ts",{"_index":1151,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user/user.module",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["user:user",{"_index":612,"title":{},"body":{"classes/LoginResponseDto.html":{},"controllers/TestController.html":{}}}],["usercontroller",{"_index":919,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userid",{"_index":638,"title":{},"body":{"classes/Result.html":{}}}],["usermodule",{"_index":61,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["users",{"_index":932,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userservice",{"_index":965,"title":{"injectables/UserService.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["using",{"_index":1375,"title":{},"body":{"license.html":{}}}],["usuário",{"_index":216,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateResultDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{}}}],["usuário'})@useinterceptors(undefined",{"_index":956,"title":{},"body":{"controllers/UserController.html":{}}}],["usuários",{"_index":1109,"title":{},"body":{"injectables/UserService.html":{}}}],["utilizando",{"_index":1227,"title":{},"body":{"index.html":{}}}],["utilize",{"_index":1251,"title":{},"body":{"index.html":{}}}],["v",{"_index":1730,"title":{},"body":{"license.html":{}}}],["validate",{"_index":580,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":582,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validator",{"_index":234,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateResultDto.html":{},"classes/CreateSpecialtyDto.html":{},"classes/CreateTestDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/UpdateResultDto.html":{},"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["validly",{"_index":1623,"title":{},"body":{"license.html":{}}}],["value",{"_index":1771,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":1144,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1764,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vazia",{"_index":1124,"title":{},"body":{"injectables/UserService.html":{}}}],["veja",{"_index":1286,"title":{},"body":{"index.html":{}}}],["vercel",{"_index":1247,"title":{},"body":{"index.html":{}}}],["verified",{"_index":188,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["verify",{"_index":961,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["verifyuseremail",{"_index":924,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["verifyuseremail(@param('id",{"_index":974,"title":{},"body":{"controllers/UserController.html":{}}}],["verifyuseremail(id",{"_index":959,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["version",{"_index":1284,"title":{},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["versions",{"_index":1388,"title":{},"body":{"license.html":{}}}],["vertente",{"_index":341,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["view",{"_index":936,"title":{},"body":{"controllers/UserController.html":{}}}],["vitor",{"_index":1267,"title":{},"body":{"index.html":{}}}],["voc",{"_index":394,"title":{},"body":{"classes/CreateTestDto.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["void",{"_index":958,"title":{},"body":{"controllers/UserController.html":{}}}],["want",{"_index":1723,"title":{},"body":{"license.html":{}}}],["warranties",{"_index":1629,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1528,"title":{},"body":{"license.html":{}}}],["whether",{"_index":1355,"title":{},"body":{"license.html":{}}}],["wide",{"_index":1420,"title":{},"body":{"license.html":{}}}],["within",{"_index":1531,"title":{},"body":{"license.html":{}}}],["without",{"_index":1369,"title":{},"body":{"license.html":{}}}],["work",{"_index":1338,"title":{},"body":{"license.html":{}}}],["world",{"_index":1419,"title":{},"body":{"license.html":{}}}],["yarn",{"_index":1217,"title":{},"body":{"index.html":{}}}],["z",{"_index":212,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["z])(?=.*[a",{"_index":211,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["zoom",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/ResultModule.html":{},"modules/SpecialtiesModule.html":{},"modules/TestModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAppStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAppStatus\n                        \n                    \n                \n            \n            \n                \ngetAppStatus()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:17\n                \n            \n\n\n            \n                \n                    Recebe uma requisição GET e retorna um objeto de status\nda aplicação com a URL de documentação\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        Objeto de status da aplicação\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport { AppService } from './app.service';\n\n@ApiTags('Status')\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  /**\n\t * Recebe uma requisição GET e retorna um objeto de status\n\t * da aplicação com a URL de documentação\n\t * @param req Objeto de Request do Express\n\t * @returns Objeto de status da aplicação\n\t */\n  @Get()\n  getAppStatus(): string {\n    return this.appService.getAppStatus();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nResultModule\n\nResultModule\n\nAppModule -->\n\nResultModule->AppModule\n\n\n\n\n\nSpecialtiesModule\n\nSpecialtiesModule\n\nAppModule -->\n\nSpecialtiesModule->AppModule\n\n\n\n\n\nTestModule\n\nTestModule\n\nAppModule -->\n\nTestModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            PrismaModule\n                        \n                        \n                            ResultModule\n                        \n                        \n                            SpecialtiesModule\n                        \n                        \n                            TestModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { AuthModule } from './auth/auth.module';\nimport { PrismaModule } from './prisma/prisma.module';\nimport { UserModule } from './user/user.module';\nimport { SpecialtiesModule } from './specialties/specialties.module';\nimport { TestModule } from './Test-crud/test.module';\nimport { ResultModule } from './result/result.module';\n\n@Module({\n  imports: [PrismaModule, UserModule, AuthModule,TestModule,SpecialtiesModule, ResultModule],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAppStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAppStatus\n                        \n                    \n                \n            \n            \n                \ngetAppStatus()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getAppStatus(): string {\n    return 'Server is running! 🚀\\n Please check http://localhost:3333/api for Swagger docs...';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                            \n                                profile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(loginDto: LoginDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@HttpCode(HttpStatus.OK)@ApiOperation({summary: 'Login receiving a token for authentication'})\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loginDto\n                                    \n                                                LoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profile\n                        \n                    \n                \n            \n            \n                \nprofile(user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Returns the currently authenticated user'})@UseGuards(undefined)@ApiBearerAuth()\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { message: string; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Post,\n  HttpCode,\n  HttpStatus,\n  Get,\n  UseGuards,\n} from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { ApiBearerAuth, ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { User } from 'src/user/entities/user.entity';\nimport { AuthService } from './auth.service';\nimport { LoginDto } from './dto/login.dto';\nimport { LoginResponseDto } from './dto/login.response.dto';\nimport { LoggedUser } from './logged-user.decorator';\n\n@ApiTags('Auth')\n@Controller('auth')\nexport class AuthController {\n  constructor(private readonly authService: AuthService) {}\n\n  @Post()\n  @HttpCode(HttpStatus.OK)\n  @ApiOperation({\n    summary: 'Login receiving a token for authentication',\n  })\n  login(@Body() loginDto: LoginDto): Promise {\n    return this.authService.login(loginDto);\n  }\n\n  @Get()\n  @ApiOperation({\n    summary: 'Returns the currently authenticated user'\n  })\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth()\n  profile(@LoggedUser() user: User) {\n    return {message:`${user.name} successfully logged in!`};;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nPrismaModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { AuthController } from './auth.controller';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { JwtModule } from '@nestjs/jwt';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtStrategy } from './jwt.strategy';\n\n@Module({\n  imports: [\n    PrismaModule,\n    PassportModule.register({ defaultStrategy: 'jwt'}),\n    JwtModule.register({\n      secret: process.env.JWT_SECRET,\n      signOptions: { expiresIn: '24h' }\n    })],\n  controllers: [AuthController],\n  providers: [AuthService, JwtStrategy]\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(loginDto: LoginDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loginDto\n                                    \n                                                LoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { PrismaService } from '../prisma/prisma.service';\nimport { LoginDto } from './dto/login.dto';\nimport { LoginResponseDto } from './dto/login.response.dto';\nimport * as bcrypt from 'bcrypt';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private readonly prisma: PrismaService,\n    private readonly jwtService: JwtService,\n  ) {}\n\n  async login(loginDto: LoginDto): Promise {\n    const { email, password } = loginDto;\n    console.log(`dto.. ${email} - ${password}`);\n\n    const user = await this.prisma.user.findUnique({ where: { email } });\n\n    if (!user) {\n      throw new UnauthorizedException('Invalid email and/or password');\n    }\n\n    if (!user.isVerified) {\n      throw new UnauthorizedException('User not verified');\n    }\n\n    const isHashValid = await bcrypt.compare(password, user.password);\n    if (!isHashValid) {\n      throw new UnauthorizedException('Invalid email and/or password');\n    }\n\n    delete user.password;\n\n    await this.prisma.user.update({\n      where: { id: user.id },\n      data: { resetToken: null },\n    });\n\n    return {\n      token: this.jwtService.sign({ email }),\n      user: undefined,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ChangePasswordDto.html":{"url":"classes/ChangePasswordDto.html","title":"class - ChangePasswordDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ChangePasswordDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/update-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                confirmPassword\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        confirmPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty({example: 'Petlove@123'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/update-user.dto.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @MinLength(6)@IsString()@Matches(/((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/, {message: 'senha muito fraca'})@IsNotEmpty()@ApiProperty({description: 'Senha do usuário. Requer letras maiúsculas e minúsculas, números ou caracteres especiais', example: 'Petlove@123'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/update-user.dto.ts:38\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport {\n  MinLength,\n  IsString,\n  Matches,\n  IsNotEmpty,\n  IsOptional,\n} from 'class-validator';\nimport { CreateUserDto } from './create-user.dto';\n\nexport class UpdateUserDto extends PartialType(CreateUserDto) {\n  @MinLength(6)\n  @IsString()\n  @Matches(/((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/, {\n    message: 'senha muito fraca',\n  })\n  @IsOptional()\n  @ApiProperty({\n    description:\n      'Senha do usuário. Requer letras maiúsculas e minúsculas, números ou caracteres especiais',\n    example: 'Petlove@123',\n  })\n  newPassword: string;\n}\n\nexport class ChangePasswordDto {\n  @MinLength(6)\n  @IsString()\n  @Matches(/((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/, {\n    message: 'senha muito fraca',\n  })\n  @IsNotEmpty()\n  @ApiProperty({\n    description:\n      'Senha do usuário. Requer letras maiúsculas e minúsculas, números ou caracteres especiais',\n    example: 'Petlove@123',\n  })\n  password: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({\n    example: 'Petlove@123',\n  })\n  confirmPassword: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateResultDto.html":{"url":"classes/CreateResultDto.html","title":"class - CreateResultDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateResultDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/result/dto/create-result.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                computationalFundamentals\n                            \n                            \n                                design\n                            \n                            \n                                person\n                            \n                            \n                                process\n                            \n                            \n                                system\n                            \n                            \n                                test\n                            \n                            \n                                toolshop\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        computationalFundamentals\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@ApiProperty({description: 'Result for the category Computational Fundamentals', example: 4})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/result/dto/create-result.dto.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        design\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@ApiProperty({description: 'result for the design category', example: 2})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/result/dto/create-result.dto.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        person\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@ApiProperty({description: 'Person test result', example: 3})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/result/dto/create-result.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        process\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@ApiProperty({description: 'Process test result', example: 5})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/result/dto/create-result.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        system\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@ApiProperty({description: 'System test result', example: 2})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/result/dto/create-result.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        test\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@ApiProperty({description: 'result for the test category', example: 4})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/result/dto/create-result.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toolshop\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@ApiProperty({description: 'result for the tooling category', example: 3})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/result/dto/create-result.dto.ts:45\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNumber } from 'class-validator';\n\nexport class CreateResultDto {\n  @IsNumber()\n  @ApiProperty({\n    description: 'System test result',\n    example: 2,\n  })\n  system: number;\n\n  @IsNumber()\n  @ApiProperty({\n    description: 'Person test result',\n    example: 3,\n  })\n  person: number;\n\n  @IsNumber()\n  @ApiProperty({\n    description: 'result for the test category',\n    example: 4,\n  })\n  test: number;\n\n  @IsNumber()\n  @ApiProperty({\n    description: 'Process test result',\n    example: 5,\n  })\n  process: number;\n\n  @IsNumber()\n  @ApiProperty({\n    description: 'result for the design category',\n    example: 2,\n  })\n  design: number;\n\n  @IsNumber()\n  @ApiProperty({\n    description: 'result for the tooling category',\n    example: 3,\n  })\n  toolshop: number;\n\n  @IsNumber()\n  @ApiProperty({\n    description: 'Result for the category Computational Fundamentals',\n    example: 4,\n  })\n  computationalFundamentals: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateSpecialtyDto.html":{"url":"classes/CreateSpecialtyDto.html","title":"class - CreateSpecialtyDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateSpecialtyDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/specialties/dto/create-specialty.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                description\n                            \n                            \n                                influence\n                            \n                            \n                                performance\n                            \n                            \n                                person\n                            \n                            \n                                process\n                            \n                            \n                                system\n                            \n                            \n                                technology\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/specialties/dto/create-specialty.dto.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'Description of the specialty', example: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit.'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/specialties/dto/create-specialty.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        influence\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber({maxDecimalPlaces: 2})@ApiProperty({description: 'Influence score', example: 2})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/specialties/dto/create-specialty.dto.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        performance\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'Professional level (Trainee, Junior, Pleno, Senior, Especialista, Tech-lead)', example: 'Junior'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/specialties/dto/create-specialty.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        person\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber({maxDecimalPlaces: 2})@ApiProperty({description: 'Persons score', example: 3})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/specialties/dto/create-specialty.dto.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        process\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber({maxDecimalPlaces: 2})@ApiProperty({description: 'Process score', example: 5})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/specialties/dto/create-specialty.dto.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        system\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber({maxDecimalPlaces: 2})@ApiProperty({description: 'Systems score', example: 2})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/specialties/dto/create-specialty.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        technology\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber({maxDecimalPlaces: 2})@ApiProperty({description: 'technology score', example: 4})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/specialties/dto/create-specialty.dto.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/specialties/dto/create-specialty.dto.ts:66\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNumber, IsString } from 'class-validator';\n\nexport class CreateSpecialtyDto {\n  @IsString()\n  @ApiProperty({\n    description:\n      'Professional level (Trainee, Junior, Pleno, Senior, Especialista, Tech-lead)',\n    example: 'Junior',\n  })\n  performance: string;\n\n  @IsString()\n  @ApiProperty({\n    description: 'Description of the specialty',\n    example: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit.',\n  })\n  description: string;\n\n  @IsNumber({\n    maxDecimalPlaces: 2,\n  })\n  @ApiProperty({\n    description: 'Systems score',\n    example: 2,\n  })\n  system: number;\n\n  @IsNumber({\n    maxDecimalPlaces: 2,\n  })\n  @ApiProperty({\n    description: 'Persons score',\n    example: 3,\n  })\n  person: number;\n\n  @IsNumber({\n    maxDecimalPlaces: 2,\n  })\n  @ApiProperty({\n    description: 'technology score',\n    example: 4,\n  })\n  technology: number;\n\n  @IsNumber({\n    maxDecimalPlaces: 2,\n  })\n  @ApiProperty({\n    description: 'Process score',\n    example: 5,\n  })\n  process: number;\n\n  @IsNumber({\n    maxDecimalPlaces: 2,\n  })\n  @ApiProperty({\n    description: 'Influence score',\n    example: 2,\n  })\n  influence: number;\n\n  createdAt: Date;\n  updatedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTestDto.html":{"url":"classes/CreateTestDto.html","title":"class - CreateTestDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTestDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Test-crud/dto/create-test.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                computationalFundamentals\n                            \n                            \n                                design\n                            \n                            \n                                person\n                            \n                            \n                                process\n                            \n                            \n                                system\n                            \n                            \n                                test\n                            \n                            \n                                title\n                            \n                            \n                                toolshop\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        computationalFundamentals\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString({each: true})@IsArray()@ArrayMinSize(3)@ApiProperty({description: 'A capacidade da pessoa em estabelecer e difundir os fundamentos computacionais e, através deles, melhorar a qualidade do código são os atributos buscados nessa vertente.', example: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Test-crud/dto/create-test.dto.ts:112\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        design\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString({each: true})@IsArray()@ArrayMinSize(3)@ApiProperty({description: 'Abrangerá os princípios de Design de cada chapter.', example: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Test-crud/dto/create-test.dto.ts:85\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        person\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString({each: true})@IsArray()@ArrayMinSize(5)@ApiProperty({description: 'Relacionamento da pessoa com outros dentro e fora da sua squad.', example: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Test-crud/dto/create-test.dto.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        process\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString({each: true})@IsArray()@ArrayMinSize(5)@ApiProperty({description: 'Nível de engajamento da pessoa com os processos definidos pelo time de tecnologia.', example: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Test-crud/dto/create-test.dto.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        system\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString({each: true})@IsArray()@ArrayMinSize(5)@ApiProperty({description: 'Conhecimento sistêmico da empresa. A capacidade da pessoa em conhecer e impactar os sistemas de tecnologia.', example: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Test-crud/dto/create-test.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        test\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString({each: true})@IsArray()@ArrayMinSize(3)@ApiProperty({description: 'A importância de testes e os tipos de testes são as coisas buscadas nesses níveis.', example: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Test-crud/dto/create-test.dto.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'Título do teste', example: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Test-crud/dto/create-test.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toolshop\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString({each: true})@IsArray()@ArrayMinSize(3)@ApiProperty({description: 'Abordará temas como CI/CD e Código Limpo.', example: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Test-crud/dto/create-test.dto.ts:98\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { ArrayMinSize, IsArray, IsString } from 'class-validator';\n\nexport class CreateTestDto {\n  @IsString()\n  @ApiProperty({\n    description: 'Título do teste',\n    example: ['Teste de Proficiência'],\n  })\n  title: string;\n\n  @IsString({ each: true })\n  @IsArray()\n  @ArrayMinSize(5)\n  @ApiProperty({\n    description:\n      'Conhecimento sistêmico da empresa. A capacidade da pessoa em conhecer e impactar os sistemas de tecnologia.',\n    example: [\n      'Você é capaz de implementar features simples e resolver pequenos bugs dentro da sua squad?',\n      'Você desenha e implementa soluções de média e alta complexidade reduzindo débitos técnicos do time?',\n      'Você é capaz de subir e controlar sistemas em produção e também monitora a qualidade olhando para SLAs?',\n      'Você desenvolve arquitetura para futuras soluções e define SLAs?',\n      'Você lidera as soluções técnicas com excelência e cria planos de contingências?',\n    ],\n  })\n  system: string[];\n\n  @IsString({ each: true })\n  @IsArray()\n  @ArrayMinSize(5)\n  @ApiProperty({\n    description:\n      'Relacionamento da pessoa com outros dentro e fora da sua squad.',\n    example: [\n      'Você está sempre aprendendo com os outros e estuda mais quando necessário?',\n      'Você sempre ajuda as pessoas do seu time a terem sucesso em seus desafios',\n      'Você organiza times, promove feedbacks e intermedeia discussões',\n      'Você mentora outros em seu desenvolvimento e já foi coach na construção de PDI',\n      'Você gerencia carreiras, expectativas, performances e nível de engajamento do seu time',\n    ],\n  })\n  person: string[];\n\n  @IsString({ each: true })\n  @IsArray()\n  @ArrayMinSize(5)\n  @ApiProperty({\n    description:\n      'Nível de engajamento da pessoa com os processos definidos pelo time de tecnologia.',\n    example: [\n      'Você segue todo o flow (git, CI/CD, Jira..) de desenvolvimento entregando features consistentes em produção?',\n      'Você sugere mudanças nos flows com consistência, sempre procurando caminhos para melhorar',\n      'Você sempre chama o time para reavaliar os flows, garantindo que todos entendam os benefícios e impactos',\n      'Você é o responsável por ajustar os flows do time, escutando feedbacks e guiando através das mudanças',\n      'Você define os flows baseado na maturidade, agilidade e disciplina do time',\n    ],\n  })\n  process: string[];\n\n  @IsString({ each: true })\n  @IsArray()\n  @ArrayMinSize(3)\n  @ApiProperty({\n    description:\n      'A importância de testes e os tipos de testes são as coisas buscadas nesses níveis.',\n    example: [\n      'Você implementa teste unitário e também testa a sua solução manualmente considerando as definições do produto?',\n      'Você simula comportamentos dos clientes no seu desenvolvimento, testa além do caminho feliz e analisa o impacto das mudanças',\n      'Você implementa teste e2e, de integração que permita avaliar e monitorar o produto',\n    ],\n  })\n  test: string;\n\n  @IsString({ each: true })\n  @IsArray()\n  @ArrayMinSize(3)\n  @ApiProperty({\n    description: 'Abrangerá os princípios de Design de cada chapter.',\n    example: [\n      'Você conhece e aplica os princípios do S.O.L.I.D (Ou algum outro pattern definido pelo seu chapter Manager) no seu código?',\n      'Você conhece e aplica pelo menos outros 3 princípios de pattern no seu código e ajuda seus colegas de time a escolherem qual o melhor para a solução do problema',\n      'Você já ajudou a definir padrões de projetos de times/produtos fora do seu time',\n    ],\n  })\n  design: string[];\n\n  @IsString({ each: true })\n  @IsArray()\n  @ArrayMinSize(3)\n  @ApiProperty({\n    description: 'Abordará temas como CI/CD e Código Limpo.',\n    example: [\n      'Você conhece o conceito de código limpo (link)? Aplica o conceito em pelo menos 50% do seu código? Conhece e desenvolve seguindo os nossos processos de CI/CD?https://petlove.atlassian.net/wiki/spaces/TEC/pages/351666200/Playbook',\n      'Você Constrói códigos modulares e segue os conceitos de código limpo em 80% do seu código?',\n      'Você ajuda a definir processos de CI/CD do seu time e da sua área? Ensina seus colegas a importância de um código limpo e cobra isso nos PRs que revisa?',\n    ],\n  })\n  toolshop: string[];\n\n  @IsString({ each: true })\n  @IsArray()\n  @ArrayMinSize(3)\n  @ApiProperty({\n    description:\n      'A capacidade da pessoa em estabelecer e difundir os fundamentos computacionais e, através deles, melhorar a qualidade do código são os atributos buscados nessa vertente.',\n    example: [\n      'Você Conhece e aplica estruturas de dados e multithreading?',\n      'Você consegue desenhar a arquitetura de um sistema de complexidade média a alta',\n      'Você consegue desenhar uma arquitetura multis sistêmica e para múltiplos times',\n    ],\n  })\n  computationalFundamentals: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                confirmPassword\n                            \n                            \n                                email\n                            \n                            \n                                name\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        confirmPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty({example: 'Petlove@123'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsEmail()@ApiProperty({description: 'Email do usuário', example: 'PetLove@gmail.com'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Length(15, 40)@IsString()@IsNotEmpty()@ApiProperty({description: 'Nome do usuário', example: 'Petlove'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @MinLength(6)@IsString()@Matches(/((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/, {message: 'senha muito fraca'})@IsNotEmpty()@ApiProperty({description: 'Senha do usuário. Requer letras maiúsculas e minúsculas, números ou caracteres especiais', example: 'Petlove@123'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:40\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {\n  IsEmail,\n  IsNotEmpty,\n  IsString,\n  Length,\n  Matches,\n  MinLength,\n} from 'class-validator';\n\nexport class CreateUserDto {\n  @Length(15, 40)\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({\n    description: 'Nome do usuário',\n    example: 'Petlove',\n  })\n  name: string;\n\n  @IsNotEmpty()\n  @IsEmail()\n  @ApiProperty({\n    description: 'Email do usuário',\n    example: 'PetLove@gmail.com',\n  })\n  email: string;\n\n  @MinLength(6)\n  @IsString()\n  @Matches(/((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/, {\n    message: 'senha muito fraca',\n  })\n  @IsNotEmpty()\n  @ApiProperty({\n    description:\n      'Senha do usuário. Requer letras maiúsculas e minúsculas, números ou caracteres especiais',\n    example: 'Petlove@123',\n  })\n  password: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({\n    example: 'Petlove@123',\n  })\n  confirmPassword: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JwtPayload.html":{"url":"interfaces/JwtPayload.html","title":"interface - JwtPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  JwtPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/entities/jwtChangePassword.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface JwtPayload {\n  id?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt.strategy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/jwt.strategy.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PrismaService } from 'src/prisma/prisma.service';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(private readonly prisma: PrismaService) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: process.env.JWT_SECRET,\n    });\n  }\n\n  async validate(payload: { email: string }) {\n    const user = await this.prisma.user.findUnique({\n      where: { email: payload.email },\n    });\n\n    if (!user) {\n      throw new UnauthorizedException(\n        'User does not exist or is not authenticated',\n      );\n    }\n\n    delete user.password;\n\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginDto.html":{"url":"classes/LoginDto.html","title":"class - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/login.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@IsEmail()@ApiProperty({description: 'User email', example: 'PetLove@gmail.com'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty({description: 'User password', example: 'Petlove@123'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login.dto.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { IsString, IsNotEmpty, IsEmail} from \"class-validator\";\n\nexport class LoginDto {\n\n  @IsString()\n  @IsNotEmpty()\n  @IsEmail()\n  @ApiProperty({\n    description: \"User email\",\n    example: \"PetLove@gmail.com\"\n  })\n  email: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({\n    description: \"User password\",\n    example: \"Petlove@123\"\n  })\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginResponseDto.html":{"url":"classes/LoginResponseDto.html","title":"class - LoginResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/login.response.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                token\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'JWT generated by login', example: 'AUTOMATICALLY GENERATED TOKEN'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login.response.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Authenticated user data'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login.response.dto.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { User } from \"src/user/entities/user.entity\";\n\nexport class LoginResponseDto {\n\n  @ApiProperty({\n    description: \"JWT generated by login\",\n    example: \"AUTOMATICALLY GENERATED TOKEN\"\n  })\n  token: string;\n\n  @ApiProperty({\n    description: \"Authenticated user data\",\n  })\n  user:User;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PrismaModule.html":{"url":"modules/PrismaModule.html","title":"module - PrismaModule","body":"\n                   \n\n\n\n\n    Modules\n    PrismaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_providers\n\n\n\ncluster_PrismaModule_exports\n\n\n\n\nPrismaService \n\nPrismaService \n\n\n\nPrismaModule\n\nPrismaModule\n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/prisma/prisma.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PrismaService } from './prisma.service';\n\n@Module({\n  providers: [PrismaService],\n  exports: [PrismaService],\n})\nexport class PrismaModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prisma/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    PrismaClient\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                homepage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                enableShutdownHooks\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        enableShutdownHooks\n                        \n                    \n                \n            \n            \n                \n                    \n                    enableShutdownHooks(app: INestApplication)\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n                                    \n                                            INestApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        homepage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/prisma/prisma.service.ts:6\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { INestApplication, Injectable, OnModuleInit } from '@nestjs/common';\nimport { PrismaClient } from '@prisma/client';\n\n@Injectable()\nexport class PrismaService extends PrismaClient implements OnModuleInit {\n  homepage: any;\n  async onModuleInit() {\n    await this.$connect();\n  }\n\n  async enableShutdownHooks(app: INestApplication) {\n    this.$on('beforeExit', async () => {\n      await app.close();\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Result.html":{"url":"classes/Result.html","title":"class - Result","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Result\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/result/entities/result.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                    Optional\n                                influence\n                            \n                            \n                                    Optional\n                                isValided\n                            \n                            \n                                nextRole\n                            \n                            \n                                person\n                            \n                            \n                                process\n                            \n                            \n                                system\n                            \n                            \n                                    Optional\n                                technology\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                            \n                                    Optional\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/result/entities/result.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/result/entities/result.entity.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        influence\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/result/entities/result.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        isValided\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/result/entities/result.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nextRole\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/result/entities/result.entity.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        person\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/result/entities/result.entity.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        process\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/result/entities/result.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        system\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/result/entities/result.entity.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        technology\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/result/entities/result.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/result/entities/result.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/result/entities/result.entity.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Result {\n  id?: string;\n  nextRole: string;\n  system: number;\n  person: number;\n  process: number;\n  technology?: number;\n  influence?: number;\n  isValided?: string;\n  userId?: string;\n  createdAt?: Date;\n  updatedAt?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ResultController.html":{"url":"controllers/ResultController.html","title":"controller - ResultController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ResultController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/result/result.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                Result\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(user: User, dto: CreateResultDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Create test result'})\n                \n            \n\n            \n                \n                    Defined in src/result/result.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                CreateResultDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll(user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'List all results'})\n                \n            \n\n            \n                \n                    Defined in src/result/result.controller.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOperation({summary: 'To find a test result by id'})\n                \n            \n\n            \n                \n                    Defined in src/result/result.controller.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/result/result.controller.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, dto: UpdateResultDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiOperation({summary: 'To change data from a test performed'})\n                \n            \n\n            \n                \n                    Defined in src/result/result.controller.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                UpdateResultDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  UseGuards,\n} from '@nestjs/common';\nimport { ResultService } from './result.service';\nimport { CreateResultDto } from './dto/create-result.dto';\nimport { UpdateResultDto } from './dto/update-result.dto';\nimport { ApiBearerAuth, ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { LoggedUser } from 'src/auth/logged-user.decorator';\nimport { User } from 'src/user/entities/user.entity';\nimport { AuthGuard } from '@nestjs/passport';\n\n@ApiTags('Result')\n@UseGuards(AuthGuard())\n@ApiBearerAuth()\n@Controller('Result')\nexport class ResultController {\n  constructor(private readonly resultService: ResultService) {}\n\n  @Post()\n  @ApiOperation({ summary: 'Create test result' })\n  create(@LoggedUser() user: User, @Body() dto: CreateResultDto) {\n    return this.resultService.create(user, dto);\n  }\n\n  @Get()\n  @ApiOperation({ summary: 'List all results' })\n  findAll(@LoggedUser() user: User) {\n    return this.resultService.findAll(user);\n  }\n\n  @Get(':id')\n  @ApiOperation({ summary: 'To find a test result by id' })\n  findOne(@Param('id') id: string) {\n    return this.resultService.findOne(id);\n  }\n\n  @Patch(':id')\n  @ApiOperation({ summary: 'To change data from a test performed' })\n  update(@Param('id') id: string, @Body() dto: UpdateResultDto) {\n    return this.resultService.update(id, dto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.resultService.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ResultModule.html":{"url":"modules/ResultModule.html","title":"module - ResultModule","body":"\n                   \n\n\n\n\n    Modules\n    ResultModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ResultModule\n\n\n\ncluster_ResultModule_providers\n\n\n\ncluster_ResultModule_imports\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nResultModule\n\nResultModule\n\nResultModule -->\n\nPrismaModule->ResultModule\n\n\n\n\n\nResultService\n\nResultService\n\nResultModule -->\n\nResultService->ResultModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/result/result.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ResultService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ResultController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ResultService } from './result.service';\nimport { ResultController } from './result.controller';\nimport { PassportModule } from '@nestjs/passport';\nimport { PrismaModule } from 'src/prisma/prisma.module';\n\n@Module({\n  imports: [PrismaModule, PassportModule.register({ defaultStrategy: 'jwt' })],\n  controllers: [ResultController],\n  providers: [ResultService]\n})\nexport class ResultModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ResultService.html":{"url":"injectables/ResultService.html","title":"injectable - ResultService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ResultService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/result/result.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/result/result.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(user: User, dto: CreateResultDto)\n                \n            \n\n\n            \n                \n                    Defined in src/result/result.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                CreateResultDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/result/result.service.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/result/result.service.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/result/result.service.ts:172\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, dto: UpdateResultDto)\n                \n            \n\n\n            \n                \n                    Defined in src/result/result.service.ts:123\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                UpdateResultDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { Prisma } from '@prisma/client';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { User } from 'src/user/entities/user.entity';\nimport { handleError } from 'src/utils/handleError.utils';\nimport { isAdmin } from 'src/utils/isAdmin.utils';\nimport { CreateResultDto } from './dto/create-result.dto';\nimport { UpdateResultDto } from './dto/update-result.dto';\n\n@Injectable()\nexport class ResultService {\n  constructor(private readonly prisma: PrismaService) {}\n  async create(user: User, dto: CreateResultDto) {\n    const technology =\n      (dto.toolshop + dto.design + dto.test + dto.computationalFundamentals) *\n      (5 / 12);\n    const influence = (dto.system + dto.process + 2 * dto.person) / 4;\n\n    let nextRoleValue = undefined;\n\n    const specialtys = await this.prisma.specialtie.findMany();\n\n    if (specialtys.length === 0) {\n      throw new NotFoundException('Não existem especialidades cadastradas.');\n    }\n\n    const result = specialtys.map((specialy) => {\n      const { performance, system, person, technology, process, influence } =\n        specialy;\n      const systemDiff = system - dto.system;\n      const personDiff = person - dto.person;\n      const technologyDiff = technology - technology;\n      const processDiff = process - dto.process;\n      const influenceDiff = influence - influence;\n\n      const totalDiff =\n        Math.abs(systemDiff) +\n        Math.abs(personDiff) +\n        Math.abs(technologyDiff) +\n        Math.abs(processDiff) +\n        Math.abs(influenceDiff);\n      return { performance, totalDiff };\n    });\n\n    const near = result.reduce((prev, current) =>\n      prev.totalDiff \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SpecialtiesController.html":{"url":"controllers/SpecialtiesController.html","title":"controller - SpecialtiesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SpecialtiesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/specialties/specialties.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                Specialty\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(dto: CreateSpecialtyDto, user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'create a specialty'})\n                \n            \n\n            \n                \n                    Defined in src/specialties/specialties.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateSpecialtyDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll(user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'List all specialties'})\n                \n            \n\n            \n                \n                    Defined in src/specialties/specialties.controller.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string, user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOperation({summary: 'Find a specific specialty through the id'})\n                \n            \n\n            \n                \n                    Defined in src/specialties/specialties.controller.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string, user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ApiOperation({summary: 'delete a specialty'})\n                \n            \n\n            \n                \n                    Defined in src/specialties/specialties.controller.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, dto: UpdateSpecialtyDto, user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiOperation({summary: 'Change or update information about a specialty'})\n                \n            \n\n            \n                \n                    Defined in src/specialties/specialties.controller.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                UpdateSpecialtyDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  UseGuards,\n} from '@nestjs/common';\nimport { SpecialtiesService } from './specialties.service';\nimport { CreateSpecialtyDto } from './dto/create-specialty.dto';\nimport { UpdateSpecialtyDto } from './dto/update-specialty.dto';\nimport { User } from 'src/user/entities/user.entity';\nimport { LoggedUser } from 'src/auth/logged-user.decorator';\nimport { AuthGuard } from '@nestjs/passport';\nimport { ApiBearerAuth, ApiOperation, ApiTags } from '@nestjs/swagger';\n\n@UseGuards(AuthGuard())\n@ApiBearerAuth()\n@ApiTags('Specialtie')\n@Controller('Specialty')\nexport class SpecialtiesController {\n  constructor(private readonly specialty: SpecialtiesService) {}\n\n  @Post()\n  @ApiOperation({ summary: 'create a specialty' })\n  create(@Body() dto: CreateSpecialtyDto, @LoggedUser() user: User) {\n    return this.specialty.create(dto, user);\n  }\n\n  @Get()\n  @ApiOperation({ summary: 'List all specialties' })\n  findAll(@LoggedUser() user: User) {\n    return this.specialty.findAll(user);\n  }\n\n  @Get(':id')\n  @ApiOperation({ summary: 'Find a specific specialty through the id' })\n  findOne(@Param('id') id: string, @LoggedUser() user: User) {\n    return this.specialty.findOne(id, user);\n  }\n\n  @Patch(':id')\n  @ApiOperation({ summary: 'Change or update information about a specialty' })\n  update(\n    @Param('id') id: string,\n    @Body() dto: UpdateSpecialtyDto,\n    @LoggedUser() user: User,\n  ) {\n    return this.specialty.update(id, dto, user);\n  }\n\n  @Delete(':id')\n  @ApiOperation({ summary: 'delete a specialty' })\n  remove(@Param('id') id: string, @LoggedUser() user: User) {\n    return this.specialty.remove(id, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SpecialtiesModule.html":{"url":"modules/SpecialtiesModule.html","title":"module - SpecialtiesModule","body":"\n                   \n\n\n\n\n    Modules\n    SpecialtiesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_SpecialtiesModule\n\n\n\ncluster_SpecialtiesModule_providers\n\n\n\ncluster_SpecialtiesModule_imports\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nSpecialtiesModule\n\nSpecialtiesModule\n\nSpecialtiesModule -->\n\nPrismaModule->SpecialtiesModule\n\n\n\n\n\nSpecialtiesService\n\nSpecialtiesService\n\nSpecialtiesModule -->\n\nSpecialtiesService->SpecialtiesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/specialties/specialties.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SpecialtiesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            SpecialtiesController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { SpecialtiesService } from './specialties.service';\nimport { SpecialtiesController } from './specialties.controller';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { PassportModule } from '@nestjs/passport';\n\n@Module({\n  imports: [PrismaModule, PassportModule.register({ defaultStrategy: 'jwt' })],\n  controllers: [SpecialtiesController],\n  providers: [SpecialtiesService],\n})\nexport class SpecialtiesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SpecialtiesService.html":{"url":"injectables/SpecialtiesService.html","title":"injectable - SpecialtiesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SpecialtiesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/specialties/specialties.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/specialties/specialties.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(dto: CreateSpecialtyDto, user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/specialties/specialties.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateSpecialtyDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/specialties/specialties.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string, user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/specialties/specialties.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string, user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/specialties/specialties.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, dto: UpdateSpecialtyDto, user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/specialties/specialties.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                UpdateSpecialtyDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnprocessableEntityException } from '@nestjs/common';\nimport { Prisma } from '@prisma/client';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { User } from 'src/user/entities/user.entity';\nimport { handleError } from 'src/utils/handleError.utils';\nimport { isAdmin } from 'src/utils/isAdmin.utils';\nimport { CreateSpecialtyDto } from './dto/create-specialty.dto';\nimport { UpdateSpecialtyDto } from './dto/update-specialty.dto';\nimport { Specialty } from './entities/specialty.entity';\n\n@Injectable()\nexport class SpecialtiesService {\n  constructor(private readonly prisma: PrismaService) {}\n\n  async create(dto: CreateSpecialtyDto, user: User) {\n    isAdmin(user);\n    const data: Prisma.SpecialtieCreateInput = { ...dto };\n    return await this.prisma.specialtie.create({ data }).catch(handleError);\n  }\n\n  async findAll(user: User) {\n    if (!user) {\n      throw new UnprocessableEntityException('Usuário não está logado');\n    }\n\n    return await this.prisma.specialtie.findMany().catch(handleError);\n  }\n\n  async findOne(id: string, user: User) {\n    if (!user) {\n      throw new UnprocessableEntityException('Usuário não está logado');\n    }\n\n    return await this.prisma.specialtie\n      .findUnique({ where: { id } })\n      .catch(handleError);\n  }\n\n  async update(id: string, dto: UpdateSpecialtyDto, user: User) {\n    isAdmin(user);\n    const data: Partial = { ...dto };\n    return await this.prisma.specialtie\n      .update({\n        where: { id },\n        data,\n      })\n      .catch(handleError);\n  }\n\n  async remove(id: string, user: User) {\n    isAdmin(user);\n    await this.prisma.specialtie.delete({ where: { id } }).catch(handleError);\n    return { message: 'specialty deleted successfully' };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Specialty.html":{"url":"classes/Specialty.html","title":"class - Specialty","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Specialty\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/specialties/entities/specialty.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                description\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                influence\n                            \n                            \n                                performance\n                            \n                            \n                                person\n                            \n                            \n                                process\n                            \n                            \n                                system\n                            \n                            \n                                technology\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/specialties/entities/specialty.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/specialties/entities/specialty.entity.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/specialties/entities/specialty.entity.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        influence\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/specialties/entities/specialty.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        performance\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/specialties/entities/specialty.entity.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        person\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/specialties/entities/specialty.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        process\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/specialties/entities/specialty.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        system\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/specialties/entities/specialty.entity.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        technology\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/specialties/entities/specialty.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/specialties/entities/specialty.entity.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Specialty {\n  id?: string;\n  performance: string;\n  description: string;\n  system: number;\n  person: number;\n  technology: number;\n  process: number;\n  influence: number;\n  createdAt?: Date;\n  updatedAt?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Test.html":{"url":"classes/Test.html","title":"class - Test","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Test\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Test-crud/entities/test.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                computationalFundamentals\n                            \n                            \n                                createdAt\n                            \n                            \n                                design\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                person\n                            \n                            \n                                process\n                            \n                            \n                                system\n                            \n                            \n                                test\n                            \n                            \n                                    Optional\n                                title\n                            \n                            \n                                toolshop\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        computationalFundamentals\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/Test-crud/entities/test.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/Test-crud/entities/test.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        design\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/Test-crud/entities/test.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/Test-crud/entities/test.entity.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        person\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/Test-crud/entities/test.entity.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        process\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/Test-crud/entities/test.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        system\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/Test-crud/entities/test.entity.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        test\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/Test-crud/entities/test.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/Test-crud/entities/test.entity.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toolshop\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/Test-crud/entities/test.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/Test-crud/entities/test.entity.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Test {\nid?:string;\ntitle?:string\nsystem:string[];\nperson:string[];\ntest:string[];\ndesign:string[];\ntoolshop:string[];\nprocess:string[];\ncomputationalFundamentals:string[];\ncreatedAt:Date;\nupdatedAt:Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TestController.html":{"url":"controllers/TestController.html","title":"controller - TestController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TestController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Test-crud/test.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                Test\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(dto: CreateTestDto, user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/create')@ApiOperation({summary: 'Create a complete test'})\n                \n            \n\n            \n                \n                    Defined in src/Test-crud/test.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateTestDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll(user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/allTests')@ApiOperation({summary: To list all tests})\n                \n            \n\n            \n                \n                    Defined in src/Test-crud/test.controller.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string, user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ApiOperation({summary: To delete a test})\n                \n            \n\n            \n                \n                    Defined in src/Test-crud/test.controller.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, dto: UpdateTestDto, user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiOperation({summary: To make changes to a test})\n                \n            \n\n            \n                \n                    Defined in src/Test-crud/test.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                UpdateTestDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, UseGuards } from '@nestjs/common';\nimport { TestService } from './test.service';\nimport { CreateTestDto } from './dto/create-test.dto';\nimport { UpdateTestDto } from './dto/update-test.dto';\nimport { ApiBearerAuth, ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { LoggedUser } from 'src/auth/logged-user.decorator';\nimport { User } from 'src/user/entities/user.entity';\nimport { AuthGuard } from '@nestjs/passport';\n\n@ApiTags('Test')\n@UseGuards(AuthGuard())\n@ApiBearerAuth()\n@Controller('Test')\nexport class TestController {\n  constructor(private readonly testService: TestService) {}\n\n  @Post('/create')\n  @ApiOperation({ summary: 'Create a complete test' })\n  create(@Body() dto: CreateTestDto,@LoggedUser() user:User) {\n    return this.testService.create(dto,user);\n  }\n\n  @Get('/allTests')\n  @ApiOperation({summary: `To list all tests`})\n  findAll(@LoggedUser() user:User) {\n    return this.testService.findAll(user);\n  }\n\n\n  @Patch(':id')\n  @ApiOperation({summary: `To make changes to a test`})\n  update(@Param('id') id: string, @Body() dto: UpdateTestDto,@LoggedUser() user:User) {\n    return this.testService.update(id,dto,user);\n  }\n\n\n  @Delete(':id')\n  @ApiOperation({summary: `To delete a test`})\n  remove(@Param('id') id:string,@LoggedUser() user:User) {\n    return this.testService.remove(id,user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TestModule.html":{"url":"modules/TestModule.html","title":"module - TestModule","body":"\n                   \n\n\n\n\n    Modules\n    TestModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_TestModule\n\n\n\ncluster_TestModule_imports\n\n\n\ncluster_TestModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nTestModule\n\nTestModule\n\nTestModule -->\n\nPrismaModule->TestModule\n\n\n\n\n\nTestService\n\nTestService\n\nTestModule -->\n\nTestService->TestModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/Test-crud/test.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TestService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TestController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TestService } from './test.service';\nimport { TestController } from './test.controller';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { PassportModule } from '@nestjs/passport';\n\n@Module({\n  imports: [PrismaModule, PassportModule.register({ defaultStrategy: 'jwt' })],\n  controllers: [TestController],\n  providers: [TestService]\n})\nexport class TestModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TestService.html":{"url":"injectables/TestService.html","title":"injectable - TestService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TestService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Test-crud/test.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/Test-crud/test.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(dto: CreateTestDto, user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/Test-crud/test.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateTestDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/Test-crud/test.service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string, user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/Test-crud/test.service.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, dto: UpdateTestDto, user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/Test-crud/test.service.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                UpdateTestDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  HttpException,\n  Injectable,\n  NotFoundException,\n  UnprocessableEntityException,\n} from '@nestjs/common';\nimport { Prisma } from '@prisma/client';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { User } from 'src/user/entities/user.entity';\nimport { handleError } from 'src/utils/handleError.utils';\nimport { isAdmin } from 'src/utils/isAdmin.utils';\nimport { CreateTestDto } from './dto/create-test.dto';\nimport { UpdateTestDto } from './dto/update-test.dto';\n\n@Injectable()\nexport class TestService {\n  constructor(private readonly prisma: PrismaService) {}\n\n  async create(dto: CreateTestDto, user: User) {\n    isAdmin(user);\n\n    const data: Prisma.TestCreateInput = {\n      person: dto.person,\n      process: dto.process,\n      system: dto.system,\n      test: dto.test,\n      toolshop: dto.toolshop,\n      design: dto.design,\n      computationalFundamentals: dto.computationalFundamentals,\n    };\n\n    return this.prisma.test\n      .create({\n        data,\n        select: {\n          person: true,\n          process: true,\n          system: true,\n          test: true,\n          toolshop: true,\n          design: true,\n          computationalFundamentals: true,\n          createdAt: true,\n        },\n      })\n      .catch(handleError);\n  }\n\n  async findAll(user: User) {\n    if (!user) {\n      throw new UnprocessableEntityException('Usuário não está logado');\n    }\n\n    return await this.prisma.test.findMany().catch(handleError);\n  }\n\n  async update(id: string, dto: UpdateTestDto, user: User) {\n    isAdmin(user);\n\n    if (!id) {\n      throw new NotFoundException(`id:${id} não encontrado`);\n    }\n\n    const data: Prisma.TestUpdateInput = {\n      person: dto.person,\n      process: dto.process,\n      system: dto.system,\n      test: dto.test,\n      toolshop: dto.toolshop,\n      design: dto.design,\n      computationalFundamentals: dto.computationalFundamentals,\n    };\n\n    return this.prisma.test\n      .update({\n        data,\n        where: { id: id },\n        select: {\n          person: true,\n          process: true,\n          system: true,\n          test: true,\n          toolshop: true,\n          design: true,\n          updatedAt: true,\n        },\n      })\n      .catch(handleError);\n  }\n\n  async remove(id: string, user: User) {\n    isAdmin(user);\n\n    if (!id) {\n      throw new NotFoundException(`id:${id} não encontrado`);\n    } else {\n      await this.prisma.test.delete({ where: { id: id } });\n      throw new HttpException('Test deletado com sucesso!', 200);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateResultDto.html":{"url":"classes/UpdateResultDto.html","title":"class - UpdateResultDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateResultDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/result/dto/update-result.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                influence\n                            \n                            \n                                isValided\n                            \n                            \n                                nextRole\n                            \n                            \n                                technology\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        influence\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber({maxDecimalPlaces: 2})@IsOptional()@ApiProperty({description: 'Person test result', example: 3})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/result/dto/update-result.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isValided\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'Para escolher se o usuário é passou ou não', example: 'Sim'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/result/dto/update-result.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nextRole\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'Para escolher a categoria do usuário', example: 'Junior'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/result/dto/update-result.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        technology\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber({maxDecimalPlaces: 2})@IsOptional()@ApiProperty({description: 'Person test result', example: 3})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/result/dto/update-result.dto.ts:38\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { IsNumber, IsOptional, IsString } from 'class-validator';\nimport { CreateResultDto } from './create-result.dto';\n\nexport class UpdateResultDto extends PartialType(CreateResultDto) {\n  @IsString()\n  @ApiProperty({\n    description: 'Para escolher a categoria do usuário',\n    example: 'Junior',\n  })\n  nextRole: string;\n\n  @IsString()\n  @ApiProperty({\n    description: 'Para escolher se o usuário é passou ou não',\n    example: 'Sim',\n  })\n  isValided: string;\n\n  @IsNumber({\n    maxDecimalPlaces: 2,\n  })\n  @IsOptional()\n  @ApiProperty({\n    description: 'Person test result',\n    example: 3,\n  })\n  influence: number;\n\n  @IsNumber({\n    maxDecimalPlaces: 2,\n  })\n  @IsOptional()\n  @ApiProperty({\n    description: 'Person test result',\n    example: 3,\n  })\n  technology: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateSpecialtyDto.html":{"url":"classes/UpdateSpecialtyDto.html","title":"class - UpdateSpecialtyDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateSpecialtyDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/specialties/dto/update-specialty.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateSpecialtyDto } from './create-specialty.dto';\n\nexport class UpdateSpecialtyDto extends PartialType(CreateSpecialtyDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateTestDto.html":{"url":"classes/UpdateTestDto.html","title":"class - UpdateTestDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateTestDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Test-crud/dto/update-test.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateTestDto } from './create-test.dto';\n\nexport class UpdateTestDto extends PartialType(CreateTestDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/update-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                newPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        newPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @MinLength(6)@IsString()@Matches(/((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/, {message: 'senha muito fraca'})@IsOptional()@ApiProperty({description: 'Senha do usuário. Requer letras maiúsculas e minúsculas, números ou caracteres especiais', example: 'Petlove@123'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/update-user.dto.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport {\n  MinLength,\n  IsString,\n  Matches,\n  IsNotEmpty,\n  IsOptional,\n} from 'class-validator';\nimport { CreateUserDto } from './create-user.dto';\n\nexport class UpdateUserDto extends PartialType(CreateUserDto) {\n  @MinLength(6)\n  @IsString()\n  @Matches(/((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/, {\n    message: 'senha muito fraca',\n  })\n  @IsOptional()\n  @ApiProperty({\n    description:\n      'Senha do usuário. Requer letras maiúsculas e minúsculas, números ou caracteres especiais',\n    example: 'Petlove@123',\n  })\n  newPassword: string;\n}\n\nexport class ChangePasswordDto {\n  @MinLength(6)\n  @IsString()\n  @Matches(/((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/, {\n    message: 'senha muito fraca',\n  })\n  @IsNotEmpty()\n  @ApiProperty({\n    description:\n      'Senha do usuário. Requer letras maiúsculas e minúsculas, números ou caracteres especiais',\n    example: 'Petlove@123',\n  })\n  password: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({\n    example: 'Petlove@123',\n  })\n  confirmPassword: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/entities/user.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                chapter\n                            \n                            \n                                createdAt\n                            \n                            \n                                email\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                    Optional\n                                isAdmin\n                            \n                            \n                                    Optional\n                                isVerified\n                            \n                            \n                                name\n                            \n                            \n                                password\n                            \n                            \n                                    Optional\n                                role\n                            \n                            \n                                    Optional\n                                team\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        chapter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        isAdmin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        isVerified\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        team\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {\n  id?: string;\n  name: string;\n  email: string;\n  password: string;\n  team?: string;\n  chapter?: string;\n  role?: string;\n  isAdmin?: boolean;\n  isVerified?: boolean;\n  createdAt: Date;\n  updatedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                User\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changePassword\n                            \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                sendEmailForgotPassword\n                            \n                            \n                                update\n                            \n                            \n                                uploadFile\n                            \n                            \n                                verifyUserEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changePassword\n                        \n                    \n                \n            \n            \n                \nchangePassword(id: string, resetToken: string, dto: ChangePasswordDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('change/password/:resetToken/:id')@ApiOperation({summary: 'Recover user password'})\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    resetToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                ChangePasswordDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/create')@ApiOperation({summary: 'create user'})\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll(user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(undefined)@ApiBearerAuth()@Get()@ApiOperation({summary: 'List all users'})\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(email: string, user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(undefined)@ApiBearerAuth()@Get(':email')@ApiOperation({summary: 'View a user by id.'})\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(email: string, user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(undefined)@ApiBearerAuth()@Delete(':email')@ApiOperation({summary: 'Delete a user (Adm)'})\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendEmailForgotPassword\n                        \n                    \n                \n            \n            \n                \nsendEmailForgotPassword(email: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('send/:email')@ApiOperation({summary: 'Send email to change password'})\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(email: string, updateUserDto: UpdateUserDto, user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(undefined)@ApiBearerAuth()@Patch(':email')@ApiOperation({summary: 'Edit User Information!'})\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uploadFile\n                        \n                    \n                \n            \n            \n                \nuploadFile(file)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(undefined)@ApiBearerAuth()@Post('upload')@ApiOperation({summary: 'Adiciona uma foto ao perfil do usuário'})@UseInterceptors(undefined)\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        verifyUserEmail\n                        \n                    \n                \n            \n            \n                \nverifyUserEmail(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('verify/:id')@ApiOperation({summary: 'Verify user email'})\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  UseGuards,\n  UploadedFiles,\n  UseInterceptors,\n} from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { ChangePasswordDto, UpdateUserDto } from './dto/update-user.dto';\nimport { User } from './entities/user.entity';\nimport { ApiBearerAuth, ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { AuthGuard } from '@nestjs/passport';\nimport { LoggedUser } from 'src/auth/logged-user.decorator';\nimport { FileInterceptor } from '@nestjs/platform-express';\n\n@ApiTags('User')\n@Controller('User')\nexport class UserController {\n  constructor(private readonly userService: UserService) {}\n\n  @Post('/create')\n  @ApiOperation({ summary: 'create user' })\n  create(@Body() createUserDto: CreateUserDto) {\n    return this.userService.create(createUserDto);\n  }\n\n  @Get('verify/:id')\n  @ApiOperation({\n    summary: 'Verify user email',\n  })\n  verifyUserEmail(@Param('id') id: string): Promise {\n    return this.userService.verifyUserEmail(id);\n  }\n\n  @Get('send/:email')\n  @ApiOperation({\n    summary: 'Send email to change password',\n  })\n  sendEmailForgotPassword(@Param('email') email: string): Promise {\n    return this.userService.sendEmailForgotPassword(email);\n  }\n\n  @Patch('change/password/:resetToken/:id')\n  @ApiOperation({\n    summary: 'Recover user password',\n  })\n  changePassword(\n    @Param('id') id: string,\n    @Param('resetToken') resetToken: string,\n    @Body() dto: ChangePasswordDto,\n  ): Promise {\n    return this.userService.changePassword(id, resetToken, dto);\n  }\n\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth()\n  @Get()\n  @ApiOperation({ summary: 'List all users' })\n  findAll(@LoggedUser() user: User) {\n    return this.userService.findAll(user);\n  }\n\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth()\n  @Get(':email')\n  @ApiOperation({ summary: 'View a user by id.' })\n  findOne(@Param('email') email: string, @LoggedUser() user: User) {\n    return this.userService.findOne(email, user);\n  }\n\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth()\n  @Patch(':email')\n  @ApiOperation({ summary: 'Edit User Information!' })\n  update(\n    @Param('email') email: string,\n    @Body() updateUserDto: UpdateUserDto,\n    @LoggedUser() user: User,\n  ) {\n    return this.userService.update(email, updateUserDto, user);\n  }\n\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth()\n  @Delete(':email')\n  @ApiOperation({ summary: 'Delete a user (Adm)' })\n  remove(@Param('email') email: string, @LoggedUser() user: User) {\n    return this.userService.remove(email, user);\n  }\n\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth()\n  @Post('upload')\n  @ApiOperation({ summary: 'Adiciona uma foto ao perfil do usuário' })\n  @UseInterceptors(FileInterceptor('file'))\n  uploadFile(@UploadedFiles() file) {\n  console.log(file);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UserModule\n\n\n\ncluster_UserModule_imports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nPrismaModule->UserModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { UserController } from './user.controller';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { PassportModule } from '@nestjs/passport';\nimport { MulterModule } from '@nestjs/platform-express';\nimport { JwtModule } from '@nestjs/jwt';\n\n@Module({\n  imports: [\n    PrismaModule,\n    PassportModule.register({ defaultStrategy: 'jwt' }),\n    MulterModule.register({dest:'./upload',}),\n    JwtModule.register({\n      secret: process.env.JWT_SECRET,\n      signOptions: { expiresIn: '30m' },\n    }),\n  ],\n  controllers: [UserController],\n  providers: [UserService],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                changePassword\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                createADM\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                sendEmailForgotPassword\n                            \n                            \n                                    Async\n                                update\n                            \n                            \n                                    Async\n                                verifyUserEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/user/user.service.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        changePassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    changePassword(id: string, resetToken: string, dto: ChangePasswordDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:177\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    resetToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                ChangePasswordDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(dto: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createADM\n                        \n                    \n                \n            \n            \n                \n                    \n                    createADM(dto: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:271\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:300\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(email: string, user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:322\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(email: string, user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:408\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        sendEmailForgotPassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendEmailForgotPassword(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(email: string, updateUserDto: UpdateUserDto, user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:351\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        verifyUserEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    verifyUserEmail(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  HttpException,\n  Injectable,\n  NotAcceptableException,\n  NotFoundException,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { ChangePasswordDto, UpdateUserDto } from './dto/update-user.dto';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport * as bcrypt from 'bcrypt';\nimport { handleError } from 'src/utils/handleError.utils';\nimport { Prisma } from '@prisma/client';\nimport { isAdmin } from 'src/utils/isAdmin.utils';\nimport { User } from './entities/user.entity';\nimport * as nodemailer from 'nodemailer';\nimport { JwtPayload } from './entities/jwtChangePassword.entity';\nimport { JwtService } from '@nestjs/jwt';\nimport * as crypto from 'crypto-js';\n\n@Injectable()\nexport class UserService {\n  constructor(\n    private readonly prisma: PrismaService,\n    private readonly jwtService: JwtService,\n  ) {}\n\n  async create(dto: CreateUserDto) {\n    if (dto.password != dto.confirmPassword) {\n      throw new BadRequestException('As senhas informadas não são iguais.');\n    }\n\n    delete dto.confirmPassword;\n\n    const data: Prisma.UserCreateInput = {\n      name: dto.name,\n      email: dto.email,\n      password: await bcrypt.hash(dto.password, 5),\n      isAdmin: false,\n    };\n\n    return this.prisma.user\n      .create({\n        data,\n        select: {\n          password: false,\n          id: true,\n          name: true,\n          email: true,\n          isAdmin: true,\n          createdAt: true,\n          updatedAt: true,\n        },\n      })\n      .then((user) => {\n        const transporter = nodemailer.createTransport({\n          host: 'smtp.gmail.com',\n          port: 587,\n          service: 'gmail',\n          auth: {\n            user: 'projetopetlover@gmail.com',\n            pass: 'skbfwjaibimleyou',\n          },\n        });\n\n        const mailData = {\n          from: 'Pet Love ',\n          to: user.email,\n          subject: 'Verify Email',\n          html: 'oi1 oi2',\n        };\n\n        transporter.sendMail(mailData, function (err, info) {\n          if (err) {\n            console.log(err);\n          } else {\n            console.log(info);\n          }\n        });\n\n        return user;\n      })\n      .catch(handleError);\n  }\n\n  async verifyUserEmail(id: string) {\n    const user: User = await this.prisma.user.findUnique({\n      where: { id },\n    });\n\n    if (user.isVerified) {\n      throw new NotAcceptableException('Email already verified');\n    }\n\n    const data: Prisma.UserUpdateInput = {\n      isVerified: true,\n    };\n\n    return this.prisma.user\n      .update({\n        where: { id },\n        data,\n      })\n      .then(() => {\n        return 'Email verified! You can close this page and login';\n      })\n      .catch(handleError);\n  }\n\n  async sendEmailForgotPassword(email: string): Promise {\n    const user = await this.prisma.user\n      .findUnique({\n        where: { email },\n        select: {\n          id: true,\n          email: true,\n        },\n      })\n      .catch(handleError);\n\n    if (!user) {\n      throw new NotFoundException(`Email '${email}' not found`);\n    }\n\n    const payload: JwtPayload = {\n      id: user.id,\n    };\n\n    const token = this.jwtService.sign(payload);\n\n    const tokenCrypt = crypto.AES.encrypt(\n      token,\n      process.env.JWT_CHANGE_PASSWORD_SECRET,\n    ).toString();\n\n    const tokenToUrl = await tokenCrypt\n      .replace(/\\+/g, 'p1L2u3S')\n      .replace(/\\//g, 's1L2a3S4h')\n      .replace(/=/g, 'e1Q2u3A4l');\n\n    const transporter = nodemailer.createTransport({\n      host: 'smtp.gmail.com',\n      port: 587,\n      service: 'gmail',\n      auth: {\n        user: 'projetopetlover@gmail.com',\n        pass: 'skbfwjaibimleyou',\n      },\n    });\n\n    const mailData = {\n      from: 'Pet Love ',\n      to: user.email,\n      subject: 'Reset your password',\n      html: `oi1 token:${tokenToUrl}, id:${user.id}, url: http://localhost:3000/Change/${tokenToUrl}/${user.id}`,\n    };\n\n    transporter.sendMail(mailData, async function (err, info) {\n      if (err) {\n        console.log(err);\n\n        throw new BadRequestException('Error sending email');\n      } else {\n        console.log(info);\n      }\n    });\n\n    await this.prisma.user.update({\n      where: { id: user.id },\n      data: { resetToken: token },\n    });\n\n    return 'Email sent';\n  }\n\n  async changePassword(\n    id: string,\n    resetToken: string,\n    dto: ChangePasswordDto,\n  ): Promise {\n    const user = await this.prisma.user.findUnique({\n      where: { id },\n    });\n\n    if (!user) {\n      throw new NotFoundException(`User '${id}' not found`);\n    }\n\n    if (!user.resetToken) {\n      throw new BadRequestException('Token not found');\n    }\n    console.log(resetToken);\n\n    const resetTokenToText = resetToken\n      .replace(/p1L2u3S/g, '+')\n      .replace(/s1L2a3S4h/g, '/')\n      .replace(/e1Q2u3A4l/g, '=');\n\n    const resetTokenDecrypted = crypto.AES.decrypt(\n      resetTokenToText,\n      process.env.JWT_CHANGE_PASSWORD_SECRET,\n    ).toString(crypto.enc.Utf8);\n\n    if (resetTokenDecrypted != user.resetToken) {\n      throw new UnauthorizedException('Invalid token');\n    }\n    let jwtVerify: JwtPayload;\n    try {\n      jwtVerify = this.jwtService.verify(user.resetToken);\n    } catch (error) {\n      throw new UnauthorizedException('Invalid token');\n    }\n\n    if (!jwtVerify.id || jwtVerify.id != id) {\n      throw new UnauthorizedException('Invalid token');\n    }\n\n    if (!dto.password || !dto.confirmPassword) {\n      throw new BadRequestException('Informe a nova senha.');\n    }\n\n    if (dto.password !== dto.confirmPassword) {\n      throw new BadRequestException('As senhas informadas não são iguais.');\n    }\n\n    const hashedPassword = await bcrypt.hash(dto.password, 8);\n\n    const data: Prisma.UserUpdateInput = {\n      password: hashedPassword,\n      resetToken: null,\n    };\n\n    return this.prisma.user\n      .update({\n        where: { id },\n        data,\n      })\n      .then((user) => {\n        const transporter = nodemailer.createTransport({\n          host: 'smtp.gmail.com',\n          port: 587,\n          service: 'gmail',\n          auth: {\n            user: 'projetopetlover@gmail.com',\n            pass: 'skbfwjaibimleyou',\n          },\n        });\n\n        const mailData = {\n          from: 'Pet Love ',\n          to: user.email,\n          subject: 'Password Changed',\n          html: 'oi1 oi2',\n        };\n\n        transporter.sendMail(mailData, function (err, info) {\n          if (err) {\n            console.log(err);\n\n            throw new BadRequestException('Error sending email');\n          } else {\n            console.log(info);\n          }\n        });\n        return { message: 'Password changed' };\n      })\n      .catch(handleError);\n  }\n\n  async createADM(dto: CreateUserDto) {\n    if (dto.password != dto.confirmPassword) {\n      throw new BadRequestException('As senhas informadas não são iguais.');\n    }\n\n    delete dto.confirmPassword;\n\n    const data: Prisma.UserCreateInput = {\n      name: dto.name,\n      email: dto.email,\n      password: await bcrypt.hash(dto.password, 5),\n      isAdmin: true,\n    };\n\n    return this.prisma.user\n      .create({\n        data,\n        select: {\n          password: false,\n          id: true,\n          name: true,\n          email: true,\n          isAdmin: true,\n          createdAt: true,\n        },\n      })\n      .catch(handleError);\n  }\n\n  async findAll(user: User) {\n    isAdmin(user);\n    const allUsers = await this.prisma.user.findMany({\n      select: {\n        id: true,\n        name: true,\n        email: true,\n        team: true,\n        role: true,\n        chapter: true,\n        results: true,\n        createdAt: true,\n      },\n    });\n\n    if (allUsers.length === 0) {\n      throw new NotFoundException('Não existem usuários cadastrados.');\n    }\n\n    return allUsers;\n  }\n\n  async findOne(email: string, user: User) {\n    const record = await this.prisma.user.findUnique({\n      where: { email },\n      select: {\n        id: true,\n        name: true,\n        email: true,\n        team: true,\n        role: true,\n        chapter: true,\n        results: true,\n        createdAt: true,\n        isAdmin: true,\n      },\n    });\n\n    if (!record) {\n      throw new NotFoundException(`Registro: '${email}' não encontrado.`);\n    }\n\n    if (user.email == email || user.isAdmin == true) {\n      return record;\n    } else {\n      throw new UnauthorizedException(\n        'Você não tem permissão para acessar essa área!',\n      );\n    }\n  }\n\n  async update(email: string, updateUserDto: UpdateUserDto, user: User) {\n    if (user.email === email && updateUserDto.newPassword) {\n      if (!updateUserDto.password) {\n        throw new BadRequestException('A senha atual não pode ser vazia.');\n      }\n\n      if (updateUserDto.newPassword !== updateUserDto.confirmPassword) {\n        throw new BadRequestException(\n          'As novas senhas informadas não são iguais.',\n        );\n      }\n\n      const newPassword = await bcrypt.hash(updateUserDto.newPassword, 5);\n      delete updateUserDto.confirmPassword;\n      delete updateUserDto.newPassword;\n\n      const data = { ...updateUserDto };\n      data.password = newPassword;\n\n      return this.prisma.user\n        .update({\n          where: { email: email },\n          data,\n          select: {\n            id: true,\n            name: true,\n            email: true,\n            password: false,\n            updatedAt: true,\n          },\n        })\n        .catch(handleError);\n    }\n\n    if (user.isAdmin === true) {\n      const data = { ...updateUserDto };\n\n      return this.prisma.user\n        .update({\n          where: { email },\n          data,\n          select: {\n            id: true,\n            name: true,\n            email: true,\n            password: false,\n            updatedAt: true,\n          },\n        })\n        .catch(handleError);\n    }\n\n    throw new UnauthorizedException(\n      'Você não tem permissão para acessar essa área!',\n    );\n  }\n\n  async remove(email: string, user: User) {\n    isAdmin(user);\n\n    if (!email) {\n      throw new NotFoundException(`email:${email} não encontrado`);\n    } else {\n      await this.prisma.user.findUnique({ where: { email: email } });\n      throw new HttpException('Usuário deletado com sucesso!', 200);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/Test-crud/dto/create-test.dto.ts\n            \n            class\n            CreateTestDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/Test-crud/dto/update-test.dto.ts\n            \n            class\n            UpdateTestDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/Test-crud/entities/test.entity.ts\n            \n            class\n            Test\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/Test-crud/test.controller.ts\n            \n            controller\n            TestController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/Test-crud/test.service.ts\n            \n            injectable\n            TestService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/login.dto.ts\n            \n            class\n            LoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/login.response.dto.ts\n            \n            class\n            LoginResponseDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/logged-user.decorator.ts\n            \n            variable\n            LoggedUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/prisma/seed.ts\n            \n            variable\n            prisma\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/seed.ts\n            \n            variable\n            seeds\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/seed/01-user.ts\n            \n            variable\n            user\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/seed/01-user.ts\n            \n            variable\n            users\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/seed/02-Test-crud.ts\n            \n            variable\n            test\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/seed/02-Test-crud.ts\n            \n            variable\n            Tests\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/seed/03-specialties.ts\n            \n            variable\n            specialtie\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/seed/03-specialties.ts\n            \n            variable\n            specialties\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/result/dto/create-result.dto.ts\n            \n            class\n            CreateResultDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/result/dto/update-result.dto.ts\n            \n            class\n            UpdateResultDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/result/entities/result.entity.ts\n            \n            class\n            Result\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/result/result.controller.ts\n            \n            controller\n            ResultController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/result/result.service.ts\n            \n            injectable\n            ResultService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/specialties/dto/create-specialty.dto.ts\n            \n            class\n            CreateSpecialtyDto\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/specialties/dto/update-specialty.dto.ts\n            \n            class\n            UpdateSpecialtyDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/specialties/entities/specialty.entity.ts\n            \n            class\n            Specialty\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/specialties/specialties.controller.ts\n            \n            controller\n            SpecialtiesController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/specialties/specialties.service.ts\n            \n            injectable\n            SpecialtiesService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/user/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/user/dto/update-user.dto.ts\n            \n            class\n            ChangePasswordDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/user/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/user/entities/jwtChangePassword.entity.ts\n            \n            interface\n            JwtPayload\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/user/entities/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/utils/handleError.utils.ts\n            \n            function\n            handleError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/isAdmin.utils.ts\n            \n            function\n            isAdmin\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^9.0.0\n        \n            @nestjs/core : ^9.0.0\n        \n            @nestjs/jwt : ^9.0.0\n        \n            @nestjs/passport : ^9.0.0\n        \n            @nestjs/platform-express : ^9.0.0\n        \n            @nestjs/swagger : ^6.1.2\n        \n            @prisma/client : ^4.3.1\n        \n            bcrypt : ^5.1.0\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.13.2\n        \n            crypto-js : ^4.1.1\n        \n            nodemailer : ^6.8.0\n        \n            passport : ^0.6.0\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n        \n            swagger-ui-express : ^4.5.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            handleError   (src/.../handleError.utils.ts)\n                        \n                        \n                            isAdmin   (src/.../isAdmin.utils.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/utils/handleError.utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        handleError\n                        \n                    \n                \n            \n            \n                \nhandleError(error: Error)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                            Error\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/utils/isAdmin.utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isAdmin\n                        \n                    \n                \n            \n            \n                \nisAdmin(user: User)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nPetlove Back-end\nGetting Started\nProjeto de bootcamp desenvolvido para a equipe da Petlove, referente a uma aplicação onde os gestores possam avaliar seus colaboradores através de questionarios que determinam as qualidades individuais e da equipe como um todo.\nFirst, run the development server:\nnpm run dev\n# or\nyarn devPré-requisitos\nOpen http://localhost:3000 with your browser to see the result.\n👯‍ Clonando o projeto\nClone o projeto na sua maquina utilizando o comando do git:\nGit Clone https://github.com/pedroasdoliveira/petlove-project-backend\nOu através do Github Desktop:\nLearn More\ngh repo clone pedroasdoliveira/petlove-project-backend\nTo learn more about Next.js, take a look at the following resources:\n🔧 Instalação\nyarn install\nDeploy on Vercel\n⚙️ Rodando o projeto\nyarn dev\n\nPara roda no ambiente de produção utilize os comandos:\n\nyarn build & yarn start\n🛠️ Construído com\n\nJavaScript\nTypeScript\nNest.js\nnpm\n\n\n✒️ Autores\n\nPedro Oliveira (Github: https://github.com/pedroasdoliveira);\nGiovanne Berteli (Github: https://github.com/hethus);\nJoão Vitor Carvalho (Github: https://github.com/jcvalgas);\nBruna Barbosa Bomfim (Github: https://github.com/brunabbomfim);\nFelipe dos Santos Azevedo (Github: https://github.com/Felipe360flp);\n\n\n📄 Licença\nEste projeto está sob a licença (Mozilla Public License Version 2.0) - veja o arquivo [LICENSE.md] para mais detalhes.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMozilla Public License Version 2.0\n\nDefinitions\n\n\n1.1. \"Contributor\"\n    means each individual or legal entity that creates, contributes to\n    the creation of, or owns Covered Software.\n1.2. \"Contributor Version\"\n    means the combination of the Contributions of others (if any) used\n    by a Contributor and that particular Contributor's Contribution.\n1.3. \"Contribution\"\n    means Covered Software of a particular Contributor.\n1.4. \"Covered Software\"\n    means Source Code Form to which the initial Contributor has attached\n    the notice in Exhibit A, the Executable Form of such Source Code\n    Form, and Modifications of such Source Code Form, in each case\n    including portions thereof.\n1.5. \"Incompatible With Secondary Licenses\"\n    means\n(a) that the initial Contributor has attached the notice described\n    in Exhibit B to the Covered Software; or\n\n(b) that the Covered Software was made available under the terms of\n    version 1.1 or earlier of the License, but not also under the\n    terms of a Secondary License.1.6. \"Executable Form\"\n    means any form of the work other than Source Code Form.\n1.7. \"Larger Work\"\n    means a work that combines Covered Software with other material, in\n    a separate file or files, that is not Covered Software.\n1.8. \"License\"\n    means this document.\n1.9. \"Licensable\"\n    means having the right to grant, to the maximum extent possible,\n    whether at the time of the initial grant or subsequently, any and\n    all of the rights conveyed by this License.\n1.10. \"Modifications\"\n    means any of the following:\n(a) any file in Source Code Form that results from an addition to,\n    deletion from, or modification of the contents of Covered\n    Software; or\n\n(b) any new file in Source Code Form that contains any Covered\n    Software.1.11. \"Patent Claims\" of a Contributor\n    means any patent claim(s), including without limitation, method,\n    process, and apparatus claims, in any patent Licensable by such\n    Contributor that would be infringed, but for the grant of the\n    License, by the making, using, selling, offering for sale, having\n    made, import, or transfer of either its Contributions or its\n    Contributor Version.\n1.12. \"Secondary License\"\n    means either the GNU General Public License, Version 2.0, the GNU\n    Lesser General Public License, Version 2.1, the GNU Affero General\n    Public License, Version 3.0, or any later versions of those\n    licenses.\n1.13. \"Source Code Form\"\n    means the form of the work preferred for making modifications.\n1.14. \"You\" (or \"Your\")\n    means an individual or a legal entity exercising rights under this\n    License. For legal entities, \"You\" includes any entity that\n    controls, is controlled by, or is under common control with You. For\n    purposes of this definition, \"control\" means (a) the power, direct\n    or indirect, to cause the direction or management of such entity,\n    whether by contract or otherwise, or (b) ownership of more than\n    fifty percent (50%) of the outstanding shares or beneficial\n    ownership of such entity.\n\nLicense Grants and Conditions\n\n\n2.1. Grants\nEach Contributor hereby grants You a world-wide, royalty-free,\nnon-exclusive license:\n(a) under intellectual property rights (other than patent or trademark)\n    Licensable by such Contributor to use, reproduce, make available,\n    modify, display, perform, distribute, and otherwise exploit its\n    Contributions, either on an unmodified basis, with Modifications, or\n    as part of a Larger Work; and\n(b) under Patent Claims of such Contributor to make, use, sell, offer\n    for sale, have made, import, and otherwise transfer either its\n    Contributions or its Contributor Version.\n2.2. Effective Date\nThe licenses granted in Section 2.1 with respect to any Contribution\nbecome effective for each Contribution on the date the Contributor first\ndistributes such Contribution.\n2.3. Limitations on Grant Scope\nThe licenses granted in this Section 2 are the only rights granted under\nthis License. No additional rights or licenses will be implied from the\ndistribution or licensing of Covered Software under this License.\nNotwithstanding Section 2.1(b) above, no patent license is granted by a\nContributor:\n(a) for any code that a Contributor has removed from Covered Software;\n    or\n(b) for infringements caused by: (i) Your and any other third party's\n    modifications of Covered Software, or (ii) the combination of its\n    Contributions with other software (except as part of its Contributor\n    Version); or\n(c) under Patent Claims infringed by Covered Software in the absence of\n    its Contributions.\nThis License does not grant any rights in the trademarks, service marks,\nor logos of any Contributor (except as may be necessary to comply with\nthe notice requirements in Section 3.4).\n2.4. Subsequent Licenses\nNo Contributor makes additional grants as a result of Your choice to\ndistribute the Covered Software under a subsequent version of this\nLicense (see Section 10.2) or under the terms of a Secondary License (if\npermitted under the terms of Section 3.3).\n2.5. Representation\nEach Contributor represents that the Contributor believes its\nContributions are its original creation(s) or it has sufficient rights\nto grant the rights to its Contributions conveyed by this License.\n2.6. Fair Use\nThis License is not intended to limit any rights You have under\napplicable copyright doctrines of fair use, fair dealing, or other\nequivalents.\n2.7. Conditions\nSections 3.1, 3.2, 3.3, and 3.4 are conditions of the licenses granted\nin Section 2.1.\n\nResponsibilities\n\n\n3.1. Distribution of Source Form\nAll distribution of Covered Software in Source Code Form, including any\nModifications that You create or to which You contribute, must be under\nthe terms of this License. You must inform recipients that the Source\nCode Form of the Covered Software is governed by the terms of this\nLicense, and how they can obtain a copy of this License. You may not\nattempt to alter or restrict the recipients' rights in the Source Code\nForm.\n3.2. Distribution of Executable Form\nIf You distribute Covered Software in Executable Form then:\n(a) such Covered Software must also be made available in Source Code\n    Form, as described in Section 3.1, and You must inform recipients of\n    the Executable Form how they can obtain a copy of such Source Code\n    Form by reasonable means in a timely manner, at a charge no more\n    than the cost of distribution to the recipient; and\n(b) You may distribute such Executable Form under the terms of this\n    License, or sublicense it under different terms, provided that the\n    license for the Executable Form does not attempt to limit or alter\n    the recipients' rights in the Source Code Form under this License.\n3.3. Distribution of a Larger Work\nYou may create and distribute a Larger Work under terms of Your choice,\nprovided that You also comply with the requirements of this License for\nthe Covered Software. If the Larger Work is a combination of Covered\nSoftware with a work governed by one or more Secondary Licenses, and the\nCovered Software is not Incompatible With Secondary Licenses, this\nLicense permits You to additionally distribute such Covered Software\nunder the terms of such Secondary License(s), so that the recipient of\nthe Larger Work may, at their option, further distribute the Covered\nSoftware under the terms of either this License or such Secondary\nLicense(s).\n3.4. Notices\nYou may not remove or alter the substance of any license notices\n(including copyright notices, patent notices, disclaimers of warranty,\nor limitations of liability) contained within the Source Code Form of\nthe Covered Software, except that You may alter any license notices to\nthe extent required to remedy known factual inaccuracies.\n3.5. Application of Additional Terms\nYou may choose to offer, and to charge a fee for, warranty, support,\nindemnity or liability obligations to one or more recipients of Covered\nSoftware. However, You may do so only on Your own behalf, and not on\nbehalf of any Contributor. You must make it absolutely clear that any\nsuch warranty, support, indemnity, or liability obligation is offered by\nYou alone, and You hereby agree to indemnify every Contributor for any\nliability incurred by such Contributor as a result of warranty, support,\nindemnity or liability terms You offer. You may include additional\ndisclaimers of warranty and limitations of liability specific to any\njurisdiction.\n\nInability to Comply Due to Statute or Regulation\n\n\nIf it is impossible for You to comply with any of the terms of this\nLicense with respect to some or all of the Covered Software due to\nstatute, judicial order, or regulation then You must: (a) comply with\nthe terms of this License to the maximum extent possible; and (b)\ndescribe the limitations and the code they affect. Such description must\nbe placed in a text file included with all distributions of the Covered\nSoftware under this License. Except to the extent prohibited by statute\nor regulation, such description must be sufficiently detailed for a\nrecipient of ordinary skill to be able to understand it.\n\nTermination\n\n\n5.1. The rights granted under this License will terminate automatically\nif You fail to comply with any of its terms. However, if You become\ncompliant, then the rights granted under this License from a particular\nContributor are reinstated (a) provisionally, unless and until such\nContributor explicitly and finally terminates Your grants, and (b) on an\nongoing basis, if such Contributor fails to notify You of the\nnon-compliance by some reasonable means prior to 60 days after You have\ncome back into compliance. Moreover, Your grants from a particular\nContributor are reinstated on an ongoing basis if such Contributor\nnotifies You of the non-compliance by some reasonable means, this is the\nfirst time You have received notice of non-compliance with this License\nfrom such Contributor, and You become compliant prior to 30 days after\nYour receipt of the notice.\n5.2. If You initiate litigation against any entity by asserting a patent\ninfringement claim (excluding declaratory judgment actions,\ncounter-claims, and cross-claims) alleging that a Contributor Version\ndirectly or indirectly infringes any patent, then the rights granted to\nYou by any and all Contributors for the Covered Software under Section\n2.1 of this License shall terminate.\n5.3. In the event of termination under Sections 5.1 or 5.2 above, all\nend user license agreements (excluding distributors and resellers) which\nhave been validly granted by You or Your distributors under this License\nprior to termination shall survive termination.\n\n\n                                                                 *\n\nDisclaimer of Warranty                                           *\n\n\n-------------------------                                           *\n                                                                 *\nCovered Software is provided under this License on an \"as is\"       *\nbasis, without warranty of any kind, either expressed, implied, or  *\nstatutory, including, without limitation, warranties that the       *\nCovered Software is free of defects, merchantable, fit for a        *\nparticular purpose or non-infringing. The entire risk as to the     *\nquality and performance of the Covered Software is with You.        *\nShould any Covered Software prove defective in any respect, You     *\n(not any Contributor) assume the cost of any necessary servicing,   *\nrepair, or correction. This disclaimer of warranty constitutes an   *\nessential part of this License. No use of any Covered Software is   *\nauthorized under this License except under this disclaimer.         *\n                                                                 *\n\n\n\n\n                                                                 *\n\nLimitation of Liability                                          *\n\n\n--------------------------                                          *\n                                                                 *\nUnder no circumstances and under no legal theory, whether tort      *\n(including negligence), contract, or otherwise, shall any           *\nContributor, or anyone who distributes Covered Software as          *\npermitted above, be liable to You for any direct, indirect,         *\nspecial, incidental, or consequential damages of any character      *\nincluding, without limitation, damages for lost profits, loss of    *\ngoodwill, work stoppage, computer failure or malfunction, or any    *\nand all other commercial damages or losses, even if such party      *\nshall have been informed of the possibility of such damages. This   *\nlimitation of liability shall not apply to liability for death or   *\npersonal injury resulting from such party's negligence to the       *\nextent applicable law prohibits such limitation. Some               *\njurisdictions do not allow the exclusion or limitation of           *\nincidental or consequential damages, so this exclusion and          *\nlimitation may not apply to You.                                    *\n                                                                 *\n\n\n\nLitigation\n\n\nAny litigation relating to this License may be brought only in the\ncourts of a jurisdiction where the defendant maintains its principal\nplace of business and such litigation shall be governed by laws of that\njurisdiction, without reference to its conflict-of-law provisions.\nNothing in this Section shall prevent a party's ability to bring\ncross-claims or counter-claims.\n\nMiscellaneous\n\n\nThis License represents the complete agreement concerning the subject\nmatter hereof. If any provision of this License is held to be\nunenforceable, such provision shall be reformed only to the extent\nnecessary to make it enforceable. Any law or regulation which provides\nthat the language of a contract shall be construed against the drafter\nshall not be used to construe this License against a Contributor.\n\nVersions of the License\n\n\n10.1. New Versions\nMozilla Foundation is the license steward. Except as provided in Section\n10.3, no one other than the license steward has the right to modify or\npublish new versions of this License. Each version will be given a\ndistinguishing version number.\n10.2. Effect of New Versions\nYou may distribute the Covered Software under the terms of the version\nof the License under which You originally received the Covered Software,\nor under the terms of any subsequent version published by the license\nsteward.\n10.3. Modified Versions\nIf you create software not governed by this License, and you want to\ncreate a new license for such software, you may create and use a\nmodified version of this License if you rename the license and remove\nany references to the name of the license steward (except to note that\nsuch modified license differs from this License).\n10.4. Distributing Source Code Form that is Incompatible With Secondary\nLicenses\nIf You choose to distribute Source Code Form that is Incompatible With\nSecondary Licenses under the terms of this version of the License, the\nnotice described in Exhibit B of this License must be attached.\nExhibit A - Source Code Form License Notice\n  This Source Code Form is subject to the terms of the Mozilla Public\n  License, v. 2.0. If a copy of the MPL was not distributed with this\n  file, You can obtain one at http://mozilla.org/MPL/2.0/.\nIf it is not possible or desirable to put the notice in a particular\nfile, then You may include the notice in a location (such as a LICENSE\nfile in a relevant directory) where a recipient would be likely to look\nfor such a notice.\nYou may add additional accurate notices of copyright ownership.\nExhibit B - \"Incompatible With Secondary Licenses\" Notice\n  This Source Code Form is \"Incompatible With Secondary Licenses\", as\n  defined by the Mozilla Public License, v. 2.0.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PrismaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ResultModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SpecialtiesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TestModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\ncluster_ResultModule\n\n\n\ncluster_ResultModule_providers\n\n\n\ncluster_SpecialtiesModule\n\n\n\ncluster_SpecialtiesModule_providers\n\n\n\ncluster_TestModule\n\n\n\ncluster_TestModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAuthModule -->\n\nPrismaModule->AuthModule\n\n\n\n\n\nResultModule\n\nResultModule\n\nResultModule -->\n\nPrismaModule->ResultModule\n\n\n\n\n\nSpecialtiesModule\n\nSpecialtiesModule\n\nSpecialtiesModule -->\n\nPrismaModule->SpecialtiesModule\n\n\n\n\n\nTestModule\n\nTestModule\n\nTestModule -->\n\nPrismaModule->TestModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nPrismaModule->UserModule\n\n\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nPrismaService \n\nPrismaService \n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\nAppModule -->\n\nResultModule->AppModule\n\n\n\nAppModule -->\n\nSpecialtiesModule->AppModule\n\n\n\nAppModule -->\n\nTestModule->AppModule\n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\nResultService\n\nResultService\n\nResultModule -->\n\nResultService->ResultModule\n\n\n\n\n\nSpecialtiesService\n\nSpecialtiesService\n\nSpecialtiesModule -->\n\nSpecialtiesService->SpecialtiesModule\n\n\n\n\n\nTestService\n\nTestService\n\nTestModule -->\n\nTestService->TestModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        7 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    6 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    8 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    15 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\nTodo\n\n Crud Specialties\n Crud Results\n Incluir a função isAdmin nos campos devidos\n Incluir a função loggedUser nos campos devidos\n swagger\n Readme\n Testar API\n Deploy\n\nIn Progress (Atribuir um responsável)\n\n Crud Auth (Bruna)\n Incluir a função isAdmin nos campos devidos (Felipe)\n Incluir a função loggedUser nos campos devidos (Felipe)\n\nDone ✓\n\n Crud Auth\n Prisma Schema\n Prisma Service e Module\n Entidade Auth\n Entidade User\n Crud User\n Função isAdmin\n Função HandleError\n Crud User\n Crud Test\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            LoggedUser   (src/.../logged-user.decorator.ts)\n                        \n                        \n                            prisma   (src/.../seed.ts)\n                        \n                        \n                            seeds   (src/.../seed.ts)\n                        \n                        \n                            specialtie   (src/.../03-specialties.ts)\n                        \n                        \n                            specialties   (src/.../03-specialties.ts)\n                        \n                        \n                            test   (src/.../02-Test-crud.ts)\n                        \n                        \n                            Tests   (src/.../02-Test-crud.ts)\n                        \n                        \n                            user   (src/.../01-user.ts)\n                        \n                        \n                            users   (src/.../01-user.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/auth/logged-user.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        LoggedUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator((_, ctx: ExecutionContext) => {\n  const request = ctx.switchToHttp().getRequest();\n  const user = request.user;\n\n  delete user.password;\n\n  return user;\n})\n                    \n                \n\n\n        \n    \n\n    src/prisma/seed.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        prisma\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new PrismaClient()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seeds\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.entries({\n  ...require('./seed/01-user'),\n  ...require('./seed/02-Test-crud'),\n  ...require('./seed/03-specialties'),\n})\n                    \n                \n\n\n        \n    \n\n    src/prisma/seed/03-specialties.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        specialtie\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (prisma: PrismaClient) => {\n  for (const obj of Object.values(specialties)) {\n    await prisma.specialtie.upsert({\n      where: { performance: obj.performance },\n      update: {},\n      create: {\n        ...obj,\n      },\n    });\n  }\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        specialties\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Prisma.SpecialtieCreateInput[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    performance: 'Inserir nome',\n    description: 'Inserir descrição',\n    system: 0,\n    person: 0,\n    technology: 0,\n    process: 0,\n    influence: 0,\n  },\n]\n                    \n                \n\n\n        \n    \n\n    src/prisma/seed/02-Test-crud.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        test\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Prisma.TestCreateInput[]\n\n                    \n                \n                \n                    \n                        Default value : [\n\t{\n    title:'proeficiencia',\n\n\t\tsystem:[\n      'Você é capaz de implementar features simples e resolver pequenos bugs dentro da sua squad?',\n      'Você desenha e implementa soluções de média e alta complexidade reduzindo débitos técnicos do time?',\n      'Você é capaz de subir e controlar sistemas em produção e também monitora a qualidade olhando para SLAs?',\n      'Você desenvolve arquitetura para futuras soluções e define SLAs?',\n      'Você lidera as soluções técnicas com excelência e cria planos de contingências?'\n    ],\n    person:[\n      'Você está sempre aprendendo com os outros e estuda mais quando necessário?',\n      'Você sempre ajuda as pessoas do seu time a terem sucesso em seus desafios',\n      'Você organiza times, promove feedbacks e intermedeia discussões',\n      'Você mentora outros em seu desenvolvimento e já foi coach na construção de PDI',\n      'Você gerencia carreiras, expectativas, performances e nível de engajamento do seu time'\n    ],\n    test:[\n      'Você implementa teste unitário e também testa a sua solução manualmente considerando as definições do produto?',\n      'Você simula comportamentos dos clientes no seu desenvolvimento, testa além do caminho feliz e analisa o impacto das mudanças',\n      'Você implementa teste e2e, de integração que permita avaliar e monitorar o produto'\n    ],\n    design:[\n      'Você conhece e aplica os princípios do S.O.L.I.D (Ou algum outro pattern definido pelo seu chapter Manager) no seu código?',\n      'Você conhece e aplica pelo menos outros 3 princípios de pattern no seu código e ajuda seus colegas de time a escolherem qual o melhor para a solução do problema',\n      'Você já ajudou a definir padrões de projetos de times/produtos fora do seu time'\n    ],\n    toolshop:[\n      'Você conhece o conceito de código limpo (link) e aplica o conceito em pelo menos 50% do seu código. Conhece e desenvolve seguindo os nossos processos de CI/CD?',\n      'Você Constrói códigos modulares e segue os conceitos de código limpo em 80% do seu código',\n      'Você ajuda a definir processos de CI/CD do seu time e da sua área. Ensina seus colegas a importância de um código limpo e cobra isso nos PRs que revisa'\n    ],\n    process:[\n      'Você segue todo o flow (git, CI/CD, Jira..) de desenvolvimento entregando features consistentes em produção?',\n      'Você sugere mudanças nos flows com consistência, sempre procurando caminhos para melhorar',\n      'Você sempre chama o time para reavaliar os flows, garantindo que todos entendam os benefícios e impactos',\n      'Você é o responsável por ajustar os flows do time, escutando feedbacks e guiando através das mudanças',\n      'Você define os flows baseado na maturidade, agilidade e disciplina do time'\n    ],\n    computationalFundamentals:[\n      'Você Conhece e aplica estruturas de dados e multithreading?',\n      'Você consegue desenhar a arquitetura de um sistema de complexidade média a alta',\n      'Você consegue desenhar uma arquitetura multis sistêmica e para múltiplos times'\n    ]\n\t},\n]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Tests\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (prisma: PrismaClient) => {\n\tfor (const obj of Object.values(test)) {\n\t\tawait prisma.test.upsert({\n\t\t\twhere: { title: obj.title },\n\t\t\tupdate: {},\n\t\t\tcreate: {\n\t\t\t\t...obj,\n\t\t\t},\n\t\t});\n\t}\n}\n                    \n                \n\n\n        \n    \n\n    src/prisma/seed/01-user.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (prisma: PrismaClient) => {\n\tfor (const obj of Object.values(users)) {\n\t\tawait prisma.user.upsert({\n\t\t\twhere: { email: obj.email },\n\t\t\tupdate: {},\n\t\t\tcreate: {\n\t\t\t\t...obj,\n\t\t\t\tpassword: await bcrypt.hash(obj.password, 10),\n\t\t\t},\n\t\t});\n\t}\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Prisma.UserCreateInput[]\n\n                    \n                \n                \n                    \n                        Default value : [\n\t{\n\t\tname: \"PetLove\",\n\t\temail: \"petlove@bootcamp.com\",\n\t\tpassword: \"Petlove@123\",\n\t},\n]\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
