var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.28,1,2.406]],["body/controllers/AppController.html",[0,2.016,1,3.791,2,1.593,3,0.288,4,0.255,5,0.222,6,3.747,7,0.511,8,1.9,9,5.467,10,1.417,11,0.023,12,0.639,13,4.399,14,5.567,15,3.467,16,5.567,17,2.966,18,5.567,19,3.791,20,6.621,21,3.945,22,6.419,23,4.372,24,5.467,25,2.422,26,4.741,27,5.567,28,1.793,29,0.988,30,0.6,31,0.941,32,2.527,33,1.191,34,3.507,35,3.747,36,4.399,37,0.288,38,0.146,39,1.914,40,1.691,41,2.527,42,2.527,43,3.747,44,2.996,45,1.502,46,4.399,47,0.017,48,0.017]],["title/modules/AppModule.html",[49,1.206,50,2.406]],["body/modules/AppModule.html",[1,4.052,2,1.945,3,0.273,4,0.241,5,0.21,11,0.023,30,0.683,31,0.89,34,3.828,35,3.543,37,0.273,38,0.138,47,0.017,48,0.017,49,1.834,50,4.936,51,1.81,52,2.337,53,3.543,54,3.543,55,3.543,56,4.054,57,2.9,58,4.151,59,4.054,60,4.054,61,4.151,62,2.667,63,1.931,64,2.065,65,4.16,66,2.862,67,3.085,68,4.16,69,4.16,70,4.16,71,4.16,72,4.16,73,1.7,74,4.16,75,4.16,76,4.16]],["title/injectables/AppService.html",[34,2.029,77,1.013]],["body/injectables/AppService.html",[3,0.336,4,0.297,5,0.259,7,0.595,8,2.087,9,5.764,11,0.022,12,0.744,28,1.65,29,1.085,30,0.504,31,1.096,34,3.511,37,0.336,38,0.171,45,1.749,47,0.019,48,0.019,77,1.754,78,2.378,79,4.364,80,5.124,81,4.364,82,5.124,83,5.124,84,5.124,85,5.124,86,5.124,87,4.364,88,5.124]],["title/controllers/AuthController.html",[0,1.28,89,2.406]],["body/controllers/AuthController.html",[0,1.364,2,1.364,3,0.247,4,0.218,5,0.19,7,0.438,8,1.718,10,1.62,11,0.023,12,0.731,25,2.189,28,2.088,29,0.669,30,0.661,31,0.805,32,2.163,33,1.019,37,0.247,38,0.125,39,1.639,40,1.448,41,2.89,42,2.89,45,1.718,47,0.016,48,0.016,89,3.427,90,3.208,91,2.346,92,2.84,93,4.119,94,5.032,95,3.208,96,4.039,97,3.766,98,5.032,99,4.119,100,5.032,101,3.766,102,1.822,103,1.443,104,0.68,105,1.362,106,3.427,107,3.766,108,1.691,109,2.84,110,5.032,111,3.794,112,3.766,113,3.766,114,2.316,115,2.681,116,5.032,117,2.89,118,2.346,119,3.134,120,3.766,121,3.766,122,2.346,123,2.346,124,1.448,125,3.134,126,3.529,127,1.87,128,3.254,129,3.208,130,3.208,131,2.346,132,3.208,133,2.007,134,5.032,135,2.346,136,3.766,137,3.766,138,3.766,139,3.134,140,3.766,141,3.766,142,2.346,143,3.766,144,3.766,145,2.346]],["title/modules/AuthModule.html",[49,1.206,56,2.201]],["body/modules/AuthModule.html",[2,2.022,3,0.29,4,0.256,5,0.223,11,0.023,30,0.676,31,0.945,37,0.29,38,0.147,47,0.017,48,0.017,49,1.906,51,1.923,52,2.429,56,4.405,57,2.946,62,2.771,63,2.051,64,2.194,66,2.974,67,3.206,89,4.168,124,1.699,128,3.889,129,3.763,146,3.763,147,4.419,148,3.763,149,4.217,150,4.419,151,4.419,152,2.752,153,3.763,154,2.752,155,2.752,156,4.419,157,2.752,158,2.752,159,2.194,160,3.763,161,3.763,162,3.332,163,3.763,164,3.763,165,4.419]],["title/injectables/AuthService.html",[77,1.013,128,2.029]],["body/injectables/AuthService.html",[3,0.253,4,0.223,5,0.195,7,0.448,8,1.744,11,0.023,12,0.742,28,1.241,30,0.642,31,0.824,37,0.253,38,0.128,40,1.964,45,1.316,47,0.016,48,0.016,77,1.465,78,1.789,93,3.48,95,4.352,96,4.065,99,2.625,102,1.85,103,1.465,104,0.691,105,1.383,106,3.48,108,1.464,128,2.934,130,3.282,131,2.4,132,3.282,154,2.4,166,3.282,167,2.846,168,2.934,169,2.213,170,2.494,171,5.672,172,3.854,173,2.537,174,3.854,175,2.906,176,3.854,177,3.853,178,4.352,179,3.054,180,2.668,181,2.833,182,3.854,183,2.846,184,2.625,185,3.292,186,2.66,187,4.352,188,5.109,189,3.282,190,3.854,191,3.282,192,5.109,193,3.854,194,3.853,195,1.913,196,3.282,197,1.316,198,3.282,199,2.053,200,2.906,201,2.906,202,3.854,203,2.625]],["title/classes/ChangePasswordDto.html",[38,0.118,204,2.029]],["body/classes/ChangePasswordDto.html",[3,0.246,4,0.218,5,0.19,7,0.437,10,1.618,11,0.023,12,0.73,17,3.016,21,2.886,25,1.636,29,1.118,30,0.556,33,1.018,37,0.329,38,0.188,47,0.016,48,0.016,104,0.68,114,2.314,115,3.22,180,1.536,181,2.628,204,2.886,205,1.142,206,4.269,207,2.56,208,1.441,209,4.269,210,3.202,211,3.923,212,3.759,213,2.835,214,4.269,215,4.269,216,4.414,217,4.269,218,3.202,219,4.269,220,4.269,221,4.269,222,4.269,223,4.269,224,3.016,225,4.269,226,4.269,227,2.923,228,3.759,229,2.923,230,2.341,231,2.835,232,3.356,233,2.835,234,4.116,235,4.269,236,1.745,237,2.003,238,1.211,239,2.56,240,2.159,241,2.003,242,3.202,243,3.789,244,3.789,245,3.789,246,2.05,247,3.202,248,2.56,249,2.56,250,3.202,251,2.003,252,3.202,253,3.202,254,2.003,255,2.835,256,3.202,257,2.835,258,3.13,259,2.56,260,2.835]],["title/classes/CreateResultDto.html",[38,0.118,261,2.029]],["body/classes/CreateResultDto.html",[3,0.231,4,0.204,5,0.178,7,0.41,10,2.096,11,0.023,12,0.945,30,0.473,33,0.954,37,0.231,38,0.16,47,0.015,48,0.015,73,2.804,104,0.88,205,1.072,208,1.38,227,3.251,229,3.076,236,1.637,246,2.357,261,2.764,262,5.644,263,2.659,264,3.413,265,3.838,266,2.86,267,2.681,268,2.86,269,3.413,270,4.022,271,6.51,272,3.251,273,6.626,274,4.813,275,4.813,276,4.439,277,3.526,278,3.667,279,3.003,280,3.667,281,3.526,282,3.278,283,3.526,284,3.526,285,3.526,286,4.813,287,3.526,288,4.997]],["title/classes/CreateSpecialtyDto.html",[38,0.118,289,2.029]],["body/classes/CreateSpecialtyDto.html",[3,0.211,4,0.187,5,0.163,7,0.374,10,2.046,11,0.023,12,0.957,29,1.006,30,0.445,33,0.872,37,0.211,38,0.151,47,0.014,48,0.014,104,0.891,205,0.98,208,1.297,227,3.208,229,3.009,232,2.784,236,1.496,246,2.467,266,2.425,267,2.596,268,2.425,270,3.834,276,3.41,278,4.104,280,2.817,282,3.08,288,4.664,289,2.598,290,5.686,291,2.431,292,2.594,293,3.427,294,3.254,295,3.427,296,2.784,297,3.253,298,3.223,299,3.41,300,2.598,301,4.523,302,4.523,303,4.523,304,4.523,305,4.523,306,4.523,307,4.523,308,4.523,309,3.223,310,5.081,311,5.966,312,6.676,313,3.223,314,4.523,315,4.523,316,4.523,317,4.825,318,4.523,319,4.523,320,4.523,321,4.523,322,4.523,323,3.223,324,4.523,325,3.223,326,3.223,327,4.523,328,3.223,329,3.223,330,3.223,331,5.081]],["title/classes/CreateTestDto.html",[38,0.118,332,2.029]],["body/classes/CreateTestDto.html",[3,0.111,4,0.098,5,0.085,7,0.197,10,1.701,11,0.022,12,0.767,15,1.054,17,3.707,19,1.884,21,3.959,23,4.134,25,2.202,29,1.105,30,0.272,33,0.458,37,0.111,38,0.092,47,0.009,48,0.009,73,1.434,104,0.714,117,0.972,203,3.597,205,0.514,208,0.793,224,0.901,227,2.889,229,2.537,232,2.912,236,0.785,246,1.913,248,1.884,249,1.152,251,2.814,254,2.556,264,2.185,265,2.783,266,1.629,267,1.527,268,1.629,269,2.185,280,1.054,299,1.276,332,1.589,333,2.912,334,4.655,335,1.276,336,2.646,337,5.062,338,4.053,339,4.053,340,5.281,341,4.788,342,2.766,343,2.766,344,4.396,345,2.766,346,2.766,347,2.646,348,2.766,349,2.988,350,2.988,351,4.903,352,3.452,353,2.766,354,2.766,355,2.766,356,2.766,357,1.692,358,2.766,359,3.452,360,2.766,361,2.39,362,1.692,363,3.509,364,2.766,365,3.806,366,2.988,367,2.988,368,3.369,369,2.988,370,1.692,371,2.988,372,2.988,373,3.452,374,2.766,375,3.369,376,4.341,377,4.053,378,1.692,379,2.766,380,2.766,381,2.766,382,2.766,383,2.766,384,2.988,385,1.692,386,2.988,387,4.053,388,2.766,389,2.766,390,2.766,391,2.766,392,2.766,393,1.692,394,2.766,395,3.043,396,1.692,397,2.766,398,2.766,399,2.356,400,3.452,401,3.806,402,1.692,403,1.692,404,5.281,405,1.692,406,4.311,407,3.448,408,3.509,409,5.718,410,2.356,411,1.441,412,2.356,413,1.441,414,1.441,415,1.441,416,1.441,417,1.441,418,2.988,419,2.988,420,2.356,421,2.356,422,2.356,423,1.441,424,1.441,425,1.441,426,1.441,427,1.441,428,2.086,429,2.356,430,1.441,431,1.441,432,2.356,433,2.356,434,2.988,435,1.441,436,1.441,437,1.441,438,1.441,439,1.441,440,1.441,441,1.441,442,1.054,443,3.452,444,1.441,445,1.441,446,1.276,447,1.441,448,1.441,449,2.988,450,1.441,451,4.903,452,1.441,453,2.646,454,1.441,455,1.441,456,2.356,457,1.441,458,2.356,459,1.441,460,1.441,461,1.441,462,2.988,463,2.356,464,1.441,465,1.441,466,2.086,467,1.441,468,1.441,469,1.441,470,1.441,471,1.441,472,1.441,473,2.356,474,1.276,475,1.441,476,1.276,477,1.441,478,1.441,479,1.441,480,1.441,481,2.988,482,2.356,483,3.452,484,1.441,485,1.441,486,1.441,487,1.441,488,1.441,489,1.441,490,2.646,491,1.276,492,1.441,493,1.441,494,1.441,495,1.441,496,1.441,497,1.441,498,1.441,499,1.441,500,2.356,501,1.441,502,1.441,503,1.441,504,1.441,505,4.053,506,1.441,507,2.356,508,2.356,509,1.441,510,1.441,511,1.441,512,2.356,513,1.441,514,1.441,515,1.276,516,1.441,517,1.441,518,1.441,519,1.441,520,1.441,521,1.441,522,1.441,523,1.441,524,1.441,525,1.276,526,1.441,527,3.806,528,3.452,529,1.441,530,1.441,531,1.441,532,2.356,533,1.441,534,1.441,535,2.356,536,2.356,537,1.441,538,1.441,539,1.441,540,1.441,541,2.356,542,1.441,543,1.441,544,1.441,545,2.356,546,1.441,547,1.152,548,1.441,549,1.441,550,1.692,551,1.441,552,1.441,553,1.441,554,1.441,555,1.441,556,1.441,557,1.441,558,1.441,559,1.441,560,1.441,561,1.441,562,1.441,563,1.441,564,1.441,565,2.356,566,2.356,567,1.441,568,1.441,569,1.441,570,1.441]],["title/classes/CreateUserDto.html",[38,0.118,237,1.882]],["body/classes/CreateUserDto.html",[3,0.254,4,0.224,5,0.196,7,0.45,10,1.97,11,0.023,12,0.888,17,2.733,29,1.202,30,0.504,33,1.049,37,0.254,38,0.171,47,0.016,48,0.016,103,1.649,104,0.827,114,2.096,115,3.483,180,2.6,181,2.668,205,1.178,207,2.64,208,1.471,209,4.334,210,3.302,211,3.81,213,2.923,214,3.868,215,3.868,216,4.167,217,3.868,218,3.302,219,3.868,220,3.868,221,3.868,222,3.868,223,3.868,224,2.733,225,3.868,226,3.868,227,3.095,229,2.953,231,2.923,232,3.259,233,2.923,234,4.334,236,1.799,237,2.733,243,2.923,244,2.923,245,2.923,246,2.082,571,5.419,572,3.876,573,3.876,574,4.369,575,3.876,576,5.129,577,3.876,578,4.369,579,3.868,580,3.876,581,3.876,582,4.369,583,3.876,584,3.876]],["title/interfaces/JwtPayload.html",[585,2.406,586,2.406]],["body/interfaces/JwtPayload.html",[3,0.35,4,0.309,5,0.27,7,0.621,11,0.022,29,1.181,37,0.35,47,0.019,48,0.019,104,0.723,105,1.697,197,2.342,208,1.798,585,3.64,586,4.269,587,5.344,588,4.552]],["title/injectables/JwtStrategy.html",[77,1.013,149,2.201]],["body/injectables/JwtStrategy.html",[3,0.28,4,0.248,5,0.216,7,0.497,8,1.867,11,0.023,12,0.794,28,1.377,29,0.759,30,0.624,31,0.914,37,0.28,38,0.142,39,1.861,40,1.644,45,1.46,47,0.017,48,0.017,77,1.568,78,1.985,102,1.98,103,1.568,104,0.859,105,1.48,108,1.622,111,3.224,124,1.644,149,3.405,159,2.123,162,3.224,167,2.992,168,2.456,169,2.456,170,2.596,173,2.714,175,4.123,179,2.278,180,2.234,183,2.123,184,2.912,185,2.456,186,1.985,194,3.224,195,2.123,241,2.278,589,3.642,590,5.467,591,4.276,592,5.467,593,5.467,594,4.276,595,3.642,596,2.663,597,4.276,598,4.276,599,4.276,600,3.642,601,2.663,602,4.276,603,4.276,604,4.276,605,4.276,606,4.276,607,3.642,608,4.276,609,4.276,610,4.276]],["title/classes/LoginDto.html",[38,0.118,96,2.201]],["body/classes/LoginDto.html",[3,0.307,4,0.272,5,0.237,7,0.545,10,1.866,11,0.022,12,0.841,29,1.166,30,0.57,33,1.269,37,0.307,38,0.193,47,0.018,48,0.018,96,3.608,104,0.783,108,1.677,180,2.757,181,3.132,205,1.425,208,1.662,211,3.608,227,3.048,229,2.918,232,3.35,234,4.282,236,2.177,246,2.098,574,4.935,582,4.935,611,3.994,612,4.689,613,4.689,614,4.689,615,4.689]],["title/classes/LoginResponseDto.html",[38,0.118,131,2.201]],["body/classes/LoginResponseDto.html",[3,0.31,4,0.274,5,0.239,7,0.55,10,1.877,11,0.023,12,0.846,29,1.034,30,0.573,33,1.281,37,0.31,38,0.158,47,0.018,48,0.018,93,3.969,99,4.608,104,0.788,108,1.759,111,4.394,127,2.35,131,3.63,159,2.893,199,3.105,205,1.439,208,1.671,227,2.705,229,2.931,246,2.11,616,4.032,617,5.828,618,6.589,619,4.963,620,4.734,621,4.734,622,3.57]],["title/modules/PrismaModule.html",[49,1.206,57,1.537]],["body/modules/PrismaModule.html",[3,0.326,4,0.288,5,0.251,11,0.022,30,0.59,31,1.063,37,0.326,38,0.165,47,0.019,48,0.019,49,2.05,51,2.163,52,2.612,57,3.067,62,2.98,63,2.307,64,2.468,66,3.198,170,2.967,623,4.233,624,4.233,625,4.233,626,4.97,627,6.003,628,4.97]],["title/injectables/PrismaService.html",[77,1.013,170,1.444]],["body/injectables/PrismaService.html",[3,0.3,4,0.265,5,0.231,7,0.532,8,1.95,11,0.023,12,0.904,28,1.839,30,0.561,31,0.98,37,0.3,38,0.153,47,0.018,48,0.018,77,1.638,78,2.126,102,1.659,103,1.314,104,0.772,105,1.24,167,3.441,170,2.334,183,2.835,208,1.638,241,3.042,629,3.902,630,5.299,631,6.222,632,5.711,633,6.833,634,5.711,635,6.513,636,4.581,637,4.581,638,4.581,639,4.581,640,2.631,641,4.581,642,4.581,643,4.581,644,4.581]],["title/classes/Result.html",[38,0.118,272,1.64]],["body/classes/Result.html",[3,0.273,4,0.241,5,0.21,7,0.483,11,0.022,12,1.024,29,1.183,37,0.273,38,0.138,47,0.017,48,0.017,104,0.953,105,1.938,197,2.031,205,1.264,208,1.541,266,2.761,267,2.588,268,2.761,270,4.022,272,2.493,292,2.953,293,3.417,295,3.417,296,3.169,297,3.611,645,3.543,646,4.486,647,4.486,648,5.067,649,4.16,650,4.16,651,4.16,652,4.575,653,3.345,654,4.16,655,4.16,656,4.16,657,4.16,658,4.16,659,4.16,660,4.16,661,4.16]],["title/controllers/ResultController.html",[0,1.28,662,2.406]],["body/controllers/ResultController.html",[0,1.086,2,1.086,3,0.197,4,0.174,5,0.151,7,0.348,8,1.467,10,1.87,11,0.023,12,0.843,28,2.117,29,1.15,30,0.626,31,0.642,32,1.723,33,0.812,37,0.197,38,0.1,39,1.305,40,1.153,41,3.47,42,3.335,45,1.982,47,0.019,48,0.013,73,2.469,91,1.868,102,2.103,103,1.665,104,0.785,105,1.572,108,1.757,109,2.262,114,1.757,118,3.128,119,2.677,122,1.868,123,1.868,124,1.153,125,2.677,126,3.616,127,1.489,133,2.29,135,1.868,139,3.416,142,1.868,145,2.677,195,1.489,197,2.173,199,2.29,238,1.766,261,3.15,272,3.148,622,2.262,662,2.927,663,2.555,664,2.134,665,2.469,666,1.995,667,1.995,668,2.555,669,3.159,670,2.555,671,3,672,1.489,673,2.927,674,3,675,2.043,676,2.555,677,3.661,678,3,679,1.723,680,3.241,681,3,682,2.927,683,1.723,684,3.416,685,2.262,686,3.241,687,4.298,688,3,689,2.043,690,2.885,691,2.555,692,1.489,693,3.241,694,1.489,695,1.723,696,3,697,3,698,3,699,3,700,2.043,701,3,702,2.555,703,2.555,704,3,705,2.262,706,2.555,707,3,708,2.262,709,3]],["title/modules/ResultModule.html",[49,1.206,58,2.201]],["body/modules/ResultModule.html",[2,2.101,3,0.308,4,0.272,5,0.237,11,0.023,30,0.664,31,1.005,37,0.308,38,0.156,47,0.018,48,0.018,49,1.981,51,2.045,52,2.524,57,2.992,58,4.384,62,2.88,63,2.182,64,2.333,66,3.091,67,3.332,124,1.807,152,2.928,155,2.928,157,2.928,158,2.928,159,2.333,662,4.287,690,3.949,691,4.003,710,4.003,711,4.003,712,4.7,713,4.7,714,4.7]],["title/injectables/ResultService.html",[77,1.013,690,2.029]],["body/injectables/ResultService.html",[3,0.27,4,0.101,5,0.088,7,0.202,8,0.965,11,0.023,12,0.705,28,1.459,29,0.947,30,0.542,31,0.372,37,0.114,38,0.058,39,0.756,40,0.668,45,2.086,47,0.009,48,0.009,77,0.811,78,0.806,92,2.695,102,1.759,103,1.393,104,0.657,105,1.315,108,1.631,114,0.71,115,1.506,127,0.863,145,1.082,167,3.073,168,0.998,169,0.998,170,1.683,173,1.774,179,3.559,180,2.318,183,2.542,184,1.925,185,2.603,186,2.103,197,2.114,199,1.904,201,2.695,203,1.183,238,0.91,251,1.506,254,1.904,257,1.31,258,1.761,259,1.183,261,2.365,266,2.376,267,2.228,268,2.376,272,2.477,276,1.31,278,1.082,282,1.183,292,0.863,293,3.169,294,1.761,295,3.169,344,1.183,375,1.31,395,2.434,407,4.731,491,2.132,596,2.822,601,1.082,640,0.998,646,2.132,647,3.662,648,2.408,664,1.403,665,1.624,666,1.312,667,1.911,668,2.408,669,2.411,672,1.403,675,1.925,679,0.998,682,1.183,683,1.624,684,2.565,690,1.624,692,0.863,693,2.132,694,0.863,715,1.48,716,1.738,717,1.738,718,1.738,719,1.738,720,1.738,721,1.738,722,1.48,723,1.31,724,0.998,725,1.183,726,1.506,727,1.183,728,2.132,729,1.48,730,1.48,731,1.48,732,1.48,733,1.738,734,3.507,735,3.507,736,3.507,737,1.738,738,1.738,739,1.738,740,1.738,741,1.925,742,2.408,743,2.408,744,1.738,745,1.738,746,1.738,747,1.738,748,1.738,749,1.738,750,1.738,751,1.738,752,1.738,753,2.827,754,1.738,755,1.738,756,1.738,757,1.738,758,1.738,759,1.738,760,1.738,761,1.738,762,1.738,763,3.574,764,1.738,765,1.738,766,1.48,767,3.86,768,2.827,769,1.738,770,2.827,771,2.827,772,1.738,773,1.738,774,1.738,775,1.738,776,1.48,777,1.738,778,1.738,779,2.827,780,1.738,781,1.738,782,3.044,783,3.044,784,3.044,785,3.044,786,3.044,787,3.044,788,2.695,789,3.044,790,3.044,791,3.044,792,3.044,793,3.044,794,3.044,795,3.044,796,2.695,797,1.738,798,1.738,799,3.044,800,3.044,801,3.044,802,3.044,803,2.695,804,4.137,805,3.044,806,3.044,807,3.044,808,3.044,809,2.434,810,1.761,811,2.827,812,1.738,813,1.738,814,1.738,815,1.48,816,1.48,817,1.738,818,1.48,819,1.31,820,1.48,821,3.574,822,3.574,823,2.827,824,2.827,825,2.827,826,2.827,827,2.827,828,2.408,829,2.827,830,1.738,831,1.738,832,1.738,833,1.738]],["title/controllers/SpecialtiesController.html",[0,1.28,834,2.406]],["body/controllers/SpecialtiesController.html",[0,1.044,2,1.044,3,0.189,4,0.167,5,0.145,7,0.335,8,1.426,10,1.841,11,0.023,12,0.83,28,2.099,29,1.139,30,0.619,31,0.616,32,1.656,33,0.78,37,0.189,38,0.096,39,1.254,40,1.108,41,3.423,42,3.283,45,1.951,47,0.013,48,0.013,91,1.795,102,2.07,103,1.639,104,0.773,105,1.547,108,1.847,109,2.174,114,1.707,118,2.601,119,2.601,122,1.795,123,1.795,124,1.108,125,2.601,126,3.712,127,1.431,133,3.045,135,1.795,139,3.56,142,1.795,145,2.601,195,2.438,197,2.15,238,1.734,289,3.093,300,3.832,664,2.073,665,2.399,666,1.939,667,2.653,669,2.959,670,2.455,672,1.431,673,2.845,675,1.963,676,2.455,677,3.557,679,1.656,680,2.174,682,2.845,683,1.656,685,2.174,686,3.149,689,1.963,692,1.431,694,1.431,695,1.656,700,1.963,702,2.455,703,2.455,705,2.174,708,2.174,834,2.845,835,2.455,836,1.795,837,2.883,838,4.494,839,4.061,840,2.883,841,3.557,842,4.177,843,2.883,844,2.455,845,2.883,846,3.354,847,3.557,848,2.883,849,2.399,850,2.455,851,3.149,852,2.883,853,2.883,854,2.174,855,2.883,856,2.883,857,2.883,858,2.455,859,2.883,860,2.883]],["title/modules/SpecialtiesModule.html",[49,1.206,59,2.201]],["body/modules/SpecialtiesModule.html",[2,2.101,3,0.308,4,0.272,5,0.237,11,0.023,30,0.664,31,1.005,37,0.308,38,0.156,47,0.018,48,0.018,49,1.981,51,2.045,52,2.524,57,2.992,59,4.384,62,2.88,63,2.182,64,2.333,66,3.091,67,3.332,124,1.807,152,2.928,155,2.928,157,2.928,158,2.928,159,2.333,834,4.287,849,3.949,850,4.003,861,4.003,862,4.003,863,4.7,864,4.7,865,4.7]],["title/injectables/SpecialtiesService.html",[77,1.013,849,2.029]],["body/injectables/SpecialtiesService.html",[3,0.202,4,0.178,5,0.155,7,0.357,8,1.493,11,0.023,12,0.885,28,1.887,29,1.157,30,0.641,31,0.657,37,0.202,38,0.102,39,1.338,40,1.182,45,2.001,47,0.014,48,0.014,77,1.254,78,1.427,102,2.206,103,1.747,104,0.824,105,1.649,108,1.848,114,1.256,127,1.526,145,1.915,167,3.427,168,1.765,169,1.765,170,2.267,173,2.528,179,2.33,183,2.91,185,2.512,186,2.03,197,2.079,199,2.955,238,1.409,289,3.185,300,2.512,442,2.724,596,3.65,601,1.915,640,1.765,653,2.724,664,2.171,665,2.512,666,2.03,667,2.363,669,3.024,672,2.171,675,2.979,679,2.512,682,2.094,683,2.512,692,1.526,694,1.526,724,1.765,725,2.094,726,1.638,727,2.094,809,3.778,810,3.171,836,2.724,846,3.454,849,2.512,851,3.298,866,2.618,867,3.074,868,3.074,869,3.074,870,3.074,871,3.074,872,3.074,873,2.618,874,3.074,875,2.618,876,3.074,877,3.725,878,3.725,879,3.074,880,4.374,881,2.618,882,3.074,883,3.074]],["title/classes/Specialty.html",[38,0.118,300,2.029]],["body/classes/Specialty.html",[3,0.285,4,0.252,5,0.22,7,0.505,11,0.022,12,1.025,29,1.197,37,0.285,38,0.145,47,0.017,48,0.017,104,0.954,105,1.826,197,2.074,205,1.322,208,1.585,246,2.2,266,2.82,267,2.644,268,2.82,270,4.052,292,3.016,293,3.49,294,3.784,295,3.49,296,3.237,297,3.672,300,3.175,884,3.706,885,4.351,886,4.351,887,4.351,888,4.351,889,4.351,890,4.351,891,4.351,892,4.351,893,4.351,894,4.351]],["title/classes/Test.html",[38,0.118,73,1.444]],["body/classes/Test.html",[3,0.28,4,0.248,5,0.216,7,0.497,11,0.022,12,1.028,29,1.239,37,0.28,38,0.142,47,0.017,48,0.017,73,2.596,104,0.957,105,1.719,197,1.867,205,1.299,208,1.568,264,3.405,265,3.405,266,2.538,267,2.379,268,2.538,269,3.405,292,2.714,296,2.913,297,3.14,333,3.793,336,4.123,895,3.642,896,4.276,897,4.276,898,4.276,899,4.276,900,4.276,901,4.276,902,4.276,903,4.276,904,4.276,905,4.276,906,4.276,907,4.276,908,4.276,909,4.276,910,4.276,911,4.276,912,4.276,913,4.276,914,4.276,915,4.276,916,4.276,917,4.276]],["title/controllers/TestController.html",[0,1.28,918,2.406]],["body/controllers/TestController.html",[0,1.158,2,1.158,3,0.21,4,0.185,5,0.161,7,0.371,8,1.535,10,1.818,11,0.023,12,0.82,25,1.957,28,2.084,29,1.056,30,0.636,31,0.684,32,1.836,33,0.865,37,0.21,38,0.106,39,1.391,40,1.229,41,3.416,42,3.242,45,1.927,47,0.014,48,0.014,73,2.754,91,1.991,102,2.044,103,1.619,104,0.763,105,1.528,108,1.783,114,1.838,117,2.583,118,2.801,119,1.991,122,1.991,123,1.991,124,1.229,125,2.801,126,2.801,127,1.587,133,1.704,135,1.991,139,1.991,142,1.991,195,2.583,197,1.776,238,1.818,332,2.988,333,3.169,395,3.063,622,4.256,664,2.233,666,2.088,667,2.088,669,2.953,672,1.587,673,3.063,679,1.836,680,2.411,683,1.836,685,2.411,689,2.178,692,1.587,694,1.587,695,1.836,700,2.178,705,2.411,706,2.723,708,2.411,836,1.991,844,2.723,854,2.411,918,3.063,919,2.723,920,2.723,921,3.831,922,3.198,923,3.198,924,4.256,925,3.198,926,3.198,927,3.391,928,3.24,929,3.831,930,4.497,931,3.198,932,2.988,933,2.723,934,3.391,935,3.198,936,3.198,937,2.723,938,3.198,939,3.198,940,3.198,941,5.202,942,3.198,943,3.198,944,3.198,945,3.198,946,3.198]],["title/modules/TestModule.html",[49,1.206,60,2.201]],["body/modules/TestModule.html",[2,2.098,3,0.307,4,0.272,5,0.237,11,0.023,30,0.663,31,1.003,37,0.307,38,0.156,47,0.018,48,0.018,49,1.978,51,2.04,52,2.521,57,2.99,60,4.382,62,2.876,63,2.177,64,2.328,66,3.087,67,3.327,124,1.803,152,2.921,155,2.921,157,2.921,158,2.921,159,2.328,333,2.498,918,4.282,932,3.947,933,3.994,947,3.994,948,4.689,949,3.994,950,4.689,951,4.689]],["title/injectables/TestService.html",[77,1.013,932,2.029]],["body/injectables/TestService.html",[3,0.191,4,0.168,5,0.147,7,0.338,8,1.435,11,0.023,12,0.833,25,1.265,28,1.741,29,1.061,30,0.62,31,0.622,37,0.191,38,0.097,39,1.265,40,1.118,45,1.685,47,0.013,48,0.013,73,2.21,77,1.205,78,1.35,102,2.077,103,1.645,104,0.776,105,1.553,108,1.814,117,1.67,127,1.444,167,3.318,168,1.67,169,1.67,170,2.21,173,2.45,179,2.239,183,2.087,185,3.105,186,2.51,197,2.155,199,2.881,238,1.589,264,3.074,265,3.368,266,2.51,267,2.353,268,2.51,269,3.368,292,1.444,296,1.549,332,3.105,333,3.185,407,4.662,442,1.811,596,3.074,601,1.811,640,1.67,653,3.074,664,2.087,666,1.951,667,2.291,669,2.684,672,2.087,679,2.414,683,2.414,692,1.444,694,1.444,723,2.193,724,1.67,725,1.98,726,1.549,727,1.98,729,3.58,730,3.58,731,3.58,732,3.58,734,3.58,735,3.58,736,3.58,767,3.169,809,2.863,810,3.074,836,2.618,873,2.477,877,2.477,878,2.477,927,2.193,928,3.368,932,2.414,934,3.169,952,2.477,953,2.908,954,2.908,955,2.908,956,2.908,957,2.908,958,2.477,959,2.477,960,4.203,961,2.908,962,4.203,963,4.203,964,2.908,965,2.908,966,2.908,967,2.908]],["title/classes/UpdateResultDto.html",[38,0.118,684,2.201]],["body/classes/UpdateResultDto.html",[3,0.252,4,0.222,5,0.194,7,0.446,10,1.963,11,0.023,12,0.885,29,0.905,30,0.562,33,1.039,37,0.252,38,0.17,47,0.016,48,0.016,73,2.491,104,0.824,115,3.247,205,1.167,208,1.462,224,2.715,227,3.136,229,2.944,230,2.391,232,3.048,235,4.314,236,1.782,238,1.236,241,2.045,246,2.207,251,2.715,254,3.247,261,2.205,263,2.895,270,3.5,272,2.829,278,3.174,279,3.27,280,3.796,288,4.314,293,3.643,295,3.643,299,3.843,310,4.341,317,4.341,331,4.341,646,4.314,647,4.314,652,5.191,653,3.796,684,3.174,693,2.895,776,4.341,968,5.402,969,5.096,970,3.839,971,6.094,972,5.096,973,3.839,974,5.096,975,3.839,976,3.839]],["title/classes/UpdateSpecialtyDto.html",[38,0.118,846,2.201]],["body/classes/UpdateSpecialtyDto.html",[3,0.351,4,0.31,5,0.27,11,0.022,30,0.617,33,1.45,37,0.351,38,0.178,47,0.019,48,0.019,205,1.628,230,3.337,238,1.726,241,2.855,289,3.078,291,4.041,846,3.91,851,4.041,977,4.564,978,5.359]],["title/classes/UpdateTestDto.html",[38,0.118,928,2.201]],["body/classes/UpdateTestDto.html",[3,0.35,4,0.309,5,0.27,11,0.022,30,0.616,33,1.447,37,0.35,38,0.178,47,0.019,48,0.019,205,1.624,230,3.328,238,1.721,241,2.847,332,3.069,333,2.847,335,4.03,928,3.904,934,4.03,979,4.552,980,5.344]],["title/classes/UpdateUserDto.html",[38,0.118,240,2.029]],["body/classes/UpdateUserDto.html",[3,0.238,4,0.21,5,0.183,7,0.422,10,1.58,11,0.023,12,0.713,17,2.963,21,3.422,25,2.135,29,1.058,30,0.547,33,0.982,37,0.322,38,0.185,47,0.015,48,0.015,104,0.664,114,2.273,115,3.316,180,2.006,181,1.684,204,2.084,205,1.103,206,4.193,207,2.472,208,1.408,209,2.736,211,3.71,213,2.736,214,4.193,215,4.193,216,4.369,217,4.193,219,4.193,220,4.193,221,4.193,222,4.193,223,4.193,224,2.963,225,4.193,226,4.193,227,2.977,229,2.889,230,2.26,231,2.736,232,3.316,233,2.736,234,4.057,235,4.193,236,1.684,237,1.933,238,1.169,239,2.472,240,2.819,241,1.933,242,3.091,243,3.701,244,3.701,245,3.701,246,2.014,247,4.736,248,3.343,249,3.343,250,4.18,251,2.615,252,4.18,253,4.18,254,2.615,255,3.701,256,4.18,257,3.701,258,3.71,259,3.787,260,3.701,981,3.629,982,3.629,983,3.629,984,3.629]],["title/classes/User.html",[38,0.118,108,0.902]],["body/classes/User.html",[3,0.265,4,0.235,5,0.204,7,0.47,11,0.023,12,1.026,29,1.266,37,0.265,38,0.135,47,0.016,48,0.016,103,1.684,104,0.955,105,1.945,108,1.348,180,2.4,181,2.726,197,2.005,205,1.231,208,1.514,258,4.02,259,4,260,3.98,292,2.916,296,3.129,297,3.574,361,4,726,3.129,985,3.449,986,5.002,987,5.002,988,4.05,989,4.05,990,4.05,991,4.05,992,4.05,993,6.223,994,4.05,995,4.05,996,4.05,997,4.05,998,4.05,999,4.05,1000,4.05]],["title/controllers/UserController.html",[0,1.28,1001,2.406]],["body/controllers/UserController.html",[0,0.795,2,0.795,3,0.144,4,0.127,5,0.21,7,0.255,8,1.162,10,1.918,11,0.023,12,0.865,15,2.121,25,1.481,28,2.133,29,1.205,30,0.585,31,0.47,32,1.261,33,0.594,37,0.144,38,0.073,39,0.955,40,0.844,41,3.495,42,3.421,44,1.495,45,1.98,47,0.011,48,0.011,91,1.367,102,2.157,103,1.708,104,0.784,105,1.612,106,3.664,108,1.833,114,2.199,115,2.222,117,1.955,118,2.597,119,1.367,122,1.367,123,1.367,124,0.844,125,3.351,126,3.791,133,2.503,135,1.367,139,3.709,142,3.167,180,2.636,181,2.497,195,2.07,197,1.837,200,3.543,204,2.699,237,2.866,238,1.513,239,2.319,240,3.331,664,1.69,665,1.955,666,1.58,667,1.936,669,2.333,672,1.09,673,2.319,686,2.567,689,1.495,692,1.09,694,1.09,695,1.261,700,1.495,847,2.9,854,1.656,858,1.87,920,1.87,927,2.567,937,1.87,1001,2.319,1002,1.87,1003,3.552,1004,2.9,1005,3.405,1006,2.9,1007,1.87,1008,2.196,1009,3.405,1010,2.196,1011,2.9,1012,2.196,1013,2.196,1014,2.196,1015,4.374,1016,2.196,1017,1.87,1018,2.196,1019,3.405,1020,2.196,1021,1.87,1022,2.196,1023,3.405,1024,2.196,1025,1.87,1026,2.196,1027,3.405,1028,2.196,1029,2.9,1030,1.87,1031,2.196,1032,3.405,1033,2.196,1034,2.196,1035,2.196,1036,3.405,1037,3.405,1038,3.405,1039,3.405,1040,2.196,1041,2.196,1042,2.196,1043,1.87,1044,2.196,1045,2.9,1046,2.196,1047,2.196,1048,2.196,1049,2.395,1050,1.87,1051,1.87,1052,2.196,1053,1.656,1054,2.196,1055,2.196,1056,2.196,1057,2.196,1058,2.196,1059,2.196,1060,2.196,1061,2.196,1062,2.196,1063,2.196,1064,2.196,1065,2.196,1066,2.196,1067,2.196,1068,2.196,1069,2.196,1070,2.196,1071,2.196,1072,2.196,1073,2.196,1074,2.196,1075,2.196,1076,2.196,1077,2.196,1078,2.196,1079,2.196]],["title/modules/UserModule.html",[49,1.206,61,2.201]],["body/modules/UserModule.html",[2,2.033,3,0.292,4,0.258,5,0.225,11,0.023,30,0.677,31,0.953,37,0.292,38,0.148,44,3.036,47,0.017,48,0.017,49,1.917,51,1.94,52,2.443,57,2.953,61,4.34,62,2.787,63,2.069,64,2.213,66,2.991,67,3.224,124,1.714,152,2.777,153,3.797,154,2.777,155,2.777,157,2.777,158,2.777,159,2.213,160,3.797,161,3.797,162,3.362,163,3.797,164,3.797,1001,4.185,1049,3.898,1050,3.797,1053,3.362,1080,3.797,1081,4.458,1082,3.797,1083,4.458,1084,4.458,1085,4.458,1086,4.458,1087,4.458]],["title/injectables/UserService.html",[77,1.013,1049,2.029]],["body/injectables/UserService.html",[3,0.263,4,0.097,5,0.084,7,0.194,8,0.933,11,0.023,12,0.79,26,1.42,28,1.691,29,1.124,30,0.585,31,0.357,37,0.109,38,0.056,40,1.051,45,1.856,47,0.011,48,0.008,63,0.774,77,0.784,78,0.774,92,2.619,93,1.136,99,3.245,102,1.969,103,1.708,104,0.735,105,1.472,106,2.737,108,1.711,114,0.682,154,1.039,167,3.24,168,1.57,169,0.958,170,1.642,171,4.285,173,1.725,175,1.257,177,2.061,178,2.328,179,3.454,180,2.563,181,2.211,183,2.607,184,1.862,185,3.473,186,2.807,187,2.959,189,1.42,191,2.328,195,0.828,196,1.42,197,2.093,198,2.328,199,2.68,200,3.592,201,1.257,204,2.308,216,1.136,237,2.141,238,1.119,239,1.862,240,2.547,255,1.257,258,1.039,282,1.136,292,1.725,296,1.456,352,2.328,361,1.136,407,4.445,586,2.366,595,1.42,596,2.762,601,1.039,607,2.328,640,0.958,653,1.703,664,1.357,665,1.57,666,1.269,667,1.865,669,1.995,672,1.357,692,0.828,694,0.828,722,1.42,723,1.257,724,0.958,725,1.136,726,1.851,727,1.136,728,2.061,741,1.136,742,1.42,743,1.42,766,1.42,767,3.03,782,2.959,783,2.959,784,2.959,785,2.959,786,2.959,787,2.959,788,2.619,789,2.959,790,2.959,791,2.959,792,2.959,793,2.959,794,2.959,795,2.959,796,2.619,799,2.959,800,2.959,801,2.328,802,2.959,803,2.619,804,4.058,805,2.959,806,2.959,807,2.959,808,2.959,809,2.737,810,1.039,815,1.42,816,1.42,818,1.42,819,1.257,828,2.959,836,1.703,881,1.42,958,1.42,986,1.42,987,1.42,1003,2.959,1004,2.328,1006,2.328,1007,1.42,1011,2.328,1017,1.42,1021,1.42,1025,2.328,1029,1.42,1030,1.42,1043,2.328,1045,1.42,1049,1.57,1051,1.42,1088,1.42,1089,1.668,1090,1.668,1091,1.668,1092,1.668,1093,1.668,1094,1.668,1095,1.668,1096,1.668,1097,1.668,1098,1.668,1099,1.668,1100,2.328,1101,1.42,1102,3.474,1103,4.018,1104,2.734,1105,2.734,1106,2.734,1107,2.734,1108,1.42,1109,1.668,1110,1.668,1111,2.734,1112,4.018,1113,2.734,1114,1.668,1115,1.668,1116,2.734,1117,1.668,1118,1.668,1119,1.668,1120,3.474,1121,1.668,1122,2.734,1123,1.668,1124,2.734,1125,1.668,1126,1.668,1127,1.668,1128,1.668,1129,1.668,1130,1.668,1131,1.668,1132,1.668,1133,1.668,1134,1.668,1135,1.668,1136,1.668,1137,2.734,1138,1.668,1139,1.668,1140,2.734,1141,1.668,1142,1.668,1143,1.668,1144,2.734,1145,1.668,1146,1.668,1147,2.734,1148,1.668,1149,2.734,1150,1.668,1151,1.668,1152,2.734,1153,1.42,1154,1.668,1155,1.668,1156,1.668,1157,1.668,1158,1.668,1159,1.668,1160,1.42,1161,2.734]],["title/coverage.html",[1162,4.105]],["body/coverage.html",[0,2.224,1,2.147,5,0.159,6,2.685,11,0.023,34,1.81,38,0.231,47,0.014,48,0.014,73,2.292,77,1.849,79,2.685,89,2.147,90,2.685,96,1.963,104,0.426,108,1.137,128,1.81,131,1.963,133,1.679,149,1.963,166,2.685,170,1.288,173,1.565,186,1.463,204,1.81,206,3.357,207,3.516,237,1.679,240,1.81,261,1.81,262,2.685,263,3.357,272,1.463,289,1.81,290,2.685,291,3.357,300,1.81,332,1.81,333,3.152,334,2.685,335,3.357,547,2.147,571,2.685,585,2.147,586,2.147,588,2.685,589,2.685,611,2.685,616,2.685,629,2.685,645,2.685,662,2.147,663,2.685,684,1.963,690,1.81,695,1.81,715,2.685,724,1.81,726,1.679,741,4.99,803,3.892,834,2.147,835,2.685,838,2.377,839,2.377,846,1.963,849,1.81,866,2.685,884,2.685,895,2.685,918,2.147,919,2.685,924,2.377,928,1.963,932,1.81,952,2.685,968,2.685,977,2.685,979,2.685,985,2.685,1001,2.147,1002,2.685,1015,2.377,1049,1.81,1088,2.685,1162,2.685,1163,3.152,1164,3.152,1165,3.152,1166,3.152,1167,6.887,1168,4.452,1169,5.162,1170,5.162,1171,3.152,1172,4.452,1173,6.312,1174,2.685,1175,6.555,1176,2.685,1177,2.685,1178,3.152,1179,3.792,1180,2.685,1181,3.792,1182,3.792,1183,3.792,1184,3.792,1185,3.792,1186,3.792,1187,3.152,1188,4.452,1189,5.162,1190,3.152,1191,3.152,1192,2.685,1193,2.685,1194,3.152,1195,3.152]],["title/dependencies.html",[52,1.849,1196,2.514]],["body/dependencies.html",[11,0.023,31,1.027,33,1.3,38,0.196,44,4.004,47,0.018,48,0.018,52,2.09,87,4.09,124,1.846,154,2.991,159,2.384,177,3.621,236,2.229,600,5.412,640,2.758,728,3.621,1053,3.621,1100,4.09,1101,4.09,1197,6.793,1198,4.803,1199,4.803,1200,4.803,1201,4.803,1202,4.803,1203,4.803,1204,4.803,1205,4.803,1206,4.803,1207,4.803,1208,4.803,1209,4.803,1210,4.803,1211,4.803,1212,4.803,1213,4.803,1214,4.803,1215,4.803,1216,4.803,1217,4.803,1218,4.803,1219,4.803]],["title/miscellaneous/functions.html",[1220,1.838,1221,3.619]],["body/miscellaneous/functions.html",[7,0.601,11,0.022,28,1.667,47,0.019,48,0.019,102,2.228,103,1.764,104,0.832,105,1.665,108,1.676,203,3.526,724,3.533,726,3.278,810,3.225,819,4.949,820,4.41,1176,4.41,1177,5.59,1192,4.41,1193,4.41,1220,3.225,1221,4.41,1222,5.177,1223,5.177,1224,5.177]],["title/index.html",[7,0.343,1225,2.226,1226,2.226]],["body/index.html",[11,0.021,15,2.41,17,2.061,19,2.635,21,3.298,23,3.489,24,3.295,25,1.683,47,0.016,48,0.016,81,3.295,224,2.061,251,3.388,254,3.06,272,1.796,344,3.489,347,3.863,368,2.917,399,3.295,428,2.917,442,2.41,446,2.917,453,2.917,466,2.917,474,2.917,476,3.863,490,2.917,515,2.917,525,2.917,579,3.863,1225,2.917,1226,2.917,1227,3.295,1228,3.295,1229,6.359,1230,3.869,1231,3.869,1232,5.123,1233,3.869,1234,3.869,1235,3.869,1236,3.869,1237,3.869,1238,3.869,1239,3.869,1240,3.869,1241,3.869,1242,3.295,1243,5.123,1244,3.869,1245,5.123,1246,5.123,1247,6.359,1248,3.869,1249,3.869,1250,3.869,1251,3.869,1252,3.295,1253,3.295,1254,3.869,1255,5.743,1256,3.869,1257,3.869,1258,3.869,1259,3.869,1260,5.123,1261,5.123,1262,6.534,1263,3.869,1264,5.123,1265,4.363,1266,3.869,1267,3.869,1268,3.869,1269,3.869,1270,3.869,1271,3.295,1272,3.295,1273,3.869,1274,3.869,1275,3.869,1276,3.869,1277,3.869,1278,3.869,1279,3.869,1280,3.869,1281,3.869,1282,3.869,1283,3.869,1284,3.869,1285,3.869,1286,3.869,1287,3.869,1288,3.869,1289,3.869,1290,3.869,1291,3.869,1292,3.869,1293,3.869,1294,3.869,1295,3.869,1296,3.869,1297,3.869,1298,3.869,1299,3.869,1300,3.869,1301,3.869,1302,3.869,1303,3.869,1304,3.869,1305,3.869,1306,3.869,1307,3.869,1308,5.123,1309,3.869,1310,3.869,1311,3.295,1312,3.295,1313,2.635,1314,2.917,1315,3.295,1316,3.869,1317,3.869,1318,3.869,1319,3.869]],["title/license.html",[1225,2.226,1226,2.226,1313,2.01]],["body/license.html",[4,0.344,5,0.214,11,0.021,12,0.169,30,0.198,47,0.008,48,0.006,103,0.333,108,0.297,186,1.672,238,1.16,246,0.73,267,0.506,270,0.667,272,0.935,278,0.724,294,0.724,297,1.157,376,1.52,406,3.362,547,0.792,619,0.99,666,0.935,788,0.876,796,1.52,841,0.99,921,0.99,929,2.712,1160,4.298,1220,0.724,1227,0.99,1228,0.99,1242,1.716,1253,0.99,1265,2.712,1271,0.99,1272,0.99,1311,2.712,1312,3.362,1313,4.763,1314,4.313,1315,2.712,1320,1.162,1321,2.015,1322,6.52,1323,5.8,1324,2.015,1325,3.184,1326,3.947,1327,1.162,1328,1.162,1329,1.162,1330,1.162,1331,6.571,1332,6.617,1333,1.162,1334,2.668,1335,4.484,1336,1.162,1337,2.015,1338,3.947,1339,1.162,1340,3.602,1341,1.162,1342,1.162,1343,6.001,1344,6.366,1345,2.668,1346,2.668,1347,5.046,1348,3.602,1349,4.237,1350,6.463,1351,3.947,1352,1.162,1353,4.237,1354,1.162,1355,1.162,1356,1.162,1357,3.947,1358,5.19,1359,5.319,1360,2.668,1361,3.184,1362,2.668,1363,6.546,1364,5.939,1365,1.162,1366,1.162,1367,5.046,1368,1.162,1369,3.947,1370,1.162,1371,1.162,1372,1.162,1373,1.162,1374,1.162,1375,1.162,1376,1.162,1377,2.668,1378,2.015,1379,2.015,1380,3.947,1381,2.015,1382,3.947,1383,2.668,1384,2.668,1385,1.162,1386,5.435,1387,2.015,1388,1.162,1389,1.162,1390,1.162,1391,1.162,1392,1.162,1393,1.162,1394,1.162,1395,4.883,1396,4.484,1397,1.162,1398,3.602,1399,4.484,1400,1.162,1401,1.162,1402,2.015,1403,2.015,1404,1.162,1405,1.162,1406,1.162,1407,2.015,1408,2.015,1409,1.162,1410,2.668,1411,2.668,1412,1.162,1413,3.602,1414,1.162,1415,1.162,1416,1.162,1417,3.947,1418,1.162,1419,1.162,1420,1.162,1421,1.162,1422,1.162,1423,1.162,1424,1.162,1425,1.162,1426,1.162,1427,1.162,1428,2.015,1429,1.162,1430,1.162,1431,1.162,1432,2.015,1433,2.015,1434,1.162,1435,1.162,1436,1.162,1437,2.668,1438,3.184,1439,2.668,1440,1.162,1441,1.162,1442,1.162,1443,1.162,1444,1.162,1445,3.947,1446,2.668,1447,2.015,1448,1.162,1449,1.162,1450,1.162,1451,2.015,1452,3.602,1453,1.162,1454,1.162,1455,1.162,1456,1.162,1457,3.947,1458,1.162,1459,2.015,1460,1.162,1461,1.162,1462,4.697,1463,1.162,1464,1.162,1465,3.184,1466,2.668,1467,1.162,1468,2.668,1469,1.162,1470,2.015,1471,4.697,1472,5.046,1473,2.668,1474,2.668,1475,2.015,1476,1.162,1477,3.184,1478,1.162,1479,3.602,1480,2.015,1481,3.947,1482,1.162,1483,1.162,1484,1.162,1485,2.668,1486,1.162,1487,1.162,1488,1.162,1489,1.162,1490,2.668,1491,1.162,1492,4.237,1493,1.162,1494,1.162,1495,1.162,1496,1.162,1497,1.162,1498,2.668,1499,3.947,1500,2.015,1501,2.668,1502,1.162,1503,2.668,1504,1.162,1505,2.015,1506,2.015,1507,2.015,1508,2.668,1509,1.162,1510,1.162,1511,2.015,1512,1.162,1513,1.162,1514,1.162,1515,1.162,1516,1.162,1517,2.668,1518,1.162,1519,2.015,1520,2.015,1521,2.668,1522,1.162,1523,1.162,1524,1.162,1525,1.162,1526,2.015,1527,2.668,1528,2.015,1529,1.162,1530,1.162,1531,2.015,1532,3.602,1533,3.184,1534,2.668,1535,2.668,1536,2.015,1537,3.184,1538,1.162,1539,2.668,1540,1.162,1541,1.162,1542,2.015,1543,2.015,1544,3.184,1545,1.162,1546,1.162,1547,3.184,1548,3.184,1549,1.162,1550,1.162,1551,2.015,1552,1.162,1553,1.162,1554,3.947,1555,1.162,1556,2.015,1557,4.484,1558,4.697,1559,1.162,1560,1.162,1561,1.162,1562,1.162,1563,1.162,1564,1.162,1565,1.162,1566,1.162,1567,1.162,1568,2.015,1569,1.162,1570,2.273,1571,2.668,1572,1.162,1573,2.015,1574,1.162,1575,1.162,1576,1.162,1577,1.162,1578,1.162,1579,1.162,1580,1.162,1581,1.162,1582,2.015,1583,2.668,1584,1.162,1585,2.015,1586,2.668,1587,3.184,1588,1.162,1589,1.162,1590,1.162,1591,1.162,1592,1.162,1593,1.162,1594,1.162,1595,1.162,1596,1.162,1597,1.162,1598,1.162,1599,1.162,1600,1.162,1601,1.162,1602,1.162,1603,3.184,1604,2.015,1605,2.015,1606,1.162,1607,2.015,1608,2.015,1609,1.162,1610,1.162,1611,1.162,1612,1.162,1613,1.162,1614,1.162,1615,2.015,1616,1.162,1617,1.162,1618,3.184,1619,2.668,1620,1.162,1621,2.015,1622,1.162,1623,1.162,1624,1.162,1625,2.015,1626,1.162,1627,1.162,1628,2.015,1629,1.162,1630,3.184,1631,2.668,1632,1.162,1633,1.162,1634,1.162,1635,2.015,1636,1.162,1637,1.162,1638,1.162,1639,2.015,1640,2.015,1641,1.162,1642,1.162,1643,1.162,1644,1.162,1645,1.162,1646,4.883,1647,1.162,1648,1.162,1649,1.162,1650,2.015,1651,1.162,1652,1.162,1653,1.162,1654,2.668,1655,1.162,1656,1.162,1657,1.162,1658,1.162,1659,1.162,1660,1.162,1661,1.162,1662,1.162,1663,1.162,1664,1.162,1665,1.162,1666,1.162,1667,1.162,1668,1.162,1669,1.162,1670,1.162,1671,1.162,1672,1.162,1673,1.162,1674,1.162,1675,1.162,1676,1.162,1677,1.162,1678,1.162,1679,2.015,1680,1.162,1681,1.162,1682,1.162,1683,2.015,1684,2.015,1685,3.602,1686,1.162,1687,1.162,1688,1.162,1689,1.162,1690,1.162,1691,1.162,1692,1.162,1693,1.162,1694,1.162,1695,1.162,1696,1.162,1697,1.162,1698,1.162,1699,1.162,1700,1.162,1701,2.015,1702,1.162,1703,1.162,1704,1.162,1705,1.162,1706,2.668,1707,1.162,1708,1.162,1709,1.162,1710,2.015,1711,1.162,1712,1.162,1713,1.162,1714,1.162,1715,1.162,1716,1.162,1717,1.162,1718,1.162,1719,1.162,1720,1.162,1721,1.162,1722,1.162,1723,1.162,1724,1.162,1725,1.162,1726,1.162,1727,1.162,1728,1.162,1729,1.162,1730,1.162,1731,2.015,1732,1.162,1733,1.162,1734,1.162,1735,1.162,1736,1.162,1737,1.162,1738,1.162,1739,1.162,1740,1.162,1741,1.162,1742,1.162,1743,3.184,1744,2.015,1745,1.162,1746,1.162,1747,1.162,1748,1.162,1749,1.162,1750,1.162,1751,2.668,1752,1.162,1753,1.162,1754,1.162,1755,1.162,1756,1.162,1757,1.162,1758,1.162,1759,2.015,1760,1.162,1761,1.162,1762,1.162,1763,1.162,1764,1.162,1765,1.162,1766,1.162,1767,1.162,1768,1.162,1769,1.162]],["title/modules.html",[51,2.097]],["body/modules.html",[11,0.019,47,0.019,48,0.019,50,3.535,51,2.259,56,3.233,57,2.259,58,3.233,59,3.233,60,3.233,61,3.233,1252,6.057,1570,6.057,1770,7.111,1771,7.111]],["title/overview.html",[1772,4.105]],["body/overview.html",[2,1.464,11,0.023,34,3.37,47,0.016,48,0.016,50,4.894,51,1.759,52,2.294,53,3.442,54,3.442,55,3.442,56,4.302,57,3.054,58,4.195,59,4.195,60,4.195,61,4.195,62,2.617,63,1.876,64,2.006,78,1.876,128,3.37,146,3.442,148,3.442,149,3.654,170,2.753,205,1.228,585,2.753,623,3.442,624,3.442,625,3.442,690,3.37,710,3.442,711,3.442,849,3.37,861,3.442,862,3.442,932,3.37,947,3.442,949,3.442,1049,3.37,1080,3.442,1082,3.442,1153,3.442,1772,3.442,1773,4.042,1774,4.042,1775,4.042,1776,4.042]],["title/properties.html",[208,1.219,1196,2.514]],["body/properties.html",[11,0.022,47,0.02,48,0.02,208,1.593,246,2.011,1313,3.782,1314,4.187,1777,5.553,1778,5.553,1779,5.553]],["title/miscellaneous/variables.html",[1220,1.838,1780,3.619]],["body/miscellaneous/variables.html",[7,0.236,11,0.023,15,1.267,17,3.679,19,2.184,21,3.83,23,2.184,25,1.728,43,1.732,45,0.694,47,0.01,48,0.01,73,2.229,103,0.583,104,0.537,108,1.253,117,1.168,133,1.709,167,1.971,173,2.435,179,2.613,180,1.311,181,1.489,183,2.238,186,0.944,194,1.534,195,1.01,211,1.267,224,1.084,238,1.279,246,0.737,248,2.184,249,1.385,251,3.011,254,2.776,264,1.267,265,1.267,266,1.489,267,1.395,268,1.489,269,1.267,280,1.267,293,1.168,294,1.998,295,1.168,336,1.534,341,4.438,344,3.85,347,1.534,349,1.732,350,1.732,351,4.646,359,2.732,361,1.385,365,3.382,366,1.732,367,1.732,368,2.994,369,1.732,371,1.732,372,1.732,373,2.732,375,2.994,376,4.386,384,1.732,386,1.732,395,2.184,400,3.382,401,3.382,409,5.863,410,2.732,411,1.732,412,2.732,413,1.732,414,1.732,415,1.732,416,1.732,417,1.732,418,3.382,419,3.382,420,2.732,421,2.732,422,2.732,423,1.732,424,1.732,425,1.732,426,1.732,427,1.732,428,2.418,429,2.732,430,1.732,431,1.732,432,2.732,433,2.732,434,3.382,435,1.732,436,1.732,437,1.732,438,1.732,439,1.732,440,1.732,441,1.732,442,1.267,443,3.839,444,1.732,445,1.732,446,1.534,447,1.732,448,1.732,449,3.382,450,1.732,451,5.173,452,1.732,453,2.994,454,1.732,455,1.732,456,2.732,457,1.732,458,2.732,459,1.732,460,1.732,461,1.732,462,3.382,463,2.732,464,1.732,465,1.732,466,2.418,467,1.732,468,1.732,469,1.732,470,1.732,471,1.732,472,1.732,473,2.732,474,1.534,475,1.732,476,1.534,477,1.732,478,1.732,479,1.732,480,1.732,481,3.382,482,2.732,483,3.839,484,1.732,485,1.732,486,1.732,487,1.732,488,1.732,489,1.732,490,2.994,491,1.534,492,1.732,493,1.732,494,1.732,495,1.732,496,1.732,497,1.732,498,1.732,499,1.732,500,2.732,501,1.732,502,1.732,503,1.732,504,1.732,506,1.732,507,2.732,508,2.732,509,1.732,510,1.732,511,1.732,512,2.732,513,1.732,514,1.732,515,1.534,516,1.732,517,1.732,518,1.732,519,1.732,520,1.732,521,1.732,522,1.732,523,1.732,524,1.732,525,1.534,526,1.732,527,4.177,528,3.839,529,1.732,530,1.732,531,1.732,532,2.732,533,1.732,534,1.732,535,2.732,536,2.732,537,1.732,538,1.732,539,1.732,540,1.732,541,2.732,542,1.732,543,1.732,544,1.732,545,2.732,546,1.732,547,1.385,548,1.732,549,1.732,551,1.732,552,1.732,553,1.732,554,1.732,555,1.732,556,1.732,557,1.732,558,1.732,559,1.732,560,1.732,561,1.732,562,1.732,563,1.732,564,1.732,565,2.732,566,2.732,567,1.732,568,1.732,569,1.732,570,1.732,578,1.732,579,1.534,630,3.839,667,1.843,695,1.168,741,3.34,838,2.418,839,2.994,875,1.732,924,2.418,959,1.732,1015,2.418,1108,1.732,1174,2.732,1179,1.732,1180,2.732,1181,1.732,1182,3.382,1183,1.732,1184,3.382,1185,1.732,1186,3.382,1220,1.267,1780,1.732,1781,2.034,1782,3.207,1783,3.207,1784,3.207,1785,3.207,1786,5.817,1787,5.817,1788,2.034,1789,2.034,1790,2.034,1791,2.034,1792,2.034,1793,2.034,1794,2.034,1795,2.034,1796,2.034,1797,2.034,1798,5.211,1799,2.034,1800,2.034,1801,2.034,1802,3.207,1803,2.034,1804,2.034,1805,2.034,1806,2.034,1807,2.034,1808,2.034,1809,2.034,1810,2.034,1811,2.034,1812,2.034,1813,2.034]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateResultDto.html":{},"classes/CreateSpecialtyDto.html":{},"classes/CreateTestDto.html":{},"classes/CreateUserDto.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Result.html":{},"controllers/ResultController.html":{},"modules/ResultModule.html":{},"injectables/ResultService.html":{},"controllers/SpecialtiesController.html":{},"modules/SpecialtiesModule.html":{},"injectables/SpecialtiesService.html":{},"classes/Specialty.html":{},"classes/Test.html":{},"controllers/TestController.html":{},"modules/TestModule.html":{},"injectables/TestService.html":{},"classes/UpdateResultDto.html":{},"classes/UpdateSpecialtyDto.html":{},"classes/UpdateTestDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":741,"title":{},"body":{"injectables/ResultService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.0.1",{"_index":1777,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":1213,"title":{},"body":{"dependencies.html":{}}}],["0.13.2",{"_index":1204,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":1203,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":1207,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1167,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1189,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1190,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1168,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1191,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1172,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1173,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1178,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1169,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1170,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1188,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1187,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1166,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":1776,"title":{},"body":{"overview.html":{}}}],["1.0.0",{"_index":1210,"title":{},"body":{"dependencies.html":{}}}],["1.1",{"_index":1321,"title":{},"body":{"license.html":{}}}],["1.10",{"_index":1388,"title":{},"body":{"license.html":{}}}],["1.12",{"_index":1409,"title":{},"body":{"license.html":{}}}],["1.13",{"_index":1419,"title":{},"body":{"license.html":{}}}],["1.14",{"_index":1421,"title":{},"body":{"license.html":{}}}],["1.2",{"_index":1333,"title":{},"body":{"license.html":{}}}],["1.3",{"_index":1341,"title":{},"body":{"license.html":{}}}],["1.4",{"_index":1342,"title":{},"body":{"license.html":{}}}],["1.5",{"_index":1356,"title":{},"body":{"license.html":{}}}],["1.7",{"_index":1368,"title":{},"body":{"license.html":{}}}],["1.8",{"_index":1374,"title":{},"body":{"license.html":{}}}],["1.9",{"_index":1376,"title":{},"body":{"license.html":{}}}],["1/2",{"_index":1171,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1812,"title":{},"body":{"miscellaneous/variables.html":{}}}],["10.1",{"_index":1741,"title":{},"body":{"license.html":{}}}],["10.2",{"_index":1506,"title":{},"body":{"license.html":{}}}],["10.3",{"_index":1744,"title":{},"body":{"license.html":{}}}],["10.4",{"_index":1757,"title":{},"body":{"license.html":{}}}],["12",{"_index":733,"title":{},"body":{"injectables/ResultService.html":{}}}],["15",{"_index":1775,"title":{},"body":{"overview.html":{}}}],["2",{"_index":278,"title":{},"body":{"classes/CreateResultDto.html":{},"classes/CreateSpecialtyDto.html":{},"injectables/ResultService.html":{},"classes/UpdateResultDto.html":{},"license.html":{}}}],["2.0",{"_index":1315,"title":{},"body":{"index.html":{},"license.html":{}}}],["2.1",{"_index":1413,"title":{},"body":{"license.html":{}}}],["2.1(b",{"_index":1484,"title":{},"body":{"license.html":{}}}],["2.2",{"_index":1469,"title":{},"body":{"license.html":{}}}],["2.3",{"_index":1476,"title":{},"body":{"license.html":{}}}],["2.4",{"_index":1502,"title":{},"body":{"license.html":{}}}],["2.5",{"_index":1509,"title":{},"body":{"license.html":{}}}],["2.6",{"_index":1516,"title":{},"body":{"license.html":{}}}],["2.7",{"_index":1525,"title":{},"body":{"license.html":{}}}],["200",{"_index":967,"title":{},"body":{"injectables/TestService.html":{}}}],["24h",{"_index":165,"title":{},"body":{"modules/AuthModule.html":{}}}],["2})@apiproperty({description",{"_index":311,"title":{},"body":{"classes/CreateSpecialtyDto.html":{}}}],["2})@isoptional()@apiproperty({description",{"_index":969,"title":{},"body":{"classes/UpdateResultDto.html":{}}}],["3",{"_index":280,"title":{},"body":{"classes/CreateResultDto.html":{},"classes/CreateSpecialtyDto.html":{},"classes/CreateTestDto.html":{},"classes/UpdateResultDto.html":{},"miscellaneous/variables.html":{}}}],["3.0",{"_index":1415,"title":{},"body":{"license.html":{}}}],["3.0.2",{"_index":1215,"title":{},"body":{"dependencies.html":{}}}],["3.1",{"_index":1527,"title":{},"body":{"license.html":{}}}],["3.2",{"_index":1528,"title":{},"body":{"license.html":{}}}],["3.3",{"_index":1508,"title":{},"body":{"license.html":{}}}],["3.4",{"_index":1501,"title":{},"body":{"license.html":{}}}],["3.5",{"_index":1566,"title":{},"body":{"license.html":{}}}],["30",{"_index":1626,"title":{},"body":{"license.html":{}}}],["30m",{"_index":1087,"title":{},"body":{"modules/UserModule.html":{}}}],["4",{"_index":276,"title":{},"body":{"classes/CreateResultDto.html":{},"classes/CreateSpecialtyDto.html":{},"injectables/ResultService.html":{}}}],["4.0.0",{"_index":1208,"title":{},"body":{"dependencies.html":{}}}],["4.1.1",{"_index":1205,"title":{},"body":{"dependencies.html":{}}}],["4.3.1",{"_index":1200,"title":{},"body":{"dependencies.html":{}}}],["4.5.0",{"_index":1219,"title":{},"body":{"dependencies.html":{}}}],["40",{"_index":584,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["40)@isstring()@isnotempty()@apiproperty({description",{"_index":577,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["5",{"_index":282,"title":{},"body":{"classes/CreateResultDto.html":{},"classes/CreateSpecialtyDto.html":{},"injectables/ResultService.html":{},"injectables/UserService.html":{}}}],["5.1",{"_index":1604,"title":{},"body":{"license.html":{}}}],["5.1.0",{"_index":1201,"title":{},"body":{"dependencies.html":{}}}],["5.2",{"_index":1628,"title":{},"body":{"license.html":{}}}],["5.3",{"_index":1647,"title":{},"body":{"license.html":{}}}],["50",{"_index":547,"title":{},"body":{"classes/CreateTestDto.html":{},"coverage.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["587",{"_index":787,"title":{},"body":{"injectables/ResultService.html":{},"injectables/UserService.html":{}}}],["6",{"_index":1774,"title":{},"body":{"overview.html":{}}}],["6.1.2",{"_index":1199,"title":{},"body":{"dependencies.html":{}}}],["6.8.0",{"_index":1206,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":1620,"title":{},"body":{"license.html":{}}}],["7",{"_index":1773,"title":{},"body":{"overview.html":{}}}],["7.2.0",{"_index":1217,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":1153,"title":{},"body":{"injectables/UserService.html":{},"overview.html":{}}}],["80",{"_index":555,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["9.0.0",{"_index":1197,"title":{},"body":{"dependencies.html":{}}}],["ability",{"_index":1725,"title":{},"body":{"license.html":{}}}],["abordar",{"_index":397,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["above",{"_index":1485,"title":{},"body":{"license.html":{}}}],["abranger",{"_index":358,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["absence",{"_index":1494,"title":{},"body":{"license.html":{}}}],["absolutely",{"_index":1574,"title":{},"body":{"license.html":{}}}],["accurate",{"_index":1769,"title":{},"body":{"license.html":{}}}],["actions",{"_index":1638,"title":{},"body":{"license.html":{}}}],["add",{"_index":1768,"title":{},"body":{"license.html":{}}}],["addition",{"_index":1389,"title":{},"body":{"license.html":{}}}],["additional",{"_index":1479,"title":{},"body":{"license.html":{}}}],["additionally",{"_index":1550,"title":{},"body":{"license.html":{}}}],["adiciona",{"_index":1036,"title":{},"body":{"controllers/UserController.html":{}}}],["adipiscing",{"_index":307,"title":{},"body":{"classes/CreateSpecialtyDto.html":{}}}],["adm",{"_index":1023,"title":{},"body":{"controllers/UserController.html":{}}}],["adm.email",{"_index":771,"title":{},"body":{"injectables/ResultService.html":{}}}],["adm.emailnotification",{"_index":770,"title":{},"body":{"injectables/ResultService.html":{}}}],["adm.team",{"_index":772,"title":{},"body":{"injectables/ResultService.html":{}}}],["administrador",{"_index":257,"title":{},"body":{"classes/ChangePasswordDto.html":{},"injectables/ResultService.html":{},"classes/UpdateUserDto.html":{}}}],["administradores",{"_index":764,"title":{},"body":{"injectables/ResultService.html":{}}}],["adms",{"_index":765,"title":{},"body":{"injectables/ResultService.html":{}}}],["adms.map((adm",{"_index":769,"title":{},"body":{"injectables/ResultService.html":{}}}],["affect",{"_index":1592,"title":{},"body":{"license.html":{}}}],["affero",{"_index":1414,"title":{},"body":{"license.html":{}}}],["against",{"_index":1631,"title":{},"body":{"license.html":{}}}],["agilidade",{"_index":503,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["agree",{"_index":1579,"title":{},"body":{"license.html":{}}}],["agreement",{"_index":1727,"title":{},"body":{"license.html":{}}}],["agreements",{"_index":1649,"title":{},"body":{"license.html":{}}}],["ajuda",{"_index":449,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["ajudou",{"_index":540,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["ajustar",{"_index":497,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["algum",{"_index":530,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["alleging",{"_index":1641,"title":{},"body":{"license.html":{}}}],["allnull",{"_index":779,"title":{},"body":{"injectables/ResultService.html":{}}}],["allow",{"_index":1709,"title":{},"body":{"license.html":{}}}],["allresults",{"_index":811,"title":{},"body":{"injectables/ResultService.html":{}}}],["allresults.length",{"_index":813,"title":{},"body":{"injectables/ResultService.html":{}}}],["allusers",{"_index":1154,"title":{},"body":{"injectables/UserService.html":{}}}],["allusers.length",{"_index":1155,"title":{},"body":{"injectables/UserService.html":{}}}],["allusers.map((user",{"_index":1157,"title":{},"body":{"injectables/UserService.html":{}}}],["alluserssort",{"_index":1156,"title":{},"body":{"injectables/UserService.html":{}}}],["alone",{"_index":1578,"title":{},"body":{"license.html":{}}}],["already",{"_index":1115,"title":{},"body":{"injectables/UserService.html":{}}}],["alta",{"_index":421,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["alter",{"_index":1537,"title":{},"body":{"license.html":{}}}],["além",{"_index":517,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["ambiente",{"_index":1280,"title":{},"body":{"index.html":{}}}],["amet",{"_index":305,"title":{},"body":{"classes/CreateSpecialtyDto.html":{}}}],["analisa",{"_index":520,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["and/or",{"_index":188,"title":{},"body":{"injectables/AuthService.html":{}}}],["anyone",{"_index":1680,"title":{},"body":{"license.html":{}}}],["ao",{"_index":1038,"title":{},"body":{"controllers/UserController.html":{}}}],["apibearerauth",{"_index":125,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ResultController.html":{},"controllers/SpecialtiesController.html":{},"controllers/TestController.html":{},"controllers/UserController.html":{}}}],["apioperation",{"_index":126,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ResultController.html":{},"controllers/SpecialtiesController.html":{},"controllers/TestController.html":{},"controllers/UserController.html":{}}}],["apioperation({summary",{"_index":941,"title":{},"body":{"controllers/TestController.html":{}}}],["apiproperty",{"_index":229,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateResultDto.html":{},"classes/CreateSpecialtyDto.html":{},"classes/CreateTestDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/UpdateResultDto.html":{},"classes/UpdateUserDto.html":{}}}],["apiproperty({description",{"_index":617,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["apitags",{"_index":32,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ResultController.html":{},"controllers/SpecialtiesController.html":{},"controllers/TestController.html":{},"controllers/UserController.html":{}}}],["apitags('auth",{"_index":136,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('result",{"_index":696,"title":{},"body":{"controllers/ResultController.html":{}}}],["apitags('specialtie",{"_index":852,"title":{},"body":{"controllers/SpecialtiesController.html":{}}}],["apitags('status",{"_index":36,"title":{},"body":{"controllers/AppController.html":{}}}],["apitags('test",{"_index":935,"title":{},"body":{"controllers/TestController.html":{}}}],["apitags('user",{"_index":1054,"title":{},"body":{"controllers/UserController.html":{}}}],["aplica",{"_index":528,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["aplicação",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"index.html":{}}}],["app",{"_index":637,"title":{},"body":{"injectables/PrismaService.html":{}}}],["app.close",{"_index":644,"title":{},"body":{"injectables/PrismaService.html":{}}}],["app.controller",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":35,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["apparatus",{"_index":1401,"title":{},"body":{"license.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applicable",{"_index":1520,"title":{},"body":{"license.html":{}}}],["application",{"_index":1567,"title":{},"body":{"license.html":{}}}],["apply",{"_index":1701,"title":{},"body":{"license.html":{}}}],["appmodule",{"_index":50,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":34,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["aprendendo",{"_index":444,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["arquitetura",{"_index":434,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["arquivo",{"_index":1317,"title":{},"body":{"index.html":{}}}],["arrayminsize",{"_index":403,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["arrayminsize(3",{"_index":505,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["arrayminsize(5",{"_index":408,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["asserting",{"_index":1632,"title":{},"body":{"license.html":{}}}],["assume",{"_index":1669,"title":{},"body":{"license.html":{}}}],["async",{"_index":167,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/ResultService.html":{},"injectables/SpecialtiesService.html":{},"injectables/TestService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["através",{"_index":347,"title":{},"body":{"classes/CreateTestDto.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["atributos",{"_index":353,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["attached",{"_index":1346,"title":{},"body":{"license.html":{}}}],["attempt",{"_index":1536,"title":{},"body":{"license.html":{}}}],["autenticado",{"_index":116,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth",{"_index":92,"title":{},"body":{"controllers/AuthController.html":{},"injectables/ResultService.html":{},"injectables/UserService.html":{}}}],["auth.controller",{"_index":151,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":129,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":89,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authenticated",{"_index":111,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{},"classes/LoginResponseDto.html":{}}}],["authentication",{"_index":100,"title":{},"body":{"controllers/AuthController.html":{}}}],["authguard",{"_index":123,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ResultController.html":{},"controllers/SpecialtiesController.html":{},"controllers/TestController.html":{},"controllers/UserController.html":{}}}],["authmodule",{"_index":56,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["authmodule,testmodule,specialtiesmodule",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["author",{"_index":1779,"title":{},"body":{"properties.html":{}}}],["authorized",{"_index":1675,"title":{},"body":{"license.html":{}}}],["authservice",{"_index":128,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["automatically",{"_index":619,"title":{},"body":{"classes/LoginResponseDto.html":{},"license.html":{}}}],["autores",{"_index":1289,"title":{},"body":{"index.html":{}}}],["available",{"_index":1362,"title":{},"body":{"license.html":{}}}],["avaliar",{"_index":525,"title":{},"body":{"classes/CreateTestDto.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["await",{"_index":183,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/ResultService.html":{},"injectables/SpecialtiesService.html":{},"injectables/TestService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["azevedo",{"_index":1306,"title":{},"body":{"index.html":{}}}],["b",{"_index":1160,"title":{},"body":{"injectables/UserService.html":{},"license.html":{}}}],["b.createdat",{"_index":1161,"title":{},"body":{"injectables/UserService.html":{}}}],["back",{"_index":1227,"title":{},"body":{"index.html":{},"license.html":{}}}],["backend",{"_index":1261,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":722,"title":{},"body":{"injectables/ResultService.html":{},"injectables/UserService.html":{}}}],["badrequestexception('as",{"_index":1104,"title":{},"body":{"injectables/UserService.html":{}}}],["badrequestexception('error",{"_index":806,"title":{},"body":{"injectables/ResultService.html":{},"injectables/UserService.html":{}}}],["badrequestexception('informe",{"_index":1150,"title":{},"body":{"injectables/UserService.html":{}}}],["badrequestexception('token",{"_index":1138,"title":{},"body":{"injectables/UserService.html":{}}}],["barbosa",{"_index":1301,"title":{},"body":{"index.html":{}}}],["baseado",{"_index":501,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["basis",{"_index":1465,"title":{},"body":{"license.html":{}}}],["bcrypt",{"_index":177,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["bcrypt.compare(password",{"_index":193,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hash(dto.password",{"_index":1111,"title":{},"body":{"injectables/UserService.html":{}}}],["bcrypt.hash(obj.password",{"_index":1811,"title":{},"body":{"miscellaneous/variables.html":{}}}],["become",{"_index":1474,"title":{},"body":{"license.html":{}}}],["behalf",{"_index":1573,"title":{},"body":{"license.html":{}}}],["believes",{"_index":1512,"title":{},"body":{"license.html":{}}}],["beneficial",{"_index":1444,"title":{},"body":{"license.html":{}}}],["benefícios",{"_index":493,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["berteli",{"_index":1294,"title":{},"body":{"index.html":{}}}],["body",{"_index":118,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ResultController.html":{},"controllers/SpecialtiesController.html":{},"controllers/TestController.html":{},"controllers/UserController.html":{}}}],["bomfim",{"_index":1302,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":993,"title":{},"body":{"classes/User.html":{}}}],["bootcamp",{"_index":1230,"title":{},"body":{"index.html":{}}}],["bootstrap",{"_index":1177,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["bring",{"_index":1726,"title":{},"body":{"license.html":{}}}],["brought",{"_index":1712,"title":{},"body":{"license.html":{}}}],["browse",{"_index":1771,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1252,"title":{},"body":{"index.html":{},"modules.html":{}}}],["bruna",{"_index":1300,"title":{},"body":{"index.html":{}}}],["bugs",{"_index":416,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["build",{"_index":1283,"title":{},"body":{"index.html":{}}}],["buscadas",{"_index":390,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["buscados",{"_index":354,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["business",{"_index":1718,"title":{},"body":{"license.html":{}}}],["c",{"_index":1493,"title":{},"body":{"license.html":{}}}],["cada",{"_index":360,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["cadastradas",{"_index":745,"title":{},"body":{"injectables/ResultService.html":{}}}],["cadastrados",{"_index":815,"title":{},"body":{"injectables/ResultService.html":{},"injectables/UserService.html":{}}}],["caminho",{"_index":518,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["caminhos",{"_index":486,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["capacidade",{"_index":339,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["capaz",{"_index":410,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["caracteres",{"_index":225,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["carreiras",{"_index":470,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["carvalho",{"_index":1298,"title":{},"body":{"index.html":{}}}],["case",{"_index":1352,"title":{},"body":{"license.html":{}}}],["catch",{"_index":818,"title":{},"body":{"injectables/ResultService.html":{},"injectables/UserService.html":{}}}],["catch(handleerror",{"_index":809,"title":{},"body":{"injectables/ResultService.html":{},"injectables/SpecialtiesService.html":{},"injectables/TestService.html":{},"injectables/UserService.html":{}}}],["categoria",{"_index":974,"title":{},"body":{"classes/UpdateResultDto.html":{}}}],["category",{"_index":273,"title":{},"body":{"classes/CreateResultDto.html":{}}}],["cause",{"_index":1434,"title":{},"body":{"license.html":{}}}],["caused",{"_index":1488,"title":{},"body":{"license.html":{}}}],["chama",{"_index":487,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["change",{"_index":686,"title":{},"body":{"controllers/ResultController.html":{},"controllers/SpecialtiesController.html":{},"controllers/UserController.html":{}}}],["changed",{"_index":1011,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["changepassword",{"_index":1003,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["changepassword(id",{"_index":1007,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["changepassworddto",{"_index":204,"title":{"classes/ChangePasswordDto.html":{}},"body":{"classes/ChangePasswordDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["changes",{"_index":930,"title":{},"body":{"controllers/TestController.html":{}}}],["chapter",{"_index":361,"title":{},"body":{"classes/CreateTestDto.html":{},"classes/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["character",{"_index":1686,"title":{},"body":{"license.html":{}}}],["charge",{"_index":1542,"title":{},"body":{"license.html":{}}}],["check",{"_index":85,"title":{},"body":{"injectables/AppService.html":{}}}],["choice",{"_index":1505,"title":{},"body":{"license.html":{}}}],["choose",{"_index":1568,"title":{},"body":{"license.html":{}}}],["ci/cd",{"_index":400,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["ci/cd?https://petlove.atlassian.net/wiki/spaces/tec/pages/351666200/playbook",{"_index":550,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["circumstances",{"_index":1676,"title":{},"body":{"license.html":{}}}],["claim",{"_index":1634,"title":{},"body":{"license.html":{}}}],["claim(s",{"_index":1397,"title":{},"body":{"license.html":{}}}],["claims",{"_index":1396,"title":{},"body":{"license.html":{}}}],["class",{"_index":38,"title":{"classes/ChangePasswordDto.html":{},"classes/CreateResultDto.html":{},"classes/CreateSpecialtyDto.html":{},"classes/CreateTestDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Result.html":{},"classes/Specialty.html":{},"classes/Test.html":{},"classes/UpdateResultDto.html":{},"classes/UpdateSpecialtyDto.html":{},"classes/UpdateTestDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateResultDto.html":{},"classes/CreateSpecialtyDto.html":{},"classes/CreateTestDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Result.html":{},"controllers/ResultController.html":{},"modules/ResultModule.html":{},"injectables/ResultService.html":{},"controllers/SpecialtiesController.html":{},"modules/SpecialtiesModule.html":{},"injectables/SpecialtiesService.html":{},"classes/Specialty.html":{},"classes/Test.html":{},"controllers/TestController.html":{},"modules/TestModule.html":{},"injectables/TestService.html":{},"classes/UpdateResultDto.html":{},"classes/UpdateSpecialtyDto.html":{},"classes/UpdateTestDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":205,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateResultDto.html":{},"classes/CreateSpecialtyDto.html":{},"classes/CreateTestDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Result.html":{},"classes/Specialty.html":{},"classes/Test.html":{},"classes/UpdateResultDto.html":{},"classes/UpdateSpecialtyDto.html":{},"classes/UpdateTestDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"overview.html":{}}}],["clear",{"_index":1575,"title":{},"body":{"license.html":{}}}],["clientes",{"_index":516,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["clonando",{"_index":1254,"title":{},"body":{"index.html":{}}}],["clone",{"_index":1255,"title":{},"body":{"index.html":{}}}],["close",{"_index":1117,"title":{},"body":{"injectables/UserService.html":{}}}],["cluster_appmodule",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":146,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":147,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":148,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_prismamodule",{"_index":623,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_exports",{"_index":625,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_providers",{"_index":624,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_resultmodule",{"_index":710,"title":{},"body":{"modules/ResultModule.html":{},"overview.html":{}}}],["cluster_resultmodule_imports",{"_index":712,"title":{},"body":{"modules/ResultModule.html":{}}}],["cluster_resultmodule_providers",{"_index":711,"title":{},"body":{"modules/ResultModule.html":{},"overview.html":{}}}],["cluster_specialtiesmodule",{"_index":861,"title":{},"body":{"modules/SpecialtiesModule.html":{},"overview.html":{}}}],["cluster_specialtiesmodule_imports",{"_index":863,"title":{},"body":{"modules/SpecialtiesModule.html":{}}}],["cluster_specialtiesmodule_providers",{"_index":862,"title":{},"body":{"modules/SpecialtiesModule.html":{},"overview.html":{}}}],["cluster_testmodule",{"_index":947,"title":{},"body":{"modules/TestModule.html":{},"overview.html":{}}}],["cluster_testmodule_imports",{"_index":948,"title":{},"body":{"modules/TestModule.html":{}}}],["cluster_testmodule_providers",{"_index":949,"title":{},"body":{"modules/TestModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":1080,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_imports",{"_index":1081,"title":{},"body":{"modules/UserModule.html":{}}}],["cluster_usermodule_providers",{"_index":1082,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["coach",{"_index":465,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["cobra",{"_index":558,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["code",{"_index":1343,"title":{},"body":{"license.html":{}}}],["coisas",{"_index":389,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["colaboradores",{"_index":1237,"title":{},"body":{"index.html":{}}}],["colegas",{"_index":536,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["com",{"_index":25,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateTestDto.html":{},"controllers/TestController.html":{},"injectables/TestService.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["comando",{"_index":1258,"title":{},"body":{"index.html":{}}}],["comandos",{"_index":1282,"title":{},"body":{"index.html":{}}}],["combination",{"_index":1334,"title":{},"body":{"license.html":{}}}],["combines",{"_index":1370,"title":{},"body":{"license.html":{}}}],["come",{"_index":1622,"title":{},"body":{"license.html":{}}}],["commercial",{"_index":1695,"title":{},"body":{"license.html":{}}}],["common",{"_index":1427,"title":{},"body":{"license.html":{}}}],["como",{"_index":399,"title":{},"body":{"classes/CreateTestDto.html":{},"index.html":{}}}],["complete",{"_index":921,"title":{},"body":{"controllers/TestController.html":{},"license.html":{}}}],["complexidade",{"_index":422,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["compliance",{"_index":1618,"title":{},"body":{"license.html":{}}}],["compliant",{"_index":1607,"title":{},"body":{"license.html":{}}}],["comply",{"_index":1499,"title":{},"body":{"license.html":{}}}],["comportamentos",{"_index":514,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["computacionais",{"_index":346,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["computational",{"_index":274,"title":{},"body":{"classes/CreateResultDto.html":{}}}],["computationalfundamentals",{"_index":264,"title":{},"body":{"classes/CreateResultDto.html":{},"classes/CreateTestDto.html":{},"classes/Test.html":{},"injectables/TestService.html":{},"miscellaneous/variables.html":{}}}],["computationalfundamentals:string",{"_index":915,"title":{},"body":{"classes/Test.html":{}}}],["computer",{"_index":1692,"title":{},"body":{"license.html":{}}}],["conceito",{"_index":545,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["conceitos",{"_index":554,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["concerning",{"_index":1728,"title":{},"body":{"license.html":{}}}],["conditions",{"_index":1446,"title":{},"body":{"license.html":{}}}],["confirmpassword",{"_index":209,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["conflict",{"_index":1721,"title":{},"body":{"license.html":{}}}],["conhece",{"_index":527,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["conhecer",{"_index":382,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["conhecimento",{"_index":379,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["consectetur",{"_index":306,"title":{},"body":{"classes/CreateSpecialtyDto.html":{}}}],["consegue",{"_index":565,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["consequential",{"_index":1684,"title":{},"body":{"license.html":{}}}],["considerando",{"_index":510,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["consistentes",{"_index":479,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["consistência",{"_index":484,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["console.log(`dto",{"_index":182,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(allnull",{"_index":781,"title":{},"body":{"injectables/ResultService.html":{}}}],["console.log(emails",{"_index":774,"title":{},"body":{"injectables/ResultService.html":{}}}],["console.log(err",{"_index":805,"title":{},"body":{"injectables/ResultService.html":{},"injectables/UserService.html":{}}}],["console.log(file",{"_index":1079,"title":{},"body":{"controllers/UserController.html":{}}}],["console.log(info",{"_index":808,"title":{},"body":{"injectables/ResultService.html":{},"injectables/UserService.html":{}}}],["console.log(resettoken",{"_index":1139,"title":{},"body":{"injectables/UserService.html":{}}}],["const",{"_index":179,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/ResultService.html":{},"injectables/SpecialtiesService.html":{},"injectables/TestService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["constitutes",{"_index":1673,"title":{},"body":{"license.html":{}}}],["constructor",{"_index":168,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/ResultService.html":{},"injectables/SpecialtiesService.html":{},"injectables/TestService.html":{},"injectables/UserService.html":{}}}],["constructor(prisma",{"_index":169,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/ResultService.html":{},"injectables/SpecialtiesService.html":{},"injectables/TestService.html":{},"injectables/UserService.html":{}}}],["constructor(private",{"_index":39,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{},"controllers/ResultController.html":{},"injectables/ResultService.html":{},"controllers/SpecialtiesController.html":{},"injectables/SpecialtiesService.html":{},"controllers/TestController.html":{},"injectables/TestService.html":{},"controllers/UserController.html":{}}}],["construe",{"_index":1740,"title":{},"body":{"license.html":{}}}],["construed",{"_index":1738,"title":{},"body":{"license.html":{}}}],["construção",{"_index":467,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["construído",{"_index":1285,"title":{},"body":{"index.html":{}}}],["constrói",{"_index":551,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["contained",{"_index":1559,"title":{},"body":{"license.html":{}}}],["contains",{"_index":1393,"title":{},"body":{"license.html":{}}}],["contents",{"_index":1392,"title":{},"body":{"license.html":{}}}],["contingências",{"_index":441,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["contract",{"_index":1437,"title":{},"body":{"license.html":{}}}],["contribute",{"_index":1530,"title":{},"body":{"license.html":{}}}],["contributes",{"_index":1328,"title":{},"body":{"license.html":{}}}],["contribution",{"_index":1340,"title":{},"body":{"license.html":{}}}],["contributions",{"_index":1335,"title":{},"body":{"license.html":{}}}],["contributor",{"_index":1322,"title":{},"body":{"license.html":{}}}],["contributor's",{"_index":1339,"title":{},"body":{"license.html":{}}}],["contributors",{"_index":1645,"title":{},"body":{"license.html":{}}}],["control",{"_index":1428,"title":{},"body":{"license.html":{}}}],["controlar",{"_index":427,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["controlled",{"_index":1426,"title":{},"body":{"license.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ResultController.html":{},"controllers/SpecialtiesController.html":{},"controllers/TestController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ResultController.html":{},"controllers/SpecialtiesController.html":{},"controllers/TestController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":137,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('result",{"_index":697,"title":{},"body":{"controllers/ResultController.html":{}}}],["controller('specialty",{"_index":853,"title":{},"body":{"controllers/SpecialtiesController.html":{}}}],["controller('test",{"_index":936,"title":{},"body":{"controllers/TestController.html":{}}}],["controller('user",{"_index":1055,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/ResultController.html":{},"modules/ResultModule.html":{},"controllers/SpecialtiesController.html":{},"modules/SpecialtiesModule.html":{},"controllers/TestController.html":{},"modules/TestModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["controls",{"_index":1425,"title":{},"body":{"license.html":{}}}],["conveyed",{"_index":1387,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1535,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1521,"title":{},"body":{"license.html":{}}}],["correction",{"_index":1672,"title":{},"body":{"license.html":{}}}],["cost",{"_index":1543,"title":{},"body":{"license.html":{}}}],["counter",{"_index":1639,"title":{},"body":{"license.html":{}}}],["courts",{"_index":1713,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":1162,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["covered",{"_index":1331,"title":{},"body":{"license.html":{}}}],["create",{"_index":238,"title":{},"body":{"classes/ChangePasswordDto.html":{},"controllers/ResultController.html":{},"injectables/ResultService.html":{},"controllers/SpecialtiesController.html":{},"injectables/SpecialtiesService.html":{},"controllers/TestController.html":{},"injectables/TestService.html":{},"classes/UpdateResultDto.html":{},"classes/UpdateSpecialtyDto.html":{},"classes/UpdateTestDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["create(@body",{"_index":854,"title":{},"body":{"controllers/SpecialtiesController.html":{},"controllers/TestController.html":{},"controllers/UserController.html":{}}}],["create(@loggeduser",{"_index":698,"title":{},"body":{"controllers/ResultController.html":{}}}],["create(createuserdto",{"_index":1012,"title":{},"body":{"controllers/UserController.html":{}}}],["create(dto",{"_index":836,"title":{},"body":{"controllers/SpecialtiesController.html":{},"injectables/SpecialtiesService.html":{},"controllers/TestController.html":{},"injectables/TestService.html":{},"injectables/UserService.html":{}}}],["create(user",{"_index":668,"title":{},"body":{"controllers/ResultController.html":{},"injectables/ResultService.html":{}}}],["createdat",{"_index":292,"title":{},"body":{"classes/CreateSpecialtyDto.html":{},"classes/Result.html":{},"injectables/ResultService.html":{},"classes/Specialty.html":{},"classes/Test.html":{},"injectables/TestService.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["createdat:date",{"_index":916,"title":{},"body":{"classes/Test.html":{}}}],["createparamdecorator((_",{"_index":1788,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresultdto",{"_index":261,"title":{"classes/CreateResultDto.html":{}},"body":{"classes/CreateResultDto.html":{},"controllers/ResultController.html":{},"injectables/ResultService.html":{},"classes/UpdateResultDto.html":{},"coverage.html":{}}}],["creates",{"_index":1327,"title":{},"body":{"license.html":{}}}],["createspecialtydto",{"_index":289,"title":{"classes/CreateSpecialtyDto.html":{}},"body":{"classes/CreateSpecialtyDto.html":{},"controllers/SpecialtiesController.html":{},"injectables/SpecialtiesService.html":{},"classes/UpdateSpecialtyDto.html":{},"coverage.html":{}}}],["createtestdto",{"_index":332,"title":{"classes/CreateTestDto.html":{}},"body":{"classes/CreateTestDto.html":{},"controllers/TestController.html":{},"injectables/TestService.html":{},"classes/UpdateTestDto.html":{},"coverage.html":{}}}],["createtestdto,@loggeduser",{"_index":938,"title":{},"body":{"controllers/TestController.html":{}}}],["createuserdto",{"_index":237,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["creation",{"_index":1329,"title":{},"body":{"license.html":{}}}],["creation(s",{"_index":1514,"title":{},"body":{"license.html":{}}}],["cria",{"_index":439,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["cross",{"_index":1640,"title":{},"body":{"license.html":{}}}],["crud",{"_index":1796,"title":{},"body":{"miscellaneous/variables.html":{}}}],["crud.ts",{"_index":1184,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["crud/dto/create",{"_index":334,"title":{},"body":{"classes/CreateTestDto.html":{},"coverage.html":{}}}],["crud/dto/update",{"_index":979,"title":{},"body":{"classes/UpdateTestDto.html":{},"coverage.html":{}}}],["crud/entities/test.entity.ts",{"_index":895,"title":{},"body":{"classes/Test.html":{},"coverage.html":{}}}],["crud/entities/test.entity.ts:10",{"_index":896,"title":{},"body":{"classes/Test.html":{}}}],["crud/entities/test.entity.ts:11",{"_index":897,"title":{},"body":{"classes/Test.html":{}}}],["crud/entities/test.entity.ts:12",{"_index":906,"title":{},"body":{"classes/Test.html":{}}}],["crud/entities/test.entity.ts:2",{"_index":899,"title":{},"body":{"classes/Test.html":{}}}],["crud/entities/test.entity.ts:3",{"_index":904,"title":{},"body":{"classes/Test.html":{}}}],["crud/entities/test.entity.ts:4",{"_index":902,"title":{},"body":{"classes/Test.html":{}}}],["crud/entities/test.entity.ts:5",{"_index":900,"title":{},"body":{"classes/Test.html":{}}}],["crud/entities/test.entity.ts:6",{"_index":903,"title":{},"body":{"classes/Test.html":{}}}],["crud/entities/test.entity.ts:7",{"_index":898,"title":{},"body":{"classes/Test.html":{}}}],["crud/entities/test.entity.ts:8",{"_index":905,"title":{},"body":{"classes/Test.html":{}}}],["crud/entities/test.entity.ts:9",{"_index":901,"title":{},"body":{"classes/Test.html":{}}}],["crud/test.controller.ts",{"_index":919,"title":{},"body":{"controllers/TestController.html":{},"coverage.html":{}}}],["crud/test.controller.ts:25",{"_index":922,"title":{},"body":{"controllers/TestController.html":{}}}],["crud/test.controller.ts:35",{"_index":925,"title":{},"body":{"controllers/TestController.html":{}}}],["crud/test.controller.ts:45",{"_index":931,"title":{},"body":{"controllers/TestController.html":{}}}],["crud/test.controller.ts:55",{"_index":926,"title":{},"body":{"controllers/TestController.html":{}}}],["crud/test.module",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["crud/test.module.ts",{"_index":950,"title":{},"body":{"modules/TestModule.html":{}}}],["crud/test.service.ts",{"_index":952,"title":{},"body":{"injectables/TestService.html":{},"coverage.html":{}}}],["crud/test.service.ts:16",{"_index":953,"title":{},"body":{"injectables/TestService.html":{}}}],["crud/test.service.ts:19",{"_index":954,"title":{},"body":{"injectables/TestService.html":{}}}],["crud/test.service.ts:49",{"_index":955,"title":{},"body":{"injectables/TestService.html":{}}}],["crud/test.service.ts:57",{"_index":957,"title":{},"body":{"injectables/TestService.html":{}}}],["crud/test.service.ts:91",{"_index":956,"title":{},"body":{"injectables/TestService.html":{}}}],["crypto",{"_index":1100,"title":{},"body":{"injectables/UserService.html":{},"dependencies.html":{}}}],["crypto.aes.decrypt",{"_index":1145,"title":{},"body":{"injectables/UserService.html":{}}}],["crypto.aes.encrypt",{"_index":1123,"title":{},"body":{"injectables/UserService.html":{}}}],["ctx",{"_index":1789,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":1791,"title":{},"body":{"miscellaneous/variables.html":{}}}],["current",{"_index":761,"title":{},"body":{"injectables/ResultService.html":{}}}],["currently",{"_index":110,"title":{},"body":{"controllers/AuthController.html":{}}}],["código",{"_index":351,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["códigos",{"_index":552,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["da",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateTestDto.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["dados",{"_index":563,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["damages",{"_index":1685,"title":{},"body":{"license.html":{}}}],["das",{"_index":500,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["data",{"_index":199,"title":{},"body":{"injectables/AuthService.html":{},"classes/LoginResponseDto.html":{},"controllers/ResultController.html":{},"injectables/ResultService.html":{},"injectables/SpecialtiesService.html":{},"injectables/TestService.html":{},"injectables/UserService.html":{}}}],["date",{"_index":297,"title":{},"body":{"classes/CreateSpecialtyDto.html":{},"classes/Result.html":{},"classes/Specialty.html":{},"classes/Test.html":{},"classes/User.html":{},"license.html":{}}}],["days",{"_index":1621,"title":{},"body":{"license.html":{}}}],["de",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateTestDto.html":{},"classes/UpdateUserDto.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["dealing",{"_index":1523,"title":{},"body":{"license.html":{}}}],["death",{"_index":1702,"title":{},"body":{"license.html":{}}}],["declaratory",{"_index":1636,"title":{},"body":{"license.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateResultDto.html":{},"classes/CreateSpecialtyDto.html":{},"classes/CreateTestDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"controllers/ResultController.html":{},"controllers/SpecialtiesController.html":{},"controllers/TestController.html":{},"classes/UpdateResultDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{}}}],["default",{"_index":1786,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultstrategy",{"_index":158,"title":{},"body":{"modules/AuthModule.html":{},"modules/ResultModule.html":{},"modules/SpecialtiesModule.html":{},"modules/TestModule.html":{},"modules/UserModule.html":{}}}],["defective",{"_index":1668,"title":{},"body":{"license.html":{}}}],["defects",{"_index":1659,"title":{},"body":{"license.html":{}}}],["defendant",{"_index":1714,"title":{},"body":{"license.html":{}}}],["define",{"_index":248,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateTestDto.html":{},"classes/UpdateUserDto.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateResultDto.html":{},"classes/CreateSpecialtyDto.html":{},"classes/CreateTestDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"injectables/PrismaService.html":{},"classes/Result.html":{},"controllers/ResultController.html":{},"injectables/ResultService.html":{},"controllers/SpecialtiesController.html":{},"injectables/SpecialtiesService.html":{},"classes/Specialty.html":{},"classes/Test.html":{},"controllers/TestController.html":{},"injectables/TestService.html":{},"classes/UpdateResultDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"license.html":{}}}],["definido",{"_index":533,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["definidos",{"_index":374,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["definir",{"_index":541,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["definition",{"_index":1430,"title":{},"body":{"license.html":{}}}],["definitions",{"_index":1320,"title":{},"body":{"license.html":{}}}],["definições",{"_index":511,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["deles",{"_index":348,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["deletado",{"_index":927,"title":{},"body":{"controllers/TestController.html":{},"injectables/TestService.html":{},"controllers/UserController.html":{}}}],["delete",{"_index":195,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/ResultController.html":{},"controllers/SpecialtiesController.html":{},"controllers/TestController.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["delete(':email",{"_index":1073,"title":{},"body":{"controllers/UserController.html":{}}}],["delete(':id",{"_index":680,"title":{},"body":{"controllers/ResultController.html":{},"controllers/SpecialtiesController.html":{},"controllers/TestController.html":{}}}],["delete(':id')@apioperation({summary",{"_index":844,"title":{},"body":{"controllers/SpecialtiesController.html":{},"controllers/TestController.html":{}}}],["deleted",{"_index":682,"title":{},"body":{"controllers/ResultController.html":{},"injectables/ResultService.html":{},"controllers/SpecialtiesController.html":{},"injectables/SpecialtiesService.html":{}}}],["deletion",{"_index":1390,"title":{},"body":{"license.html":{}}}],["dentro",{"_index":366,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["dependencies",{"_index":52,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/ResultModule.html":{},"modules/SpecialtiesModule.html":{},"modules/TestModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deploy",{"_index":1276,"title":{},"body":{"index.html":{}}}],["desafios",{"_index":454,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["describe",{"_index":1591,"title":{},"body":{"license.html":{}}}],["described",{"_index":1360,"title":{},"body":{"license.html":{}}}],["description",{"_index":246,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateResultDto.html":{},"classes/CreateSpecialtyDto.html":{},"classes/CreateTestDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Specialty.html":{},"classes/UpdateResultDto.html":{},"classes/UpdateUserDto.html":{},"license.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["descrição",{"_index":1803,"title":{},"body":{"miscellaneous/variables.html":{}}}],["desenha",{"_index":417,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["desenhar",{"_index":566,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["desenvolve",{"_index":433,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["desenvolvido",{"_index":1231,"title":{},"body":{"index.html":{}}}],["desenvolvimento",{"_index":462,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["design",{"_index":265,"title":{},"body":{"classes/CreateResultDto.html":{},"classes/CreateTestDto.html":{},"classes/Test.html":{},"injectables/TestService.html":{},"miscellaneous/variables.html":{}}}],["design:string",{"_index":912,"title":{},"body":{"classes/Test.html":{}}}],["desirable",{"_index":1763,"title":{},"body":{"license.html":{}}}],["desktop",{"_index":1263,"title":{},"body":{"index.html":{}}}],["detailed",{"_index":1599,"title":{},"body":{"license.html":{}}}],["detalhes",{"_index":1319,"title":{},"body":{"index.html":{}}}],["determinam",{"_index":1239,"title":{},"body":{"index.html":{}}}],["dev",{"_index":1246,"title":{},"body":{"index.html":{}}}],["development",{"_index":1244,"title":{},"body":{"index.html":{}}}],["devpr",{"_index":1248,"title":{},"body":{"index.html":{}}}],["different",{"_index":1546,"title":{},"body":{"license.html":{}}}],["differs",{"_index":1756,"title":{},"body":{"license.html":{}}}],["difundir",{"_index":343,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["direct",{"_index":1432,"title":{},"body":{"license.html":{}}}],["direction",{"_index":1435,"title":{},"body":{"license.html":{}}}],["directly",{"_index":1642,"title":{},"body":{"license.html":{}}}],["directory",{"_index":1767,"title":{},"body":{"license.html":{}}}],["disciplina",{"_index":504,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["disclaimer",{"_index":1654,"title":{},"body":{"license.html":{}}}],["disclaimers",{"_index":1556,"title":{},"body":{"license.html":{}}}],["discussões",{"_index":460,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["display",{"_index":1460,"title":{},"body":{"license.html":{}}}],["distinguishing",{"_index":1747,"title":{},"body":{"license.html":{}}}],["distribute",{"_index":1462,"title":{},"body":{"license.html":{}}}],["distributed",{"_index":1761,"title":{},"body":{"license.html":{}}}],["distributes",{"_index":1475,"title":{},"body":{"license.html":{}}}],["distributing",{"_index":1758,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":1481,"title":{},"body":{"license.html":{}}}],["distributions",{"_index":1596,"title":{},"body":{"license.html":{}}}],["distributors",{"_index":1650,"title":{},"body":{"license.html":{}}}],["docs",{"_index":88,"title":{},"body":{"injectables/AppService.html":{}}}],["doctrines",{"_index":1522,"title":{},"body":{"license.html":{}}}],["document",{"_index":1375,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":1163,"title":{},"body":{"coverage.html":{}}}],["documentação",{"_index":27,"title":{},"body":{"controllers/AppController.html":{}}}],["dolor",{"_index":303,"title":{},"body":{"classes/CreateSpecialtyDto.html":{}}}],["dos",{"_index":515,"title":{},"body":{"classes/CreateTestDto.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["drafter",{"_index":1739,"title":{},"body":{"license.html":{}}}],["dto",{"_index":669,"title":{},"body":{"controllers/ResultController.html":{},"injectables/ResultService.html":{},"controllers/SpecialtiesController.html":{},"injectables/SpecialtiesService.html":{},"controllers/TestController.html":{},"injectables/TestService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dto.computationalfundamentals",{"_index":732,"title":{},"body":{"injectables/ResultService.html":{},"injectables/TestService.html":{}}}],["dto.confirmpassword",{"_index":1103,"title":{},"body":{"injectables/UserService.html":{}}}],["dto.design",{"_index":730,"title":{},"body":{"injectables/ResultService.html":{},"injectables/TestService.html":{}}}],["dto.email",{"_index":1110,"title":{},"body":{"injectables/UserService.html":{}}}],["dto.influence",{"_index":823,"title":{},"body":{"injectables/ResultService.html":{}}}],["dto.isvalided",{"_index":821,"title":{},"body":{"injectables/ResultService.html":{}}}],["dto.name",{"_index":1109,"title":{},"body":{"injectables/UserService.html":{}}}],["dto.nextrole",{"_index":822,"title":{},"body":{"injectables/ResultService.html":{}}}],["dto.password",{"_index":1102,"title":{},"body":{"injectables/UserService.html":{}}}],["dto.person",{"_index":736,"title":{},"body":{"injectables/ResultService.html":{},"injectables/TestService.html":{}}}],["dto.process",{"_index":735,"title":{},"body":{"injectables/ResultService.html":{},"injectables/TestService.html":{}}}],["dto.system",{"_index":734,"title":{},"body":{"injectables/ResultService.html":{},"injectables/TestService.html":{}}}],["dto.technology",{"_index":824,"title":{},"body":{"injectables/ResultService.html":{}}}],["dto.test",{"_index":731,"title":{},"body":{"injectables/ResultService.html":{},"injectables/TestService.html":{}}}],["dto.toolshop",{"_index":729,"title":{},"body":{"injectables/ResultService.html":{},"injectables/TestService.html":{}}}],["dto/create",{"_index":692,"title":{},"body":{"controllers/ResultController.html":{},"injectables/ResultService.html":{},"controllers/SpecialtiesController.html":{},"injectables/SpecialtiesService.html":{},"controllers/TestController.html":{},"injectables/TestService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dto/login.dto",{"_index":130,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/login.response.dto",{"_index":132,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/update",{"_index":694,"title":{},"body":{"controllers/ResultController.html":{},"injectables/ResultService.html":{},"controllers/SpecialtiesController.html":{},"injectables/SpecialtiesService.html":{},"controllers/TestController.html":{},"injectables/TestService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["due",{"_index":1585,"title":{},"body":{"license.html":{}}}],["débitos",{"_index":424,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["e",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateTestDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["e1q2u3a4l",{"_index":1132,"title":{},"body":{"injectables/UserService.html":{}}}],["e2e",{"_index":522,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["each",{"_index":406,"title":{},"body":{"classes/CreateTestDto.html":{},"license.html":{}}}],["earlier",{"_index":1365,"title":{},"body":{"license.html":{}}}],["edit",{"_index":1032,"title":{},"body":{"controllers/UserController.html":{}}}],["effect",{"_index":1748,"title":{},"body":{"license.html":{}}}],["effective",{"_index":1470,"title":{},"body":{"license.html":{}}}],["elit",{"_index":308,"title":{},"body":{"classes/CreateSpecialtyDto.html":{}}}],["em",{"_index":341,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["email",{"_index":180,"title":{},"body":{"injectables/AuthService.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"injectables/ResultService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["emailnotification",{"_index":259,"title":{},"body":{"classes/ChangePasswordDto.html":{},"injectables/ResultService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["emails",{"_index":768,"title":{},"body":{"injectables/ResultService.html":{}}}],["emails.every((email",{"_index":780,"title":{},"body":{"injectables/ResultService.html":{}}}],["empresa",{"_index":381,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["enableshutdownhooks",{"_index":632,"title":{},"body":{"injectables/PrismaService.html":{}}}],["enableshutdownhooks(app",{"_index":634,"title":{},"body":{"injectables/PrismaService.html":{}}}],["encontrado",{"_index":963,"title":{},"body":{"injectables/TestService.html":{}}}],["end",{"_index":1228,"title":{},"body":{"index.html":{},"license.html":{}}}],["enforceable",{"_index":1735,"title":{},"body":{"license.html":{}}}],["engajamento",{"_index":372,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["ensina",{"_index":557,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["entendam",{"_index":492,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["entire",{"_index":1664,"title":{},"body":{"license.html":{}}}],["entities",{"_index":1423,"title":{},"body":{"license.html":{}}}],["entities/jwtchangepassword.entity",{"_index":1099,"title":{},"body":{"injectables/UserService.html":{}}}],["entities/specialty.entity",{"_index":874,"title":{},"body":{"injectables/SpecialtiesService.html":{}}}],["entities/user.entity",{"_index":1051,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["entity",{"_index":1326,"title":{},"body":{"license.html":{}}}],["entregando",{"_index":478,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["enviar",{"_index":763,"title":{},"body":{"injectables/ResultService.html":{}}}],["equipe",{"_index":1232,"title":{},"body":{"index.html":{}}}],["equivalents",{"_index":1524,"title":{},"body":{"license.html":{}}}],["err",{"_index":804,"title":{},"body":{"injectables/ResultService.html":{},"injectables/UserService.html":{}}}],["error",{"_index":819,"title":{},"body":{"injectables/ResultService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["escolher",{"_index":971,"title":{},"body":{"classes/UpdateResultDto.html":{}}}],["escolherem",{"_index":537,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["escutando",{"_index":498,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["especiais",{"_index":226,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["especialidades",{"_index":744,"title":{},"body":{"injectables/ResultService.html":{}}}],["especialista",{"_index":320,"title":{},"body":{"classes/CreateSpecialtyDto.html":{}}}],["essential",{"_index":1674,"title":{},"body":{"license.html":{}}}],["est",{"_index":442,"title":{},"body":{"classes/CreateTestDto.html":{},"injectables/SpecialtiesService.html":{},"injectables/TestService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["estabelecer",{"_index":342,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["este",{"_index":1309,"title":{},"body":{"index.html":{}}}],["estruturas",{"_index":562,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["estuda",{"_index":445,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["even",{"_index":1697,"title":{},"body":{"license.html":{}}}],["event",{"_index":1648,"title":{},"body":{"license.html":{}}}],["example",{"_index":227,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateResultDto.html":{},"classes/CreateSpecialtyDto.html":{},"classes/CreateTestDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/UpdateResultDto.html":{},"classes/UpdateUserDto.html":{}}}],["excelência",{"_index":438,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["except",{"_index":1492,"title":{},"body":{"license.html":{}}}],["excluding",{"_index":1635,"title":{},"body":{"license.html":{}}}],["exclusion",{"_index":1710,"title":{},"body":{"license.html":{}}}],["exclusive",{"_index":1453,"title":{},"body":{"license.html":{}}}],["executable",{"_index":1349,"title":{},"body":{"license.html":{}}}],["executioncontext",{"_index":1790,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exercising",{"_index":1422,"title":{},"body":{"license.html":{}}}],["exhibit",{"_index":1348,"title":{},"body":{"license.html":{}}}],["exist",{"_index":610,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["existem",{"_index":743,"title":{},"body":{"injectables/ResultService.html":{},"injectables/UserService.html":{}}}],["expectativas",{"_index":471,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["expiresin",{"_index":164,"title":{},"body":{"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["explicitly",{"_index":1612,"title":{},"body":{"license.html":{}}}],["exploit",{"_index":1463,"title":{},"body":{"license.html":{}}}],["export",{"_index":37,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateResultDto.html":{},"classes/CreateSpecialtyDto.html":{},"classes/CreateTestDto.html":{},"classes/CreateUserDto.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Result.html":{},"controllers/ResultController.html":{},"modules/ResultModule.html":{},"injectables/ResultService.html":{},"controllers/SpecialtiesController.html":{},"modules/SpecialtiesModule.html":{},"injectables/SpecialtiesService.html":{},"classes/Specialty.html":{},"classes/Test.html":{},"controllers/TestController.html":{},"modules/TestModule.html":{},"injectables/TestService.html":{},"classes/UpdateResultDto.html":{},"classes/UpdateSpecialtyDto.html":{},"classes/UpdateTestDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":627,"title":{},"body":{"modules/PrismaModule.html":{}}}],["express",{"_index":44,"title":{},"body":{"controllers/AppController.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"dependencies.html":{}}}],["expressed",{"_index":1656,"title":{},"body":{"license.html":{}}}],["extends",{"_index":241,"title":{},"body":{"classes/ChangePasswordDto.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"classes/UpdateResultDto.html":{},"classes/UpdateSpecialtyDto.html":{},"classes/UpdateTestDto.html":{},"classes/UpdateUserDto.html":{}}}],["extent",{"_index":1382,"title":{},"body":{"license.html":{}}}],["extractjwt",{"_index":598,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":605,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["factual",{"_index":1564,"title":{},"body":{"license.html":{}}}],["fail",{"_index":1606,"title":{},"body":{"license.html":{}}}],["fails",{"_index":1616,"title":{},"body":{"license.html":{}}}],["failure",{"_index":1693,"title":{},"body":{"license.html":{}}}],["fair",{"_index":1517,"title":{},"body":{"license.html":{}}}],["false",{"_index":607,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}}}],["features",{"_index":412,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["fee",{"_index":1569,"title":{},"body":{"license.html":{}}}],["feedbacks",{"_index":458,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["felipe",{"_index":1304,"title":{},"body":{"index.html":{}}}],["feliz",{"_index":519,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["fifty",{"_index":1440,"title":{},"body":{"license.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateResultDto.html":{},"classes/CreateSpecialtyDto.html":{},"classes/CreateTestDto.html":{},"classes/CreateUserDto.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Result.html":{},"controllers/ResultController.html":{},"modules/ResultModule.html":{},"injectables/ResultService.html":{},"controllers/SpecialtiesController.html":{},"modules/SpecialtiesModule.html":{},"injectables/SpecialtiesService.html":{},"classes/Specialty.html":{},"classes/Test.html":{},"controllers/TestController.html":{},"modules/TestModule.html":{},"injectables/TestService.html":{},"classes/UpdateResultDto.html":{},"classes/UpdateSpecialtyDto.html":{},"classes/UpdateTestDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"license.html":{}}}],["fileinterceptor",{"_index":1052,"title":{},"body":{"controllers/UserController.html":{}}}],["files",{"_index":1373,"title":{},"body":{"license.html":{}}}],["finally",{"_index":1613,"title":{},"body":{"license.html":{}}}],["find",{"_index":677,"title":{},"body":{"controllers/ResultController.html":{},"controllers/SpecialtiesController.html":{}}}],["findall",{"_index":664,"title":{},"body":{"controllers/ResultController.html":{},"injectables/ResultService.html":{},"controllers/SpecialtiesController.html":{},"injectables/SpecialtiesService.html":{},"controllers/TestController.html":{},"injectables/TestService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findall(@loggeduser",{"_index":700,"title":{},"body":{"controllers/ResultController.html":{},"controllers/SpecialtiesController.html":{},"controllers/TestController.html":{},"controllers/UserController.html":{}}}],["findall(user",{"_index":672,"title":{},"body":{"controllers/ResultController.html":{},"injectables/ResultService.html":{},"controllers/SpecialtiesController.html":{},"injectables/SpecialtiesService.html":{},"controllers/TestController.html":{},"injectables/TestService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findone",{"_index":665,"title":{},"body":{"controllers/ResultController.html":{},"injectables/ResultService.html":{},"controllers/SpecialtiesController.html":{},"injectables/SpecialtiesService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findone(@param('email",{"_index":1068,"title":{},"body":{"controllers/UserController.html":{}}}],["findone(@param('id",{"_index":703,"title":{},"body":{"controllers/ResultController.html":{},"controllers/SpecialtiesController.html":{}}}],["findone(email",{"_index":1017,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findone(id",{"_index":675,"title":{},"body":{"controllers/ResultController.html":{},"injectables/ResultService.html":{},"controllers/SpecialtiesController.html":{},"injectables/SpecialtiesService.html":{}}}],["findunique",{"_index":881,"title":{},"body":{"injectables/SpecialtiesService.html":{},"injectables/UserService.html":{}}}],["first",{"_index":1242,"title":{},"body":{"index.html":{},"license.html":{}}}],["fit",{"_index":1661,"title":{},"body":{"license.html":{}}}],["flow",{"_index":475,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["flows",{"_index":483,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["foi",{"_index":464,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["following",{"_index":1272,"title":{},"body":{"index.html":{},"license.html":{}}}],["fora",{"_index":367,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["form",{"_index":1344,"title":{},"body":{"license.html":{}}}],["foto",{"_index":1037,"title":{},"body":{"controllers/UserController.html":{}}}],["found",{"_index":1120,"title":{},"body":{"injectables/UserService.html":{}}}],["foundation",{"_index":1742,"title":{},"body":{"license.html":{}}}],["fraca",{"_index":245,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["fraca'})@isnotempty()@apiproperty({description",{"_index":218,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateUserDto.html":{}}}],["fraca'})@isoptional()@apiproperty({description",{"_index":983,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["free",{"_index":1451,"title":{},"body":{"license.html":{}}}],["function",{"_index":803,"title":{},"body":{"injectables/ResultService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["functions",{"_index":1221,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["fundamentals",{"_index":275,"title":{},"body":{"classes/CreateResultDto.html":{}}}],["fundamentos",{"_index":345,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["further",{"_index":1553,"title":{},"body":{"license.html":{}}}],["futuras",{"_index":435,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["garantindo",{"_index":489,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["general",{"_index":1411,"title":{},"body":{"license.html":{}}}],["generated",{"_index":618,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["gerencia",{"_index":469,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["gestores",{"_index":1235,"title":{},"body":{"index.html":{}}}],["get('/alltests",{"_index":940,"title":{},"body":{"controllers/TestController.html":{}}}],["get('/alltests')@apioperation({summary",{"_index":923,"title":{},"body":{"controllers/TestController.html":{}}}],["get(':email",{"_index":1067,"title":{},"body":{"controllers/UserController.html":{}}}],["get(':id",{"_index":702,"title":{},"body":{"controllers/ResultController.html":{},"controllers/SpecialtiesController.html":{}}}],["get(':id')@apioperation({summary",{"_index":676,"title":{},"body":{"controllers/ResultController.html":{},"controllers/SpecialtiesController.html":{}}}],["get('send/:email",{"_index":1060,"title":{},"body":{"controllers/UserController.html":{}}}],["get('send/:email')@apioperation({summary",{"_index":1026,"title":{},"body":{"controllers/UserController.html":{}}}],["get('verify/:id",{"_index":1057,"title":{},"body":{"controllers/UserController.html":{}}}],["get('verify/:id')@apioperation({summary",{"_index":1044,"title":{},"body":{"controllers/UserController.html":{}}}],["get()@apioperation({summary",{"_index":109,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ResultController.html":{},"controllers/SpecialtiesController.html":{}}}],["getappstatus",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":1225,"title":{"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["gh",{"_index":1266,"title":{},"body":{"index.html":{}}}],["giovanne",{"_index":1293,"title":{},"body":{"index.html":{}}}],["git",{"_index":476,"title":{},"body":{"classes/CreateTestDto.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["github",{"_index":1262,"title":{},"body":{"index.html":{}}}],["given",{"_index":1746,"title":{},"body":{"license.html":{}}}],["gmail",{"_index":789,"title":{},"body":{"injectables/ResultService.html":{},"injectables/UserService.html":{}}}],["gnu",{"_index":1410,"title":{},"body":{"license.html":{}}}],["goodwill",{"_index":1690,"title":{},"body":{"license.html":{}}}],["governed",{"_index":1533,"title":{},"body":{"license.html":{}}}],["grant",{"_index":1380,"title":{},"body":{"license.html":{}}}],["granted",{"_index":1471,"title":{},"body":{"license.html":{}}}],["grants",{"_index":1445,"title":{},"body":{"license.html":{}}}],["guiando",{"_index":499,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["handleerror",{"_index":724,"title":{},"body":{"injectables/ResultService.html":{},"injectables/SpecialtiesService.html":{},"injectables/TestService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["handleerror(error",{"_index":820,"title":{},"body":{"injectables/ResultService.html":{},"miscellaneous/functions.html":{}}}],["hashedpassword",{"_index":1152,"title":{},"body":{"injectables/UserService.html":{}}}],["having",{"_index":1378,"title":{},"body":{"license.html":{}}}],["held",{"_index":1732,"title":{},"body":{"license.html":{}}}],["hereby",{"_index":1447,"title":{},"body":{"license.html":{}}}],["hereof",{"_index":1730,"title":{},"body":{"license.html":{}}}],["homepage",{"_index":631,"title":{},"body":{"injectables/PrismaService.html":{}}}],["host",{"_index":784,"title":{},"body":{"injectables/ResultService.html":{},"injectables/UserService.html":{}}}],["html",{"_index":799,"title":{},"body":{"injectables/ResultService.html":{},"injectables/UserService.html":{}}}],["http://localhost:3000",{"_index":1251,"title":{},"body":{"index.html":{}}}],["http://localhost:3000/change/${tokentourl}/${user.id",{"_index":1135,"title":{},"body":{"injectables/UserService.html":{}}}],["http://localhost:3333/api",{"_index":86,"title":{},"body":{"injectables/AppService.html":{}}}],["http://mozilla.org/mpl/2.0",{"_index":1762,"title":{},"body":{"license.html":{}}}],["httpcode",{"_index":120,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpcode(httpstatus.ok",{"_index":138,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpexception",{"_index":958,"title":{},"body":{"injectables/TestService.html":{},"injectables/UserService.html":{}}}],["httpexception('teste",{"_index":966,"title":{},"body":{"injectables/TestService.html":{}}}],["https://github.com/brunabbomfim",{"_index":1303,"title":{},"body":{"index.html":{}}}],["https://github.com/felipe360flp",{"_index":1307,"title":{},"body":{"index.html":{}}}],["https://github.com/hethus",{"_index":1295,"title":{},"body":{"index.html":{}}}],["https://github.com/jcvalgas",{"_index":1299,"title":{},"body":{"index.html":{}}}],["https://github.com/pedroasdoliveira",{"_index":1292,"title":{},"body":{"index.html":{}}}],["https://github.com/pedroasdoliveira/petlove",{"_index":1259,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":121,"title":{},"body":{"controllers/AuthController.html":{}}}],["id",{"_index":197,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"classes/Result.html":{},"controllers/ResultController.html":{},"injectables/ResultService.html":{},"controllers/SpecialtiesController.html":{},"injectables/SpecialtiesService.html":{},"classes/Specialty.html":{},"classes/Test.html":{},"controllers/TestController.html":{},"injectables/TestService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["id:${user.id",{"_index":1134,"title":{},"body":{"injectables/UserService.html":{}}}],["id:string,@loggeduser",{"_index":945,"title":{},"body":{"controllers/TestController.html":{}}}],["id?:string",{"_index":907,"title":{},"body":{"classes/Test.html":{}}}],["identifier",{"_index":1164,"title":{},"body":{"coverage.html":{}}}],["ignoreexpiration",{"_index":606,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["iguais",{"_index":1107,"title":{},"body":{"injectables/UserService.html":{}}}],["ii",{"_index":1491,"title":{},"body":{"license.html":{}}}],["impactar",{"_index":383,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["impacto",{"_index":521,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["impactos",{"_index":494,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["implementa",{"_index":418,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["implementar",{"_index":411,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["implements",{"_index":641,"title":{},"body":{"injectables/PrismaService.html":{}}}],["implied",{"_index":1480,"title":{},"body":{"license.html":{}}}],["import",{"_index":30,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateResultDto.html":{},"classes/CreateSpecialtyDto.html":{},"classes/CreateTestDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ResultController.html":{},"modules/ResultModule.html":{},"injectables/ResultService.html":{},"controllers/SpecialtiesController.html":{},"modules/SpecialtiesModule.html":{},"injectables/SpecialtiesService.html":{},"controllers/TestController.html":{},"modules/TestModule.html":{},"injectables/TestService.html":{},"classes/UpdateResultDto.html":{},"classes/UpdateSpecialtyDto.html":{},"classes/UpdateTestDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"license.html":{}}}],["imports",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ResultModule.html":{},"modules/SpecialtiesModule.html":{},"modules/TestModule.html":{},"modules/UserModule.html":{}}}],["importância",{"_index":386,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["impossible",{"_index":1588,"title":{},"body":{"license.html":{}}}],["inability",{"_index":1584,"title":{},"body":{"license.html":{}}}],["inaccuracies",{"_index":1565,"title":{},"body":{"license.html":{}}}],["incidental",{"_index":1683,"title":{},"body":{"license.html":{}}}],["include",{"_index":1582,"title":{},"body":{"license.html":{}}}],["included",{"_index":1595,"title":{},"body":{"license.html":{}}}],["includes",{"_index":1424,"title":{},"body":{"license.html":{}}}],["including",{"_index":1353,"title":{},"body":{"license.html":{}}}],["incompatible",{"_index":1357,"title":{},"body":{"license.html":{}}}],["incurred",{"_index":1581,"title":{},"body":{"license.html":{}}}],["indemnify",{"_index":1580,"title":{},"body":{"license.html":{}}}],["indemnity",{"_index":1571,"title":{},"body":{"license.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateResultDto.html":{},"classes/CreateSpecialtyDto.html":{},"classes/CreateTestDto.html":{},"classes/CreateUserDto.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"injectables/PrismaService.html":{},"classes/Result.html":{},"controllers/ResultController.html":{},"injectables/ResultService.html":{},"controllers/SpecialtiesController.html":{},"injectables/SpecialtiesService.html":{},"classes/Specialty.html":{},"classes/Test.html":{},"controllers/TestController.html":{},"injectables/TestService.html":{},"classes/UpdateResultDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["indirect",{"_index":1433,"title":{},"body":{"license.html":{}}}],["indirectly",{"_index":1643,"title":{},"body":{"license.html":{}}}],["individuais",{"_index":1241,"title":{},"body":{"index.html":{}}}],["individual",{"_index":1324,"title":{},"body":{"license.html":{}}}],["inestapplication",{"_index":635,"title":{},"body":{"injectables/PrismaService.html":{}}}],["influence",{"_index":293,"title":{},"body":{"classes/CreateSpecialtyDto.html":{},"classes/Result.html":{},"injectables/ResultService.html":{},"classes/Specialty.html":{},"classes/UpdateResultDto.html":{},"miscellaneous/variables.html":{}}}],["influencediff",{"_index":752,"title":{},"body":{"injectables/ResultService.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateResultDto.html":{},"classes/CreateSpecialtyDto.html":{},"classes/CreateTestDto.html":{},"classes/CreateUserDto.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Result.html":{},"controllers/ResultController.html":{},"modules/ResultModule.html":{},"injectables/ResultService.html":{},"controllers/SpecialtiesController.html":{},"modules/SpecialtiesModule.html":{},"injectables/SpecialtiesService.html":{},"classes/Specialty.html":{},"classes/Test.html":{},"controllers/TestController.html":{},"modules/TestModule.html":{},"injectables/TestService.html":{},"classes/UpdateResultDto.html":{},"classes/UpdateSpecialtyDto.html":{},"classes/UpdateTestDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["inform",{"_index":1531,"title":{},"body":{"license.html":{}}}],["informadas",{"_index":1106,"title":{},"body":{"injectables/UserService.html":{}}}],["information",{"_index":847,"title":{},"body":{"controllers/SpecialtiesController.html":{},"controllers/UserController.html":{}}}],["informed",{"_index":1699,"title":{},"body":{"license.html":{}}}],["infringed",{"_index":1402,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":1633,"title":{},"body":{"license.html":{}}}],["infringements",{"_index":1487,"title":{},"body":{"license.html":{}}}],["infringes",{"_index":1644,"title":{},"body":{"license.html":{}}}],["infringing",{"_index":1663,"title":{},"body":{"license.html":{}}}],["initial",{"_index":1345,"title":{},"body":{"license.html":{}}}],["initiate",{"_index":1629,"title":{},"body":{"license.html":{}}}],["injectable",{"_index":77,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/ResultService.html":{},"injectables/SpecialtiesService.html":{},"injectables/TestService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/ResultService.html":{},"injectables/SpecialtiesService.html":{},"injectables/TestService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":78,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/ResultService.html":{},"injectables/SpecialtiesService.html":{},"injectables/TestService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["injury",{"_index":1704,"title":{},"body":{"license.html":{}}}],["inserir",{"_index":1802,"title":{},"body":{"miscellaneous/variables.html":{}}}],["instalação",{"_index":1274,"title":{},"body":{"index.html":{}}}],["install",{"_index":1275,"title":{},"body":{"index.html":{}}}],["integração",{"_index":523,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["intellectual",{"_index":1454,"title":{},"body":{"license.html":{}}}],["intended",{"_index":1518,"title":{},"body":{"license.html":{}}}],["interface",{"_index":585,"title":{"interfaces/JwtPayload.html":{}},"body":{"interfaces/JwtPayload.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":587,"title":{},"body":{"interfaces/JwtPayload.html":{}}}],["intermedeia",{"_index":459,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["ipsum",{"_index":302,"title":{},"body":{"classes/CreateSpecialtyDto.html":{}}}],["isadmin",{"_index":726,"title":{},"body":{"injectables/ResultService.html":{},"injectables/SpecialtiesService.html":{},"injectables/TestService.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["isadmin(user",{"_index":810,"title":{},"body":{"injectables/ResultService.html":{},"injectables/SpecialtiesService.html":{},"injectables/TestService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["isarray",{"_index":404,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["isemail",{"_index":582,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{}}}],["ishashvalid",{"_index":192,"title":{},"body":{"injectables/AuthService.html":{}}}],["isnotempty",{"_index":234,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/UpdateUserDto.html":{}}}],["isnotempty()@isemail()@apiproperty({description",{"_index":573,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isnumber",{"_index":288,"title":{},"body":{"classes/CreateResultDto.html":{},"classes/CreateSpecialtyDto.html":{},"classes/UpdateResultDto.html":{}}}],["isnumber()@apiproperty({description",{"_index":271,"title":{},"body":{"classes/CreateResultDto.html":{}}}],["isnumber({maxdecimalplaces",{"_index":310,"title":{},"body":{"classes/CreateSpecialtyDto.html":{},"classes/UpdateResultDto.html":{}}}],["isoptional",{"_index":235,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/UpdateResultDto.html":{},"classes/UpdateUserDto.html":{}}}],["isso",{"_index":559,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["isstring",{"_index":232,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateSpecialtyDto.html":{},"classes/CreateTestDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/UpdateResultDto.html":{},"classes/UpdateUserDto.html":{}}}],["isstring()@apiproperty({description",{"_index":299,"title":{},"body":{"classes/CreateSpecialtyDto.html":{},"classes/CreateTestDto.html":{},"classes/UpdateResultDto.html":{}}}],["isstring()@isnotempty()@apiproperty({description",{"_index":614,"title":{},"body":{"classes/LoginDto.html":{}}}],["isstring()@isnotempty()@apiproperty({example",{"_index":210,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateUserDto.html":{}}}],["isstring()@isnotempty()@isemail()@apiproperty({description",{"_index":612,"title":{},"body":{"classes/LoginDto.html":{}}}],["isstring()@isnotempty()@isoptional()@apiproperty({description",{"_index":981,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["isstring({each",{"_index":337,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["isvalided",{"_index":646,"title":{},"body":{"classes/Result.html":{},"injectables/ResultService.html":{},"classes/UpdateResultDto.html":{}}}],["isverified",{"_index":986,"title":{},"body":{"classes/User.html":{},"injectables/UserService.html":{}}}],["j",{"_index":463,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["javascript",{"_index":1286,"title":{},"body":{"index.html":{}}}],["jira",{"_index":477,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["joão",{"_index":1296,"title":{},"body":{"index.html":{}}}],["js",{"_index":1101,"title":{},"body":{"injectables/UserService.html":{},"dependencies.html":{}}}],["judgment",{"_index":1637,"title":{},"body":{"license.html":{}}}],["judicial",{"_index":1589,"title":{},"body":{"license.html":{}}}],["junior",{"_index":317,"title":{},"body":{"classes/CreateSpecialtyDto.html":{},"classes/UpdateResultDto.html":{}}}],["jurisdiction",{"_index":1583,"title":{},"body":{"license.html":{}}}],["jurisdictions",{"_index":1708,"title":{},"body":{"license.html":{}}}],["jwt",{"_index":159,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"classes/LoginResponseDto.html":{},"modules/ResultModule.html":{},"modules/SpecialtiesModule.html":{},"modules/TestModule.html":{},"modules/UserModule.html":{},"dependencies.html":{}}}],["jwt.strategy",{"_index":156,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtfromrequest",{"_index":604,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":153,"title":{},"body":{"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["jwtmodule.register",{"_index":160,"title":{},"body":{"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["jwtpayload",{"_index":586,"title":{"interfaces/JwtPayload.html":{}},"body":{"interfaces/JwtPayload.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["jwtservice",{"_index":171,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["jwtstrategy",{"_index":149,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["jwtverify",{"_index":1147,"title":{},"body":{"injectables/UserService.html":{}}}],["jwtverify.id",{"_index":1149,"title":{},"body":{"injectables/UserService.html":{}}}],["kind",{"_index":1655,"title":{},"body":{"license.html":{}}}],["known",{"_index":1563,"title":{},"body":{"license.html":{}}}],["language",{"_index":1737,"title":{},"body":{"license.html":{}}}],["larger",{"_index":1369,"title":{},"body":{"license.html":{}}}],["later",{"_index":1416,"title":{},"body":{"license.html":{}}}],["law",{"_index":1706,"title":{},"body":{"license.html":{}}}],["laws",{"_index":1719,"title":{},"body":{"license.html":{}}}],["lead",{"_index":322,"title":{},"body":{"classes/CreateSpecialtyDto.html":{}}}],["learn",{"_index":1264,"title":{},"body":{"index.html":{}}}],["legal",{"_index":1325,"title":{},"body":{"license.html":{}}}],["length",{"_index":583,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["length(15",{"_index":576,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["lesser",{"_index":1412,"title":{},"body":{"license.html":{}}}],["letras",{"_index":220,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["level",{"_index":315,"title":{},"body":{"classes/CreateSpecialtyDto.html":{}}}],["liability",{"_index":1558,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1681,"title":{},"body":{"license.html":{}}}],["licensable",{"_index":1377,"title":{},"body":{"license.html":{}}}],["license",{"_index":1313,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["license(s",{"_index":1551,"title":{},"body":{"license.html":{}}}],["license.1.6",{"_index":1366,"title":{},"body":{"license.html":{}}}],["license.md",{"_index":1318,"title":{},"body":{"index.html":{}}}],["licenses",{"_index":1359,"title":{},"body":{"license.html":{}}}],["licensing",{"_index":1482,"title":{},"body":{"license.html":{}}}],["licença",{"_index":1308,"title":{},"body":{"index.html":{}}}],["lidera",{"_index":436,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["limit",{"_index":1519,"title":{},"body":{"license.html":{}}}],["limitation",{"_index":1399,"title":{},"body":{"license.html":{}}}],["limitations",{"_index":1477,"title":{},"body":{"license.html":{}}}],["limpo",{"_index":401,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["link",{"_index":546,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["list",{"_index":673,"title":{},"body":{"controllers/ResultController.html":{},"controllers/SpecialtiesController.html":{},"controllers/TestController.html":{},"controllers/UserController.html":{}}}],["literal",{"_index":593,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["litigation",{"_index":1630,"title":{},"body":{"license.html":{}}}],["local",{"_index":1209,"title":{},"body":{"dependencies.html":{}}}],["location",{"_index":1765,"title":{},"body":{"license.html":{}}}],["logado",{"_index":878,"title":{},"body":{"injectables/SpecialtiesService.html":{},"injectables/TestService.html":{}}}],["logged",{"_index":134,"title":{},"body":{"controllers/AuthController.html":{}}}],["loggeduser",{"_index":133,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ResultController.html":{},"controllers/SpecialtiesController.html":{},"controllers/TestController.html":{},"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["login",{"_index":93,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginResponseDto.html":{},"injectables/UserService.html":{}}}],["login(@body",{"_index":140,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(logindto",{"_index":95,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["logindto",{"_index":96,"title":{"classes/LoginDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginDto.html":{},"coverage.html":{}}}],["loginresponsedto",{"_index":131,"title":{"classes/LoginResponseDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginResponseDto.html":{},"coverage.html":{}}}],["logos",{"_index":1497,"title":{},"body":{"license.html":{}}}],["look",{"_index":1271,"title":{},"body":{"index.html":{},"license.html":{}}}],["lorem",{"_index":301,"title":{},"body":{"classes/CreateSpecialtyDto.html":{}}}],["loss",{"_index":1689,"title":{},"body":{"license.html":{}}}],["losses",{"_index":1696,"title":{},"body":{"license.html":{}}}],["lost",{"_index":1687,"title":{},"body":{"license.html":{}}}],["love",{"_index":795,"title":{},"body":{"injectables/ResultService.html":{},"injectables/UserService.html":{}}}],["made",{"_index":1361,"title":{},"body":{"license.html":{}}}],["maildata",{"_index":793,"title":{},"body":{"injectables/ResultService.html":{},"injectables/UserService.html":{}}}],["maintains",{"_index":1715,"title":{},"body":{"license.html":{}}}],["mais",{"_index":446,"title":{},"body":{"classes/CreateTestDto.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["maiúsculas",{"_index":221,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["make",{"_index":929,"title":{},"body":{"controllers/TestController.html":{},"license.html":{}}}],["makes",{"_index":1504,"title":{},"body":{"license.html":{}}}],["making",{"_index":1403,"title":{},"body":{"license.html":{}}}],["malfunction",{"_index":1694,"title":{},"body":{"license.html":{}}}],["management",{"_index":1436,"title":{},"body":{"license.html":{}}}],["manager",{"_index":534,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["manner",{"_index":1541,"title":{},"body":{"license.html":{}}}],["manualmente",{"_index":509,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["map",{"_index":777,"title":{},"body":{"injectables/ResultService.html":{}}}],["maquina",{"_index":1256,"title":{},"body":{"index.html":{}}}],["marks",{"_index":1496,"title":{},"body":{"license.html":{}}}],["matches",{"_index":233,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["matches(/((?=.*\\d)|(?=.*\\w+))(?![.\\n])(?=.*[a",{"_index":244,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["matching",{"_index":48,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateResultDto.html":{},"classes/CreateSpecialtyDto.html":{},"classes/CreateTestDto.html":{},"classes/CreateUserDto.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Result.html":{},"controllers/ResultController.html":{},"modules/ResultModule.html":{},"injectables/ResultService.html":{},"controllers/SpecialtiesController.html":{},"modules/SpecialtiesModule.html":{},"injectables/SpecialtiesService.html":{},"classes/Specialty.html":{},"classes/Test.html":{},"controllers/TestController.html":{},"modules/TestModule.html":{},"injectables/TestService.html":{},"classes/UpdateResultDto.html":{},"classes/UpdateSpecialtyDto.html":{},"classes/UpdateTestDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["material",{"_index":1371,"title":{},"body":{"license.html":{}}}],["math.abs(influencediff",{"_index":758,"title":{},"body":{"injectables/ResultService.html":{}}}],["math.abs(persondiff",{"_index":755,"title":{},"body":{"injectables/ResultService.html":{}}}],["math.abs(processdiff",{"_index":757,"title":{},"body":{"injectables/ResultService.html":{}}}],["math.abs(systemdiff",{"_index":754,"title":{},"body":{"injectables/ResultService.html":{}}}],["math.abs(technologydiff",{"_index":756,"title":{},"body":{"injectables/ResultService.html":{}}}],["matter",{"_index":1729,"title":{},"body":{"license.html":{}}}],["maturidade",{"_index":502,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["maxdecimalplaces",{"_index":331,"title":{},"body":{"classes/CreateSpecialtyDto.html":{},"classes/UpdateResultDto.html":{}}}],["maximum",{"_index":1381,"title":{},"body":{"license.html":{}}}],["means",{"_index":1323,"title":{},"body":{"license.html":{}}}],["melhor",{"_index":538,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["melhorar",{"_index":349,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["menos",{"_index":535,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["mentora",{"_index":461,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["merchantable",{"_index":1660,"title":{},"body":{"license.html":{}}}],["message",{"_index":114,"title":{},"body":{"controllers/AuthController.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateUserDto.html":{},"controllers/ResultController.html":{},"injectables/ResultService.html":{},"controllers/SpecialtiesController.html":{},"injectables/SpecialtiesService.html":{},"controllers/TestController.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["message:`${user.name",{"_index":144,"title":{},"body":{"controllers/AuthController.html":{}}}],["metadata",{"_index":1212,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":1400,"title":{},"body":{"license.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/ResultController.html":{},"injectables/ResultService.html":{},"controllers/SpecialtiesController.html":{},"injectables/SpecialtiesService.html":{},"controllers/TestController.html":{},"injectables/TestService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["minlength",{"_index":231,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["minlength(6",{"_index":243,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["minlength(6)@isstring()@matches(/((?=.*\\d)|(?=.*\\w+))(?![.\\n])(?=.*[a",{"_index":213,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["minúsculas",{"_index":222,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["miscellaneous",{"_index":1220,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["modificado",{"_index":831,"title":{},"body":{"injectables/ResultService.html":{}}}],["modification",{"_index":1391,"title":{},"body":{"license.html":{}}}],["modifications",{"_index":1351,"title":{},"body":{"license.html":{}}}],["modified",{"_index":1751,"title":{},"body":{"license.html":{}}}],["modify",{"_index":1459,"title":{},"body":{"license.html":{}}}],["modulares",{"_index":553,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["module",{"_index":49,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/ResultModule.html":{},"modules/SpecialtiesModule.html":{},"modules/TestModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/ResultModule.html":{},"modules/SpecialtiesModule.html":{},"modules/TestModule.html":{},"modules/UserModule.html":{}}}],["modules",{"_index":51,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/ResultModule.html":{},"modules/SpecialtiesModule.html":{},"modules/TestModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["monitora",{"_index":430,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["monitorar",{"_index":526,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["more",{"_index":1265,"title":{},"body":{"index.html":{},"license.html":{}}}],["moreover",{"_index":1623,"title":{},"body":{"license.html":{}}}],["mozilla",{"_index":1311,"title":{},"body":{"index.html":{},"license.html":{}}}],["mpl",{"_index":1760,"title":{},"body":{"license.html":{}}}],["mudanças",{"_index":481,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["muito",{"_index":217,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["multermodule",{"_index":1085,"title":{},"body":{"modules/UserModule.html":{}}}],["multermodule.register({dest:'./upload",{"_index":1086,"title":{},"body":{"modules/UserModule.html":{}}}],["multis",{"_index":568,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["multithreading",{"_index":564,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["média",{"_index":420,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["múltiplos",{"_index":570,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["n",{"_index":83,"title":{},"body":{"injectables/AppService.html":{}}}],["na",{"_index":466,"title":{},"body":{"classes/CreateTestDto.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["name",{"_index":103,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/ResultController.html":{},"injectables/ResultService.html":{},"controllers/SpecialtiesController.html":{},"injectables/SpecialtiesService.html":{},"controllers/TestController.html":{},"injectables/TestService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["near",{"_index":759,"title":{},"body":{"injectables/ResultService.html":{}}}],["necessary",{"_index":1498,"title":{},"body":{"license.html":{}}}],["necessário",{"_index":448,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["negligence",{"_index":1679,"title":{},"body":{"license.html":{}}}],["nessa",{"_index":355,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["nesses",{"_index":391,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["nest.js",{"_index":1288,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":31,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ResultController.html":{},"modules/ResultModule.html":{},"injectables/ResultService.html":{},"controllers/SpecialtiesController.html":{},"modules/SpecialtiesModule.html":{},"injectables/SpecialtiesService.html":{},"controllers/TestController.html":{},"modules/TestModule.html":{},"injectables/TestService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":1198,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":154,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":124,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"controllers/ResultController.html":{},"modules/ResultModule.html":{},"controllers/SpecialtiesController.html":{},"modules/SpecialtiesModule.html":{},"controllers/TestController.html":{},"modules/TestModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":1053,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":33,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateResultDto.html":{},"classes/CreateSpecialtyDto.html":{},"classes/CreateTestDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"controllers/ResultController.html":{},"controllers/SpecialtiesController.html":{},"controllers/TestController.html":{},"classes/UpdateResultDto.html":{},"classes/UpdateSpecialtyDto.html":{},"classes/UpdateTestDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"dependencies.html":{}}}],["new",{"_index":186,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/ResultService.html":{},"injectables/SpecialtiesService.html":{},"injectables/TestService.html":{},"injectables/UserService.html":{},"coverage.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["newpassword",{"_index":247,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/UpdateUserDto.html":{}}}],["next.js",{"_index":1269,"title":{},"body":{"index.html":{}}}],["nextrole",{"_index":647,"title":{},"body":{"classes/Result.html":{},"injectables/ResultService.html":{},"classes/UpdateResultDto.html":{}}}],["nextrolevalue",{"_index":737,"title":{},"body":{"injectables/ResultService.html":{}}}],["nodemailer",{"_index":728,"title":{},"body":{"injectables/ResultService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nodemailer.createtransport",{"_index":783,"title":{},"body":{"injectables/ResultService.html":{},"injectables/UserService.html":{}}}],["nome",{"_index":578,"title":{},"body":{"classes/CreateUserDto.html":{},"miscellaneous/variables.html":{}}}],["non",{"_index":1452,"title":{},"body":{"license.html":{}}}],["none",{"_index":260,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["nos",{"_index":482,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["nossos",{"_index":549,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["notacceptableexception",{"_index":1098,"title":{},"body":{"injectables/UserService.html":{}}}],["notacceptableexception('email",{"_index":1114,"title":{},"body":{"injectables/UserService.html":{}}}],["note",{"_index":1755,"title":{},"body":{"license.html":{}}}],["notfoundexception",{"_index":723,"title":{},"body":{"injectables/ResultService.html":{},"injectables/TestService.html":{},"injectables/UserService.html":{}}}],["notfoundexception('não",{"_index":742,"title":{},"body":{"injectables/ResultService.html":{},"injectables/UserService.html":{}}}],["notfoundexception(`email",{"_index":1119,"title":{},"body":{"injectables/UserService.html":{}}}],["notfoundexception(`id:${id",{"_index":962,"title":{},"body":{"injectables/TestService.html":{}}}],["notfoundexception(`user",{"_index":1136,"title":{},"body":{"injectables/UserService.html":{}}}],["nothing",{"_index":1723,"title":{},"body":{"license.html":{}}}],["notice",{"_index":1347,"title":{},"body":{"license.html":{}}}],["notices",{"_index":1554,"title":{},"body":{"license.html":{}}}],["notificação",{"_index":250,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/UpdateUserDto.html":{}}}],["notifies",{"_index":1624,"title":{},"body":{"license.html":{}}}],["notify",{"_index":1617,"title":{},"body":{"license.html":{}}}],["notwithstanding",{"_index":1483,"title":{},"body":{"license.html":{}}}],["nova",{"_index":1151,"title":{},"body":{"injectables/UserService.html":{}}}],["novo",{"_index":797,"title":{},"body":{"injectables/ResultService.html":{}}}],["npm",{"_index":1245,"title":{},"body":{"index.html":{}}}],["null",{"_index":201,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ResultService.html":{},"injectables/UserService.html":{}}}],["number",{"_index":270,"title":{},"body":{"classes/CreateResultDto.html":{},"classes/CreateSpecialtyDto.html":{},"classes/Result.html":{},"classes/Specialty.html":{},"classes/UpdateResultDto.html":{},"license.html":{}}}],["não",{"_index":653,"title":{},"body":{"classes/Result.html":{},"injectables/SpecialtiesService.html":{},"injectables/TestService.html":{},"classes/UpdateResultDto.html":{},"injectables/UserService.html":{}}}],["níveis",{"_index":392,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["nível",{"_index":371,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["números",{"_index":223,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["o",{"_index":251,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateTestDto.html":{},"injectables/ResultService.html":{},"classes/UpdateResultDto.html":{},"classes/UpdateUserDto.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["obj",{"_index":1798,"title":{},"body":{"miscellaneous/variables.html":{}}}],["obj.email",{"_index":1810,"title":{},"body":{"miscellaneous/variables.html":{}}}],["obj.performance",{"_index":1801,"title":{},"body":{"miscellaneous/variables.html":{}}}],["obj.title",{"_index":1807,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.entries",{"_index":1793,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.values(specialties",{"_index":1799,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.values(test",{"_index":1805,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.values(users",{"_index":1808,"title":{},"body":{"miscellaneous/variables.html":{}}}],["objeto",{"_index":20,"title":{},"body":{"controllers/AppController.html":{}}}],["obligation",{"_index":1576,"title":{},"body":{"license.html":{}}}],["obligations",{"_index":1572,"title":{},"body":{"license.html":{}}}],["obtain",{"_index":1534,"title":{},"body":{"license.html":{}}}],["offer",{"_index":1468,"title":{},"body":{"license.html":{}}}],["offered",{"_index":1577,"title":{},"body":{"license.html":{}}}],["offering",{"_index":1406,"title":{},"body":{"license.html":{}}}],["oi1",{"_index":800,"title":{},"body":{"injectables/ResultService.html":{},"injectables/UserService.html":{}}}],["oi2",{"_index":801,"title":{},"body":{"injectables/ResultService.html":{},"injectables/UserService.html":{}}}],["olhando",{"_index":431,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["oliveira",{"_index":1291,"title":{},"body":{"index.html":{}}}],["onde",{"_index":1234,"title":{},"body":{"index.html":{}}}],["one",{"_index":1548,"title":{},"body":{"license.html":{}}}],["ongoing",{"_index":1615,"title":{},"body":{"license.html":{}}}],["onmoduleinit",{"_index":633,"title":{},"body":{"injectables/PrismaService.html":{}}}],["open",{"_index":1250,"title":{},"body":{"index.html":{}}}],["option",{"_index":1552,"title":{},"body":{"license.html":{}}}],["optional",{"_index":105,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"classes/Result.html":{},"controllers/ResultController.html":{},"injectables/ResultService.html":{},"controllers/SpecialtiesController.html":{},"injectables/SpecialtiesService.html":{},"classes/Specialty.html":{},"classes/Test.html":{},"controllers/TestController.html":{},"injectables/TestService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["order",{"_index":1590,"title":{},"body":{"license.html":{}}}],["ordinary",{"_index":1600,"title":{},"body":{"license.html":{}}}],["organiza",{"_index":455,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["original",{"_index":1513,"title":{},"body":{"license.html":{}}}],["originally",{"_index":1749,"title":{},"body":{"license.html":{}}}],["os",{"_index":344,"title":{},"body":{"classes/CreateTestDto.html":{},"injectables/ResultService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["others",{"_index":1336,"title":{},"body":{"license.html":{}}}],["otherwise",{"_index":1438,"title":{},"body":{"license.html":{}}}],["ou",{"_index":224,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateTestDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateResultDto.html":{},"classes/UpdateUserDto.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["out",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/ResultModule.html":{},"modules/SpecialtiesModule.html":{},"modules/TestModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["outro",{"_index":531,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["outros",{"_index":365,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["outstanding",{"_index":1442,"title":{},"body":{"license.html":{}}}],["overview",{"_index":1772,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["ownership",{"_index":1439,"title":{},"body":{"license.html":{}}}],["owns",{"_index":1330,"title":{},"body":{"license.html":{}}}],["p1l2u3s",{"_index":1128,"title":{},"body":{"injectables/UserService.html":{}}}],["package",{"_index":1196,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padrões",{"_index":542,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["page",{"_index":1118,"title":{},"body":{"injectables/UserService.html":{}}}],["papel",{"_index":256,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/UpdateUserDto.html":{}}}],["para",{"_index":254,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateTestDto.html":{},"injectables/ResultService.html":{},"classes/UpdateResultDto.html":{},"classes/UpdateUserDto.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["param",{"_index":41,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ResultController.html":{},"controllers/SpecialtiesController.html":{},"controllers/TestController.html":{},"controllers/UserController.html":{}}}],["param('email",{"_index":1071,"title":{},"body":{"controllers/UserController.html":{}}}],["param('id",{"_index":858,"title":{},"body":{"controllers/SpecialtiesController.html":{},"controllers/UserController.html":{}}}],["param('resettoken",{"_index":1064,"title":{},"body":{"controllers/UserController.html":{}}}],["parameters",{"_index":102,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/ResultController.html":{},"injectables/ResultService.html":{},"controllers/SpecialtiesController.html":{},"injectables/SpecialtiesService.html":{},"controllers/TestController.html":{},"injectables/TestService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["part",{"_index":1466,"title":{},"body":{"license.html":{}}}],["partial",{"_index":882,"title":{},"body":{"injectables/SpecialtiesService.html":{}}}],["partialtype",{"_index":230,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/UpdateResultDto.html":{},"classes/UpdateSpecialtyDto.html":{},"classes/UpdateTestDto.html":{},"classes/UpdateUserDto.html":{}}}],["partialtype(createresultdto",{"_index":976,"title":{},"body":{"classes/UpdateResultDto.html":{}}}],["partialtype(createspecialtydto",{"_index":978,"title":{},"body":{"classes/UpdateSpecialtyDto.html":{}}}],["partialtype(createtestdto",{"_index":980,"title":{},"body":{"classes/UpdateTestDto.html":{}}}],["partialtype(createuserdto",{"_index":242,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/UpdateUserDto.html":{}}}],["particular",{"_index":1338,"title":{},"body":{"license.html":{}}}],["party",{"_index":1698,"title":{},"body":{"license.html":{}}}],["party's",{"_index":1490,"title":{},"body":{"license.html":{}}}],["pass",{"_index":791,"title":{},"body":{"injectables/ResultService.html":{},"injectables/UserService.html":{}}}],["passou",{"_index":972,"title":{},"body":{"classes/UpdateResultDto.html":{}}}],["passport",{"_index":600,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":155,"title":{},"body":{"modules/AuthModule.html":{},"modules/ResultModule.html":{},"modules/SpecialtiesModule.html":{},"modules/TestModule.html":{},"modules/UserModule.html":{}}}],["passportmodule.register",{"_index":157,"title":{},"body":{"modules/AuthModule.html":{},"modules/ResultModule.html":{},"modules/SpecialtiesModule.html":{},"modules/TestModule.html":{},"modules/UserModule.html":{}}}],["passportstrategy",{"_index":597,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":602,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":181,"title":{},"body":{"injectables/AuthService.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["patch",{"_index":689,"title":{},"body":{"controllers/ResultController.html":{},"controllers/SpecialtiesController.html":{},"controllers/TestController.html":{},"controllers/UserController.html":{}}}],["patch(':email",{"_index":1070,"title":{},"body":{"controllers/UserController.html":{}}}],["patch(':id",{"_index":705,"title":{},"body":{"controllers/ResultController.html":{},"controllers/SpecialtiesController.html":{},"controllers/TestController.html":{}}}],["patch(':id')@apioperation({summary",{"_index":685,"title":{},"body":{"controllers/ResultController.html":{},"controllers/SpecialtiesController.html":{},"controllers/TestController.html":{}}}],["patch('change/password/:resettoken/:id",{"_index":1063,"title":{},"body":{"controllers/UserController.html":{}}}],["patch('change/password/:resettoken/:id')@apioperation({summary",{"_index":1008,"title":{},"body":{"controllers/UserController.html":{}}}],["patent",{"_index":1395,"title":{},"body":{"license.html":{}}}],["pattern",{"_index":532,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["payload",{"_index":595,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}}}],["payload.email",{"_index":609,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["pdi",{"_index":468,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["pedro",{"_index":1290,"title":{},"body":{"index.html":{}}}],["pedroasdoliveira/petlove",{"_index":1268,"title":{},"body":{"index.html":{}}}],["pelo",{"_index":375,"title":{},"body":{"classes/CreateTestDto.html":{},"injectables/ResultService.html":{},"miscellaneous/variables.html":{}}}],["pequenos",{"_index":415,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["percent",{"_index":1441,"title":{},"body":{"license.html":{}}}],["perfil",{"_index":1039,"title":{},"body":{"controllers/UserController.html":{}}}],["perform",{"_index":1461,"title":{},"body":{"license.html":{}}}],["performance",{"_index":294,"title":{},"body":{"classes/CreateSpecialtyDto.html":{},"injectables/ResultService.html":{},"classes/Specialty.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["performances",{"_index":472,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["performed",{"_index":687,"title":{},"body":{"controllers/ResultController.html":{}}}],["permita",{"_index":524,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["permits",{"_index":1549,"title":{},"body":{"license.html":{}}}],["permitted",{"_index":1507,"title":{},"body":{"license.html":{}}}],["person",{"_index":266,"title":{},"body":{"classes/CreateResultDto.html":{},"classes/CreateSpecialtyDto.html":{},"classes/CreateTestDto.html":{},"classes/Result.html":{},"injectables/ResultService.html":{},"classes/Specialty.html":{},"classes/Test.html":{},"injectables/TestService.html":{},"miscellaneous/variables.html":{}}}],["person:string",{"_index":910,"title":{},"body":{"classes/Test.html":{}}}],["personal",{"_index":1703,"title":{},"body":{"license.html":{}}}],["persondiff",{"_index":749,"title":{},"body":{"injectables/ResultService.html":{}}}],["persons",{"_index":324,"title":{},"body":{"classes/CreateSpecialtyDto.html":{}}}],["pessoa",{"_index":340,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["pessoas",{"_index":450,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["pet",{"_index":794,"title":{},"body":{"injectables/ResultService.html":{},"injectables/UserService.html":{}}}],["petlove",{"_index":579,"title":{},"body":{"classes/CreateUserDto.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["petlove@123",{"_index":211,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/UpdateUserDto.html":{},"miscellaneous/variables.html":{}}}],["petlove@bootcamp.com",{"_index":1813,"title":{},"body":{"miscellaneous/variables.html":{}}}],["petlove@gmail.com",{"_index":574,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{}}}],["place",{"_index":1717,"title":{},"body":{"license.html":{}}}],["placed",{"_index":1593,"title":{},"body":{"license.html":{}}}],["planos",{"_index":440,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["please",{"_index":84,"title":{},"body":{"injectables/AppService.html":{}}}],["pleno",{"_index":318,"title":{},"body":{"classes/CreateSpecialtyDto.html":{}}}],["por",{"_index":496,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["port",{"_index":786,"title":{},"body":{"injectables/ResultService.html":{},"injectables/UserService.html":{}}}],["portions",{"_index":1354,"title":{},"body":{"license.html":{}}}],["possam",{"_index":1236,"title":{},"body":{"index.html":{}}}],["possibility",{"_index":1700,"title":{},"body":{"license.html":{}}}],["possible",{"_index":1383,"title":{},"body":{"license.html":{}}}],["post",{"_index":119,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ResultController.html":{},"controllers/SpecialtiesController.html":{},"controllers/TestController.html":{},"controllers/UserController.html":{}}}],["post('/create",{"_index":937,"title":{},"body":{"controllers/TestController.html":{},"controllers/UserController.html":{}}}],["post('/create')@apioperation({summary",{"_index":920,"title":{},"body":{"controllers/TestController.html":{},"controllers/UserController.html":{}}}],["post('upload",{"_index":1076,"title":{},"body":{"controllers/UserController.html":{}}}],["post()@apioperation({summary",{"_index":670,"title":{},"body":{"controllers/ResultController.html":{},"controllers/SpecialtiesController.html":{}}}],["post()@httpcode(httpstatus.ok)@apioperation({summary",{"_index":97,"title":{},"body":{"controllers/AuthController.html":{}}}],["power",{"_index":1431,"title":{},"body":{"license.html":{}}}],["preferred",{"_index":1420,"title":{},"body":{"license.html":{}}}],["prefix",{"_index":91,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ResultController.html":{},"controllers/SpecialtiesController.html":{},"controllers/TestController.html":{},"controllers/UserController.html":{}}}],["prev.totaldiff",{"_index":762,"title":{},"body":{"injectables/ResultService.html":{}}}],["prevent",{"_index":1724,"title":{},"body":{"license.html":{}}}],["principal",{"_index":1716,"title":{},"body":{"license.html":{}}}],["princípios",{"_index":359,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["prior",{"_index":1619,"title":{},"body":{"license.html":{}}}],["prisma",{"_index":173,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/ResultService.html":{},"injectables/SpecialtiesService.html":{},"injectables/TestService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["prisma.resultupdateinput",{"_index":830,"title":{},"body":{"injectables/ResultService.html":{}}}],["prisma.service",{"_index":628,"title":{},"body":{"modules/PrismaModule.html":{}}}],["prisma.specialtie.upsert",{"_index":1800,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prisma.specialtiecreateinput",{"_index":875,"title":{},"body":{"injectables/SpecialtiesService.html":{},"miscellaneous/variables.html":{}}}],["prisma.test.upsert",{"_index":1806,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prisma.testcreateinput",{"_index":959,"title":{},"body":{"injectables/TestService.html":{},"miscellaneous/variables.html":{}}}],["prisma.testupdateinput",{"_index":964,"title":{},"body":{"injectables/TestService.html":{}}}],["prisma.user.upsert",{"_index":1809,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prisma.usercreateinput",{"_index":1108,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["prisma.userupdateinput",{"_index":1116,"title":{},"body":{"injectables/UserService.html":{}}}],["prisma/client",{"_index":640,"title":{},"body":{"injectables/PrismaService.html":{},"injectables/ResultService.html":{},"injectables/SpecialtiesService.html":{},"injectables/TestService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["prisma/prisma.module",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["prisma/prisma.service",{"_index":176,"title":{},"body":{"injectables/AuthService.html":{}}}],["prismaclient",{"_index":630,"title":{},"body":{"injectables/PrismaService.html":{},"miscellaneous/variables.html":{}}}],["prismamodule",{"_index":57,"title":{"modules/PrismaModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/ResultModule.html":{},"modules/SpecialtiesModule.html":{},"modules/TestModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["prismaservice",{"_index":170,"title":{"injectables/PrismaService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"injectables/ResultService.html":{},"injectables/SpecialtiesService.html":{},"injectables/TestService.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["private",{"_index":178,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["problema",{"_index":539,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["process",{"_index":267,"title":{},"body":{"classes/CreateResultDto.html":{},"classes/CreateSpecialtyDto.html":{},"classes/CreateTestDto.html":{},"classes/Result.html":{},"injectables/ResultService.html":{},"classes/Specialty.html":{},"classes/Test.html":{},"injectables/TestService.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["process.env.jwt_change_password_secret",{"_index":1124,"title":{},"body":{"injectables/UserService.html":{}}}],["process.env.jwt_secret",{"_index":162,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"modules/UserModule.html":{}}}],["process:string",{"_index":914,"title":{},"body":{"classes/Test.html":{}}}],["processdiff",{"_index":751,"title":{},"body":{"injectables/ResultService.html":{}}}],["processos",{"_index":373,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["procurando",{"_index":485,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["produto",{"_index":512,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["produção",{"_index":428,"title":{},"body":{"classes/CreateTestDto.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["professional",{"_index":314,"title":{},"body":{"classes/CreateSpecialtyDto.html":{}}}],["proficiência",{"_index":405,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["profile",{"_index":94,"title":{},"body":{"controllers/AuthController.html":{}}}],["profile(@loggeduser",{"_index":143,"title":{},"body":{"controllers/AuthController.html":{}}}],["profile(user",{"_index":107,"title":{},"body":{"controllers/AuthController.html":{}}}],["profits",{"_index":1688,"title":{},"body":{"license.html":{}}}],["prohibited",{"_index":1597,"title":{},"body":{"license.html":{}}}],["prohibits",{"_index":1707,"title":{},"body":{"license.html":{}}}],["project",{"_index":1260,"title":{},"body":{"index.html":{}}}],["projeto",{"_index":1229,"title":{},"body":{"index.html":{}}}],["projetopetlover@gmail.com",{"_index":790,"title":{},"body":{"injectables/ResultService.html":{},"injectables/UserService.html":{}}}],["projetos",{"_index":543,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["promise",{"_index":106,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["promove",{"_index":457,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["properties",{"_index":208,"title":{"properties.html":{}},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateResultDto.html":{},"classes/CreateSpecialtyDto.html":{},"classes/CreateTestDto.html":{},"classes/CreateUserDto.html":{},"interfaces/JwtPayload.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"injectables/PrismaService.html":{},"classes/Result.html":{},"classes/Specialty.html":{},"classes/Test.html":{},"classes/UpdateResultDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"properties.html":{}}}],["property",{"_index":1455,"title":{},"body":{"license.html":{}}}],["prove",{"_index":1667,"title":{},"body":{"license.html":{}}}],["provided",{"_index":1547,"title":{},"body":{"license.html":{}}}],["providers",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/ResultModule.html":{},"modules/SpecialtiesModule.html":{},"modules/TestModule.html":{},"modules/UserModule.html":{}}}],["provides",{"_index":1736,"title":{},"body":{"license.html":{}}}],["provision",{"_index":1731,"title":{},"body":{"license.html":{}}}],["provisionally",{"_index":1609,"title":{},"body":{"license.html":{}}}],["provisions",{"_index":1722,"title":{},"body":{"license.html":{}}}],["prs",{"_index":560,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["public",{"_index":1312,"title":{},"body":{"index.html":{},"license.html":{}}}],["publish",{"_index":1745,"title":{},"body":{"license.html":{}}}],["published",{"_index":1750,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":1662,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":1429,"title":{},"body":{"license.html":{}}}],["put",{"_index":1764,"title":{},"body":{"license.html":{}}}],["qual",{"_index":249,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateTestDto.html":{},"classes/UpdateUserDto.html":{},"miscellaneous/variables.html":{}}}],["qualidade",{"_index":350,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["qualidades",{"_index":1240,"title":{},"body":{"index.html":{}}}],["quality",{"_index":1666,"title":{},"body":{"license.html":{}}}],["quando",{"_index":447,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["que",{"_index":490,"title":{},"body":{"classes/CreateTestDto.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["questionarios",{"_index":1238,"title":{},"body":{"index.html":{}}}],["rea",{"_index":556,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["readonly",{"_index":40,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/ResultController.html":{},"injectables/ResultService.html":{},"controllers/SpecialtiesController.html":{},"injectables/SpecialtiesService.html":{},"controllers/TestController.html":{},"injectables/TestService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["realizado",{"_index":798,"title":{},"body":{"injectables/ResultService.html":{}}}],["reasonable",{"_index":1539,"title":{},"body":{"license.html":{}}}],["reavaliar",{"_index":488,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["recebe",{"_index":14,"title":{},"body":{"controllers/AppController.html":{}}}],["receber",{"_index":252,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/UpdateUserDto.html":{}}}],["receipt",{"_index":1627,"title":{},"body":{"license.html":{}}}],["received",{"_index":1625,"title":{},"body":{"license.html":{}}}],["receiving",{"_index":98,"title":{},"body":{"controllers/AuthController.html":{}}}],["recipient",{"_index":1544,"title":{},"body":{"license.html":{}}}],["recipients",{"_index":1532,"title":{},"body":{"license.html":{}}}],["recover",{"_index":1009,"title":{},"body":{"controllers/UserController.html":{}}}],["reduzindo",{"_index":423,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["reference",{"_index":1720,"title":{},"body":{"license.html":{}}}],["references",{"_index":1754,"title":{},"body":{"license.html":{}}}],["referente",{"_index":1233,"title":{},"body":{"index.html":{}}}],["reflect",{"_index":1211,"title":{},"body":{"dependencies.html":{}}}],["reformed",{"_index":1734,"title":{},"body":{"license.html":{}}}],["regulation",{"_index":1587,"title":{},"body":{"license.html":{}}}],["reinstated",{"_index":1608,"title":{},"body":{"license.html":{}}}],["relacionamento",{"_index":364,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["relating",{"_index":1711,"title":{},"body":{"license.html":{}}}],["relevant",{"_index":1766,"title":{},"body":{"license.html":{}}}],["remedy",{"_index":1562,"title":{},"body":{"license.html":{}}}],["remove",{"_index":666,"title":{},"body":{"controllers/ResultController.html":{},"injectables/ResultService.html":{},"controllers/SpecialtiesController.html":{},"injectables/SpecialtiesService.html":{},"controllers/TestController.html":{},"injectables/TestService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"license.html":{}}}],["remove(@param('email",{"_index":1074,"title":{},"body":{"controllers/UserController.html":{}}}],["remove(@param('id",{"_index":708,"title":{},"body":{"controllers/ResultController.html":{},"controllers/SpecialtiesController.html":{},"controllers/TestController.html":{}}}],["remove(email",{"_index":1021,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["remove(id",{"_index":679,"title":{},"body":{"controllers/ResultController.html":{},"injectables/ResultService.html":{},"controllers/SpecialtiesController.html":{},"injectables/SpecialtiesService.html":{},"controllers/TestController.html":{},"injectables/TestService.html":{}}}],["remove(id:string,user:user",{"_index":832,"title":{},"body":{"injectables/ResultService.html":{}}}],["removed",{"_index":1486,"title":{},"body":{"license.html":{}}}],["rename",{"_index":1753,"title":{},"body":{"license.html":{}}}],["repair",{"_index":1671,"title":{},"body":{"license.html":{}}}],["replace(/=/g",{"_index":1131,"title":{},"body":{"injectables/UserService.html":{}}}],["replace(/\\+/g",{"_index":1127,"title":{},"body":{"injectables/UserService.html":{}}}],["replace(/\\//g",{"_index":1129,"title":{},"body":{"injectables/UserService.html":{}}}],["replace(/e1q2u3a4l/g",{"_index":1143,"title":{},"body":{"injectables/UserService.html":{}}}],["replace(/p1l2u3s/g",{"_index":1141,"title":{},"body":{"injectables/UserService.html":{}}}],["replace(/s1l2a3s4h/g",{"_index":1142,"title":{},"body":{"injectables/UserService.html":{}}}],["repo",{"_index":1267,"title":{},"body":{"index.html":{}}}],["representation",{"_index":1510,"title":{},"body":{"license.html":{}}}],["represents",{"_index":1511,"title":{},"body":{"license.html":{}}}],["reproduce",{"_index":1458,"title":{},"body":{"license.html":{}}}],["req",{"_index":42,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ResultController.html":{},"controllers/SpecialtiesController.html":{},"controllers/TestController.html":{},"controllers/UserController.html":{}}}],["requer",{"_index":219,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["request",{"_index":43,"title":{},"body":{"controllers/AppController.html":{},"miscellaneous/variables.html":{}}}],["request.user",{"_index":1792,"title":{},"body":{"miscellaneous/variables.html":{}}}],["require('./seed/01",{"_index":1794,"title":{},"body":{"miscellaneous/variables.html":{}}}],["require('./seed/02",{"_index":1795,"title":{},"body":{"miscellaneous/variables.html":{}}}],["require('./seed/03",{"_index":1797,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":1561,"title":{},"body":{"license.html":{}}}],["requirements",{"_index":1500,"title":{},"body":{"license.html":{}}}],["requisitos",{"_index":1249,"title":{},"body":{"index.html":{}}}],["requisição",{"_index":16,"title":{},"body":{"controllers/AppController.html":{}}}],["resellers",{"_index":1651,"title":{},"body":{"license.html":{}}}],["reset",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/ResultModule.html":{},"modules/SpecialtiesModule.html":{},"modules/TestModule.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["resettoken",{"_index":200,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["resettokendecrypted",{"_index":1144,"title":{},"body":{"injectables/UserService.html":{}}}],["resettokentotext",{"_index":1140,"title":{},"body":{"injectables/UserService.html":{}}}],["resolver",{"_index":414,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["resources",{"_index":1273,"title":{},"body":{"index.html":{}}}],["respect",{"_index":1473,"title":{},"body":{"license.html":{}}}],["responsibilities",{"_index":1529,"title":{},"body":{"license.html":{}}}],["responsável",{"_index":495,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["restrict",{"_index":1538,"title":{},"body":{"license.html":{}}}],["result",{"_index":272,"title":{"classes/Result.html":{}},"body":{"classes/CreateResultDto.html":{},"classes/Result.html":{},"controllers/ResultController.html":{},"injectables/ResultService.html":{},"classes/UpdateResultDto.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["result.controller",{"_index":714,"title":{},"body":{"modules/ResultModule.html":{}}}],["result.dto",{"_index":693,"title":{},"body":{"controllers/ResultController.html":{},"injectables/ResultService.html":{},"classes/UpdateResultDto.html":{}}}],["result.dto.ts",{"_index":263,"title":{},"body":{"classes/CreateResultDto.html":{},"classes/UpdateResultDto.html":{},"coverage.html":{}}}],["result.dto.ts:10",{"_index":284,"title":{},"body":{"classes/CreateResultDto.html":{}}}],["result.dto.ts:11",{"_index":975,"title":{},"body":{"classes/UpdateResultDto.html":{}}}],["result.dto.ts:17",{"_index":281,"title":{},"body":{"classes/CreateResultDto.html":{}}}],["result.dto.ts:18",{"_index":973,"title":{},"body":{"classes/UpdateResultDto.html":{}}}],["result.dto.ts:24",{"_index":285,"title":{},"body":{"classes/CreateResultDto.html":{}}}],["result.dto.ts:28",{"_index":970,"title":{},"body":{"classes/UpdateResultDto.html":{}}}],["result.dto.ts:31",{"_index":283,"title":{},"body":{"classes/CreateResultDto.html":{}}}],["result.dto.ts:38",{"_index":279,"title":{},"body":{"classes/CreateResultDto.html":{},"classes/UpdateResultDto.html":{}}}],["result.dto.ts:45",{"_index":287,"title":{},"body":{"classes/CreateResultDto.html":{}}}],["result.dto.ts:52",{"_index":277,"title":{},"body":{"classes/CreateResultDto.html":{}}}],["result.reduce((prev",{"_index":760,"title":{},"body":{"injectables/ResultService.html":{}}}],["result.service",{"_index":691,"title":{},"body":{"controllers/ResultController.html":{},"modules/ResultModule.html":{}}}],["result.userid",{"_index":827,"title":{},"body":{"injectables/ResultService.html":{}}}],["result/result.module",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["resultado",{"_index":829,"title":{},"body":{"injectables/ResultService.html":{}}}],["resultados",{"_index":814,"title":{},"body":{"injectables/ResultService.html":{}}}],["resultcontroller",{"_index":662,"title":{"controllers/ResultController.html":{}},"body":{"controllers/ResultController.html":{},"modules/ResultModule.html":{},"coverage.html":{}}}],["resulting",{"_index":1705,"title":{},"body":{"license.html":{}}}],["resultmodule",{"_index":58,"title":{"modules/ResultModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ResultModule.html":{},"modules.html":{},"overview.html":{}}}],["results",{"_index":47,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateResultDto.html":{},"classes/CreateSpecialtyDto.html":{},"classes/CreateTestDto.html":{},"classes/CreateUserDto.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Result.html":{},"controllers/ResultController.html":{},"modules/ResultModule.html":{},"injectables/ResultService.html":{},"controllers/SpecialtiesController.html":{},"modules/SpecialtiesModule.html":{},"injectables/SpecialtiesService.html":{},"classes/Specialty.html":{},"classes/Test.html":{},"controllers/TestController.html":{},"modules/TestModule.html":{},"injectables/TestService.html":{},"classes/UpdateResultDto.html":{},"classes/UpdateSpecialtyDto.html":{},"classes/UpdateTestDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["resultservice",{"_index":690,"title":{"injectables/ResultService.html":{}},"body":{"controllers/ResultController.html":{},"modules/ResultModule.html":{},"injectables/ResultService.html":{},"coverage.html":{},"overview.html":{}}}],["retorna",{"_index":18,"title":{},"body":{"controllers/AppController.html":{}}}],["retornaram",{"_index":778,"title":{},"body":{"injectables/ResultService.html":{}}}],["return",{"_index":45,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/ResultController.html":{},"injectables/ResultService.html":{},"controllers/SpecialtiesController.html":{},"injectables/SpecialtiesService.html":{},"controllers/TestController.html":{},"injectables/TestService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/ResultController.html":{},"injectables/ResultService.html":{},"controllers/SpecialtiesController.html":{},"injectables/SpecialtiesService.html":{},"controllers/TestController.html":{},"injectables/TestService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["revisa",{"_index":561,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["right",{"_index":1379,"title":{},"body":{"license.html":{}}}],["rights",{"_index":1386,"title":{},"body":{"license.html":{}}}],["rimraf",{"_index":1214,"title":{},"body":{"dependencies.html":{}}}],["risk",{"_index":1665,"title":{},"body":{"license.html":{}}}],["roda",{"_index":1279,"title":{},"body":{"index.html":{}}}],["rodando",{"_index":1278,"title":{},"body":{"index.html":{}}}],["role",{"_index":987,"title":{},"body":{"classes/User.html":{},"injectables/UserService.html":{}}}],["royalty",{"_index":1450,"title":{},"body":{"license.html":{}}}],["run",{"_index":1243,"title":{},"body":{"index.html":{}}}],["running",{"_index":82,"title":{},"body":{"injectables/AppService.html":{}}}],["rxjs",{"_index":1216,"title":{},"body":{"dependencies.html":{}}}],["s.o.l.i.d",{"_index":529,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["s1l2a3s4h",{"_index":1130,"title":{},"body":{"injectables/UserService.html":{}}}],["sale",{"_index":1407,"title":{},"body":{"license.html":{}}}],["santos",{"_index":1305,"title":{},"body":{"index.html":{}}}],["scope",{"_index":1478,"title":{},"body":{"license.html":{}}}],["score",{"_index":312,"title":{},"body":{"classes/CreateSpecialtyDto.html":{}}}],["se",{"_index":776,"title":{},"body":{"injectables/ResultService.html":{},"classes/UpdateResultDto.html":{}}}],["secondary",{"_index":1358,"title":{},"body":{"license.html":{}}}],["secret",{"_index":161,"title":{},"body":{"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["secretorkey",{"_index":608,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["section",{"_index":1472,"title":{},"body":{"license.html":{}}}],["sections",{"_index":1526,"title":{},"body":{"license.html":{}}}],["see",{"_index":1253,"title":{},"body":{"index.html":{},"license.html":{}}}],["seeds",{"_index":1180,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["segue",{"_index":473,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["seguindo",{"_index":548,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["select",{"_index":767,"title":{},"body":{"injectables/ResultService.html":{},"injectables/TestService.html":{},"injectables/UserService.html":{}}}],["sell",{"_index":1467,"title":{},"body":{"license.html":{}}}],["selling",{"_index":1405,"title":{},"body":{"license.html":{}}}],["sempre",{"_index":443,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["send",{"_index":1027,"title":{},"body":{"controllers/UserController.html":{}}}],["sendemailforgotpassword",{"_index":1004,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["sendemailforgotpassword(@param('email",{"_index":1061,"title":{},"body":{"controllers/UserController.html":{}}}],["sendemailforgotpassword(email",{"_index":1025,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["sending",{"_index":807,"title":{},"body":{"injectables/ResultService.html":{},"injectables/UserService.html":{}}}],["senha",{"_index":216,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"injectables/UserService.html":{}}}],["senhas",{"_index":1105,"title":{},"body":{"injectables/UserService.html":{}}}],["senior",{"_index":319,"title":{},"body":{"classes/CreateSpecialtyDto.html":{}}}],["sent",{"_index":1029,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["separate",{"_index":1372,"title":{},"body":{"license.html":{}}}],["server",{"_index":81,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["service",{"_index":788,"title":{},"body":{"injectables/ResultService.html":{},"injectables/UserService.html":{},"license.html":{}}}],["servicing",{"_index":1670,"title":{},"body":{"license.html":{}}}],["seu",{"_index":451,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["seus",{"_index":453,"title":{},"body":{"classes/CreateTestDto.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["shall",{"_index":1646,"title":{},"body":{"license.html":{}}}],["shares",{"_index":1443,"title":{},"body":{"license.html":{}}}],["signoptions",{"_index":163,"title":{},"body":{"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["sim",{"_index":652,"title":{},"body":{"classes/Result.html":{},"classes/UpdateResultDto.html":{}}}],["simples",{"_index":413,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["simula",{"_index":513,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["sistema",{"_index":567,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["sistemas",{"_index":384,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["sistêmica",{"_index":569,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["sistêmico",{"_index":380,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["sit",{"_index":304,"title":{},"body":{"classes/CreateSpecialtyDto.html":{}}}],["skbfwjaibimleyou",{"_index":792,"title":{},"body":{"injectables/ResultService.html":{},"injectables/UserService.html":{}}}],["skill",{"_index":1601,"title":{},"body":{"license.html":{}}}],["slas",{"_index":432,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["smtp.gmail.com",{"_index":785,"title":{},"body":{"injectables/ResultService.html":{},"injectables/UserService.html":{}}}],["sob",{"_index":1310,"title":{},"body":{"index.html":{}}}],["software",{"_index":1332,"title":{},"body":{"license.html":{}}}],["software.1.11",{"_index":1394,"title":{},"body":{"license.html":{}}}],["solução",{"_index":508,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["soluções",{"_index":419,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["somente",{"_index":253,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/UpdateUserDto.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateResultDto.html":{},"classes/CreateSpecialtyDto.html":{},"classes/CreateTestDto.html":{},"classes/CreateUserDto.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Result.html":{},"controllers/ResultController.html":{},"modules/ResultModule.html":{},"injectables/ResultService.html":{},"controllers/SpecialtiesController.html":{},"modules/SpecialtiesModule.html":{},"injectables/SpecialtiesService.html":{},"classes/Specialty.html":{},"classes/Test.html":{},"controllers/TestController.html":{},"modules/TestModule.html":{},"injectables/TestService.html":{},"classes/UpdateResultDto.html":{},"classes/UpdateSpecialtyDto.html":{},"classes/UpdateTestDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"license.html":{}}}],["special",{"_index":1682,"title":{},"body":{"license.html":{}}}],["specialtie",{"_index":838,"title":{},"body":{"controllers/SpecialtiesController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["specialties",{"_index":839,"title":{},"body":{"controllers/SpecialtiesController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["specialties.controller",{"_index":865,"title":{},"body":{"modules/SpecialtiesModule.html":{}}}],["specialties.service",{"_index":850,"title":{},"body":{"controllers/SpecialtiesController.html":{},"modules/SpecialtiesModule.html":{}}}],["specialties.ts",{"_index":1186,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["specialties/specialties.module",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["specialtiescontroller",{"_index":834,"title":{"controllers/SpecialtiesController.html":{}},"body":{"controllers/SpecialtiesController.html":{},"modules/SpecialtiesModule.html":{},"coverage.html":{}}}],["specialtiesmodule",{"_index":59,"title":{"modules/SpecialtiesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SpecialtiesModule.html":{},"modules.html":{},"overview.html":{}}}],["specialtiesservice",{"_index":849,"title":{"injectables/SpecialtiesService.html":{}},"body":{"controllers/SpecialtiesController.html":{},"modules/SpecialtiesModule.html":{},"injectables/SpecialtiesService.html":{},"coverage.html":{},"overview.html":{}}}],["specialty",{"_index":300,"title":{"classes/Specialty.html":{}},"body":{"classes/CreateSpecialtyDto.html":{},"controllers/SpecialtiesController.html":{},"injectables/SpecialtiesService.html":{},"classes/Specialty.html":{},"coverage.html":{}}}],["specialty.dto",{"_index":851,"title":{},"body":{"controllers/SpecialtiesController.html":{},"injectables/SpecialtiesService.html":{},"classes/UpdateSpecialtyDto.html":{}}}],["specialty.dto.ts",{"_index":291,"title":{},"body":{"classes/CreateSpecialtyDto.html":{},"classes/UpdateSpecialtyDto.html":{},"coverage.html":{}}}],["specialty.dto.ts:11",{"_index":323,"title":{},"body":{"classes/CreateSpecialtyDto.html":{}}}],["specialty.dto.ts:18",{"_index":309,"title":{},"body":{"classes/CreateSpecialtyDto.html":{}}}],["specialty.dto.ts:27",{"_index":328,"title":{},"body":{"classes/CreateSpecialtyDto.html":{}}}],["specialty.dto.ts:36",{"_index":325,"title":{},"body":{"classes/CreateSpecialtyDto.html":{}}}],["specialty.dto.ts:45",{"_index":329,"title":{},"body":{"classes/CreateSpecialtyDto.html":{}}}],["specialty.dto.ts:54",{"_index":326,"title":{},"body":{"classes/CreateSpecialtyDto.html":{}}}],["specialty.dto.ts:63",{"_index":313,"title":{},"body":{"classes/CreateSpecialtyDto.html":{}}}],["specialty.dto.ts:65",{"_index":298,"title":{},"body":{"classes/CreateSpecialtyDto.html":{}}}],["specialty.dto.ts:66",{"_index":330,"title":{},"body":{"classes/CreateSpecialtyDto.html":{}}}],["specialtys",{"_index":738,"title":{},"body":{"injectables/ResultService.html":{}}}],["specialtys.length",{"_index":740,"title":{},"body":{"injectables/ResultService.html":{}}}],["specialtys.map((specialy",{"_index":746,"title":{},"body":{"injectables/ResultService.html":{}}}],["specialy",{"_index":747,"title":{},"body":{"injectables/ResultService.html":{}}}],["specific",{"_index":841,"title":{},"body":{"controllers/SpecialtiesController.html":{},"license.html":{}}}],["squad",{"_index":369,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["src/.../01",{"_index":1785,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../02",{"_index":1784,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../03",{"_index":1783,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../handleerror.utils.ts",{"_index":1223,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../isadmin.utils.ts",{"_index":1224,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../logged",{"_index":1781,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1222,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../seed.ts",{"_index":1782,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:17",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":79,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":80,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":90,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:32",{"_index":101,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:46",{"_index":113,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":150,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":166,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:15",{"_index":174,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:9",{"_index":172,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/dto/login.dto.ts",{"_index":611,"title":{},"body":{"classes/LoginDto.html":{},"coverage.html":{}}}],["src/auth/dto/login.dto.ts:13",{"_index":613,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/dto/login.dto.ts:21",{"_index":615,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/dto/login.response.dto.ts",{"_index":616,"title":{},"body":{"classes/LoginResponseDto.html":{},"coverage.html":{}}}],["src/auth/dto/login.response.dto.ts:10",{"_index":620,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["src/auth/dto/login.response.dto.ts:15",{"_index":621,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["src/auth/jwt.strategy.ts",{"_index":589,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts:16",{"_index":594,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/jwt.strategy.ts:7",{"_index":591,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/logged",{"_index":695,"title":{},"body":{"controllers/ResultController.html":{},"controllers/SpecialtiesController.html":{},"controllers/TestController.html":{},"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/main.ts",{"_index":1176,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/prisma/prisma.module",{"_index":152,"title":{},"body":{"modules/AuthModule.html":{},"modules/ResultModule.html":{},"modules/SpecialtiesModule.html":{},"modules/TestModule.html":{},"modules/UserModule.html":{}}}],["src/prisma/prisma.module.ts",{"_index":626,"title":{},"body":{"modules/PrismaModule.html":{}}}],["src/prisma/prisma.service",{"_index":601,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/ResultService.html":{},"injectables/SpecialtiesService.html":{},"injectables/TestService.html":{},"injectables/UserService.html":{}}}],["src/prisma/prisma.service.ts",{"_index":629,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["src/prisma/prisma.service.ts:11",{"_index":636,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/prisma.service.ts:6",{"_index":639,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/prisma.service.ts:7",{"_index":638,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/seed.ts",{"_index":1179,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/prisma/seed/01",{"_index":1181,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/prisma/seed/02",{"_index":1183,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/prisma/seed/03",{"_index":1185,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/result/dto/create",{"_index":262,"title":{},"body":{"classes/CreateResultDto.html":{},"coverage.html":{}}}],["src/result/dto/update",{"_index":968,"title":{},"body":{"classes/UpdateResultDto.html":{},"coverage.html":{}}}],["src/result/entities/result.entity.ts",{"_index":645,"title":{},"body":{"classes/Result.html":{},"coverage.html":{}}}],["src/result/entities/result.entity.ts:10",{"_index":661,"title":{},"body":{"classes/Result.html":{}}}],["src/result/entities/result.entity.ts:11",{"_index":649,"title":{},"body":{"classes/Result.html":{}}}],["src/result/entities/result.entity.ts:12",{"_index":660,"title":{},"body":{"classes/Result.html":{}}}],["src/result/entities/result.entity.ts:2",{"_index":650,"title":{},"body":{"classes/Result.html":{}}}],["src/result/entities/result.entity.ts:3",{"_index":655,"title":{},"body":{"classes/Result.html":{}}}],["src/result/entities/result.entity.ts:4",{"_index":658,"title":{},"body":{"classes/Result.html":{}}}],["src/result/entities/result.entity.ts:5",{"_index":656,"title":{},"body":{"classes/Result.html":{}}}],["src/result/entities/result.entity.ts:6",{"_index":657,"title":{},"body":{"classes/Result.html":{}}}],["src/result/entities/result.entity.ts:7",{"_index":659,"title":{},"body":{"classes/Result.html":{}}}],["src/result/entities/result.entity.ts:8",{"_index":651,"title":{},"body":{"classes/Result.html":{}}}],["src/result/entities/result.entity.ts:9",{"_index":654,"title":{},"body":{"classes/Result.html":{}}}],["src/result/result.controller.ts",{"_index":663,"title":{},"body":{"controllers/ResultController.html":{},"coverage.html":{}}}],["src/result/result.controller.ts:32",{"_index":671,"title":{},"body":{"controllers/ResultController.html":{}}}],["src/result/result.controller.ts:42",{"_index":674,"title":{},"body":{"controllers/ResultController.html":{}}}],["src/result/result.controller.ts:52",{"_index":678,"title":{},"body":{"controllers/ResultController.html":{}}}],["src/result/result.controller.ts:62",{"_index":688,"title":{},"body":{"controllers/ResultController.html":{}}}],["src/result/result.controller.ts:71",{"_index":681,"title":{},"body":{"controllers/ResultController.html":{}}}],["src/result/result.module.ts",{"_index":713,"title":{},"body":{"modules/ResultModule.html":{}}}],["src/result/result.service.ts",{"_index":715,"title":{},"body":{"injectables/ResultService.html":{},"coverage.html":{}}}],["src/result/result.service.ts:154",{"_index":718,"title":{},"body":{"injectables/ResultService.html":{}}}],["src/result/result.service.ts:16",{"_index":716,"title":{},"body":{"injectables/ResultService.html":{}}}],["src/result/result.service.ts:176",{"_index":719,"title":{},"body":{"injectables/ResultService.html":{}}}],["src/result/result.service.ts:18",{"_index":717,"title":{},"body":{"injectables/ResultService.html":{}}}],["src/result/result.service.ts:195",{"_index":721,"title":{},"body":{"injectables/ResultService.html":{}}}],["src/result/result.service.ts:332",{"_index":720,"title":{},"body":{"injectables/ResultService.html":{}}}],["src/specialties/dto/create",{"_index":290,"title":{},"body":{"classes/CreateSpecialtyDto.html":{},"coverage.html":{}}}],["src/specialties/dto/update",{"_index":977,"title":{},"body":{"classes/UpdateSpecialtyDto.html":{},"coverage.html":{}}}],["src/specialties/entities/specialty.entity.ts",{"_index":884,"title":{},"body":{"classes/Specialty.html":{},"coverage.html":{}}}],["src/specialties/entities/specialty.entity.ts:10",{"_index":885,"title":{},"body":{"classes/Specialty.html":{}}}],["src/specialties/entities/specialty.entity.ts:11",{"_index":894,"title":{},"body":{"classes/Specialty.html":{}}}],["src/specialties/entities/specialty.entity.ts:2",{"_index":887,"title":{},"body":{"classes/Specialty.html":{}}}],["src/specialties/entities/specialty.entity.ts:3",{"_index":889,"title":{},"body":{"classes/Specialty.html":{}}}],["src/specialties/entities/specialty.entity.ts:4",{"_index":886,"title":{},"body":{"classes/Specialty.html":{}}}],["src/specialties/entities/specialty.entity.ts:5",{"_index":892,"title":{},"body":{"classes/Specialty.html":{}}}],["src/specialties/entities/specialty.entity.ts:6",{"_index":890,"title":{},"body":{"classes/Specialty.html":{}}}],["src/specialties/entities/specialty.entity.ts:7",{"_index":893,"title":{},"body":{"classes/Specialty.html":{}}}],["src/specialties/entities/specialty.entity.ts:8",{"_index":891,"title":{},"body":{"classes/Specialty.html":{}}}],["src/specialties/entities/specialty.entity.ts:9",{"_index":888,"title":{},"body":{"classes/Specialty.html":{}}}],["src/specialties/specialties.controller.ts",{"_index":835,"title":{},"body":{"controllers/SpecialtiesController.html":{},"coverage.html":{}}}],["src/specialties/specialties.controller.ts:32",{"_index":837,"title":{},"body":{"controllers/SpecialtiesController.html":{}}}],["src/specialties/specialties.controller.ts:42",{"_index":840,"title":{},"body":{"controllers/SpecialtiesController.html":{}}}],["src/specialties/specialties.controller.ts:52",{"_index":843,"title":{},"body":{"controllers/SpecialtiesController.html":{}}}],["src/specialties/specialties.controller.ts:62",{"_index":848,"title":{},"body":{"controllers/SpecialtiesController.html":{}}}],["src/specialties/specialties.controller.ts:76",{"_index":845,"title":{},"body":{"controllers/SpecialtiesController.html":{}}}],["src/specialties/specialties.module.ts",{"_index":864,"title":{},"body":{"modules/SpecialtiesModule.html":{}}}],["src/specialties/specialties.service.ts",{"_index":866,"title":{},"body":{"injectables/SpecialtiesService.html":{},"coverage.html":{}}}],["src/specialties/specialties.service.ts:12",{"_index":867,"title":{},"body":{"injectables/SpecialtiesService.html":{}}}],["src/specialties/specialties.service.ts:15",{"_index":868,"title":{},"body":{"injectables/SpecialtiesService.html":{}}}],["src/specialties/specialties.service.ts:21",{"_index":869,"title":{},"body":{"injectables/SpecialtiesService.html":{}}}],["src/specialties/specialties.service.ts:29",{"_index":870,"title":{},"body":{"injectables/SpecialtiesService.html":{}}}],["src/specialties/specialties.service.ts:39",{"_index":872,"title":{},"body":{"injectables/SpecialtiesService.html":{}}}],["src/specialties/specialties.service.ts:50",{"_index":871,"title":{},"body":{"injectables/SpecialtiesService.html":{}}}],["src/test",{"_index":333,"title":{},"body":{"classes/CreateTestDto.html":{},"classes/Test.html":{},"controllers/TestController.html":{},"modules/TestModule.html":{},"injectables/TestService.html":{},"classes/UpdateTestDto.html":{},"coverage.html":{}}}],["src/user/dto/create",{"_index":571,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/user/dto/update",{"_index":206,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/user/entities/jwtchangepassword.entity.ts",{"_index":588,"title":{},"body":{"interfaces/JwtPayload.html":{},"coverage.html":{}}}],["src/user/entities/user.entity",{"_index":127,"title":{},"body":{"controllers/AuthController.html":{},"classes/LoginResponseDto.html":{},"controllers/ResultController.html":{},"injectables/ResultService.html":{},"controllers/SpecialtiesController.html":{},"injectables/SpecialtiesService.html":{},"controllers/TestController.html":{},"injectables/TestService.html":{}}}],["src/user/entities/user.entity.ts",{"_index":985,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/user/entities/user.entity.ts:10",{"_index":995,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:11",{"_index":991,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:12",{"_index":989,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:13",{"_index":1000,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:2",{"_index":992,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:3",{"_index":996,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:4",{"_index":990,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:5",{"_index":997,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:6",{"_index":999,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:7",{"_index":988,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:8",{"_index":998,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:9",{"_index":994,"title":{},"body":{"classes/User.html":{}}}],["src/user/user.controller.ts",{"_index":1002,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/user/user.controller.ts:109",{"_index":1033,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:125",{"_index":1024,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:137",{"_index":1041,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:33",{"_index":1013,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:45",{"_index":1046,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:57",{"_index":1028,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:69",{"_index":1010,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:85",{"_index":1016,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:97",{"_index":1020,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.module.ts",{"_index":1083,"title":{},"body":{"modules/UserModule.html":{}}}],["src/user/user.service.ts",{"_index":1088,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/user/user.service.ts:120",{"_index":1095,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:186",{"_index":1090,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:23",{"_index":1089,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:280",{"_index":1092,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:29",{"_index":1091,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:309",{"_index":1093,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:345",{"_index":1096,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:406",{"_index":1094,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:89",{"_index":1097,"title":{},"body":{"injectables/UserService.html":{}}}],["src/utils/handleerror.utils",{"_index":725,"title":{},"body":{"injectables/ResultService.html":{},"injectables/SpecialtiesService.html":{},"injectables/TestService.html":{},"injectables/UserService.html":{}}}],["src/utils/handleerror.utils.ts",{"_index":1192,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/utils/isadmin.utils",{"_index":727,"title":{},"body":{"injectables/ResultService.html":{},"injectables/SpecialtiesService.html":{},"injectables/TestService.html":{},"injectables/UserService.html":{}}}],["src/utils/isadmin.utils.ts",{"_index":1193,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["start",{"_index":1284,"title":{},"body":{"index.html":{}}}],["started",{"_index":1226,"title":{"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["statements",{"_index":1165,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":22,"title":{},"body":{"controllers/AppController.html":{}}}],["statute",{"_index":1586,"title":{},"body":{"license.html":{}}}],["statutory",{"_index":1657,"title":{},"body":{"license.html":{}}}],["steward",{"_index":1743,"title":{},"body":{"license.html":{}}}],["stoppage",{"_index":1691,"title":{},"body":{"license.html":{}}}],["strategy",{"_index":599,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["string",{"_index":29,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateSpecialtyDto.html":{},"classes/CreateTestDto.html":{},"classes/CreateUserDto.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Result.html":{},"controllers/ResultController.html":{},"injectables/ResultService.html":{},"controllers/SpecialtiesController.html":{},"injectables/SpecialtiesService.html":{},"classes/Specialty.html":{},"classes/Test.html":{},"controllers/TestController.html":{},"injectables/TestService.html":{},"classes/UpdateResultDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["sua",{"_index":368,"title":{},"body":{"classes/CreateTestDto.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["subir",{"_index":426,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["subject",{"_index":796,"title":{},"body":{"injectables/ResultService.html":{},"injectables/UserService.html":{},"license.html":{}}}],["sublicense",{"_index":1545,"title":{},"body":{"license.html":{}}}],["subsequent",{"_index":1503,"title":{},"body":{"license.html":{}}}],["subsequently",{"_index":1385,"title":{},"body":{"license.html":{}}}],["substance",{"_index":1555,"title":{},"body":{"license.html":{}}}],["successfully",{"_index":145,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ResultController.html":{},"injectables/ResultService.html":{},"controllers/SpecialtiesController.html":{},"injectables/SpecialtiesService.html":{}}}],["sucesso",{"_index":117,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateTestDto.html":{},"controllers/TestController.html":{},"injectables/TestService.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["such",{"_index":1350,"title":{},"body":{"license.html":{}}}],["sufficient",{"_index":1515,"title":{},"body":{"license.html":{}}}],["sufficiently",{"_index":1598,"title":{},"body":{"license.html":{}}}],["sugere",{"_index":480,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["summary",{"_index":139,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ResultController.html":{},"controllers/SpecialtiesController.html":{},"controllers/TestController.html":{},"controllers/UserController.html":{}}}],["super",{"_index":603,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["support",{"_index":1570,"title":{},"body":{"license.html":{},"modules.html":{}}}],["survive",{"_index":1653,"title":{},"body":{"license.html":{}}}],["svg",{"_index":1770,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":87,"title":{},"body":{"injectables/AppService.html":{},"dependencies.html":{}}}],["system",{"_index":268,"title":{},"body":{"classes/CreateResultDto.html":{},"classes/CreateSpecialtyDto.html":{},"classes/CreateTestDto.html":{},"classes/Result.html":{},"injectables/ResultService.html":{},"classes/Specialty.html":{},"classes/Test.html":{},"injectables/TestService.html":{},"miscellaneous/variables.html":{}}}],["system:string",{"_index":909,"title":{},"body":{"classes/Test.html":{}}}],["systemdiff",{"_index":748,"title":{},"body":{"injectables/ResultService.html":{}}}],["systems",{"_index":327,"title":{},"body":{"classes/CreateSpecialtyDto.html":{}}}],["são",{"_index":352,"title":{},"body":{"classes/CreateTestDto.html":{},"injectables/UserService.html":{}}}],["table",{"_index":1195,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1194,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":1270,"title":{},"body":{"index.html":{}}}],["também",{"_index":429,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["team",{"_index":258,"title":{},"body":{"classes/ChangePasswordDto.html":{},"injectables/ResultService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["tech",{"_index":321,"title":{},"body":{"classes/CreateSpecialtyDto.html":{}}}],["technology",{"_index":295,"title":{},"body":{"classes/CreateSpecialtyDto.html":{},"classes/Result.html":{},"injectables/ResultService.html":{},"classes/Specialty.html":{},"classes/UpdateResultDto.html":{},"miscellaneous/variables.html":{}}}],["technologydiff",{"_index":750,"title":{},"body":{"injectables/ResultService.html":{}}}],["tecnologia",{"_index":377,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["temas",{"_index":398,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["terem",{"_index":452,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["terminate",{"_index":1605,"title":{},"body":{"license.html":{}}}],["terminates",{"_index":1614,"title":{},"body":{"license.html":{}}}],["termination",{"_index":1603,"title":{},"body":{"license.html":{}}}],["terms",{"_index":1364,"title":{},"body":{"license.html":{}}}],["test",{"_index":73,"title":{"classes/Test.html":{}},"body":{"modules/AppModule.html":{},"classes/CreateResultDto.html":{},"classes/CreateTestDto.html":{},"controllers/ResultController.html":{},"classes/Test.html":{},"controllers/TestController.html":{},"injectables/TestService.html":{},"classes/UpdateResultDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["test.controller",{"_index":951,"title":{},"body":{"modules/TestModule.html":{}}}],["test.dto",{"_index":934,"title":{},"body":{"controllers/TestController.html":{},"injectables/TestService.html":{},"classes/UpdateTestDto.html":{}}}],["test.dto.ts",{"_index":335,"title":{},"body":{"classes/CreateTestDto.html":{},"classes/UpdateTestDto.html":{},"coverage.html":{}}}],["test.dto.ts:10",{"_index":396,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["test.dto.ts:112",{"_index":357,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["test.dto.ts:26",{"_index":385,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["test.dto.ts:42",{"_index":370,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["test.dto.ts:58",{"_index":378,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["test.dto.ts:72",{"_index":393,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["test.dto.ts:85",{"_index":362,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["test.dto.ts:98",{"_index":402,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["test.service",{"_index":933,"title":{},"body":{"controllers/TestController.html":{},"modules/TestModule.html":{}}}],["test:string",{"_index":911,"title":{},"body":{"classes/Test.html":{}}}],["testa",{"_index":507,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["testcontroller",{"_index":918,"title":{"controllers/TestController.html":{}},"body":{"controllers/TestController.html":{},"modules/TestModule.html":{},"coverage.html":{}}}],["teste",{"_index":395,"title":{},"body":{"classes/CreateTestDto.html":{},"injectables/ResultService.html":{},"controllers/TestController.html":{},"miscellaneous/variables.html":{}}}],["testes",{"_index":387,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["testmodule",{"_index":60,"title":{"modules/TestModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TestModule.html":{},"modules.html":{},"overview.html":{}}}],["tests",{"_index":924,"title":{},"body":{"controllers/TestController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["testservice",{"_index":932,"title":{"injectables/TestService.html":{}},"body":{"controllers/TestController.html":{},"modules/TestModule.html":{},"injectables/TestService.html":{},"coverage.html":{},"overview.html":{}}}],["text",{"_index":1594,"title":{},"body":{"license.html":{}}}],["then((user",{"_index":1113,"title":{},"body":{"injectables/UserService.html":{}}}],["then(async",{"_index":826,"title":{},"body":{"injectables/ResultService.html":{}}}],["theory",{"_index":1677,"title":{},"body":{"license.html":{}}}],["thereof",{"_index":1355,"title":{},"body":{"license.html":{}}}],["third",{"_index":1489,"title":{},"body":{"license.html":{}}}],["this.$connect",{"_index":642,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$on('beforeexit",{"_index":643,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.appservice.getappstatus",{"_index":46,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.login(logindto",{"_index":141,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.jwtservice.sign",{"_index":202,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.sign(payload",{"_index":1121,"title":{},"body":{"injectables/UserService.html":{}}}],["this.jwtservice.verify(user.resettoken",{"_index":1148,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.result",{"_index":825,"title":{},"body":{"injectables/ResultService.html":{}}}],["this.prisma.result.delete({where:{id:id",{"_index":833,"title":{},"body":{"injectables/ResultService.html":{}}}],["this.prisma.result.findmany",{"_index":812,"title":{},"body":{"injectables/ResultService.html":{}}}],["this.prisma.result.findunique",{"_index":817,"title":{},"body":{"injectables/ResultService.html":{}}}],["this.prisma.specialtie",{"_index":880,"title":{},"body":{"injectables/SpecialtiesService.html":{}}}],["this.prisma.specialtie.create",{"_index":876,"title":{},"body":{"injectables/SpecialtiesService.html":{}}}],["this.prisma.specialtie.delete",{"_index":883,"title":{},"body":{"injectables/SpecialtiesService.html":{}}}],["this.prisma.specialtie.findmany",{"_index":739,"title":{},"body":{"injectables/ResultService.html":{}}}],["this.prisma.specialtie.findmany().catch(handleerror",{"_index":879,"title":{},"body":{"injectables/SpecialtiesService.html":{}}}],["this.prisma.test",{"_index":960,"title":{},"body":{"injectables/TestService.html":{}}}],["this.prisma.test.delete",{"_index":965,"title":{},"body":{"injectables/TestService.html":{}}}],["this.prisma.test.findmany().catch(handleerror",{"_index":961,"title":{},"body":{"injectables/TestService.html":{}}}],["this.prisma.user",{"_index":1112,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.user.findmany",{"_index":766,"title":{},"body":{"injectables/ResultService.html":{},"injectables/UserService.html":{}}}],["this.prisma.user.findunique",{"_index":184,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/ResultService.html":{},"injectables/UserService.html":{}}}],["this.prisma.user.update",{"_index":196,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["this.resultservice.create(user",{"_index":699,"title":{},"body":{"controllers/ResultController.html":{}}}],["this.resultservice.findall(user",{"_index":701,"title":{},"body":{"controllers/ResultController.html":{}}}],["this.resultservice.findone(id",{"_index":704,"title":{},"body":{"controllers/ResultController.html":{}}}],["this.resultservice.remove(id,user",{"_index":709,"title":{},"body":{"controllers/ResultController.html":{}}}],["this.resultservice.update(id",{"_index":707,"title":{},"body":{"controllers/ResultController.html":{}}}],["this.specialty.create(dto",{"_index":855,"title":{},"body":{"controllers/SpecialtiesController.html":{}}}],["this.specialty.findall(user",{"_index":856,"title":{},"body":{"controllers/SpecialtiesController.html":{}}}],["this.specialty.findone(id",{"_index":857,"title":{},"body":{"controllers/SpecialtiesController.html":{}}}],["this.specialty.remove(id",{"_index":860,"title":{},"body":{"controllers/SpecialtiesController.html":{}}}],["this.specialty.update(id",{"_index":859,"title":{},"body":{"controllers/SpecialtiesController.html":{}}}],["this.testservice.create(dto,user",{"_index":939,"title":{},"body":{"controllers/TestController.html":{}}}],["this.testservice.findall(user",{"_index":942,"title":{},"body":{"controllers/TestController.html":{}}}],["this.testservice.remove(id,user",{"_index":946,"title":{},"body":{"controllers/TestController.html":{}}}],["this.testservice.update(id,dto,user",{"_index":944,"title":{},"body":{"controllers/TestController.html":{}}}],["this.userservice.changepassword(id",{"_index":1065,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.create(createuserdto",{"_index":1056,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findall(user",{"_index":1066,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findone(email",{"_index":1069,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.remove(email",{"_index":1075,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.sendemailforgotpassword(email",{"_index":1062,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.update(email",{"_index":1072,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.verifyuseremail(id",{"_index":1059,"title":{},"body":{"controllers/UserController.html":{}}}],["those",{"_index":1418,"title":{},"body":{"license.html":{}}}],["through",{"_index":842,"title":{},"body":{"controllers/SpecialtiesController.html":{}}}],["throw",{"_index":185,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/ResultService.html":{},"injectables/SpecialtiesService.html":{},"injectables/TestService.html":{},"injectables/UserService.html":{}}}],["time",{"_index":376,"title":{},"body":{"classes/CreateTestDto.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["timely",{"_index":1540,"title":{},"body":{"license.html":{}}}],["times",{"_index":456,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["times/produtos",{"_index":544,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["tipos",{"_index":388,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["title",{"_index":336,"title":{},"body":{"classes/CreateTestDto.html":{},"classes/Test.html":{},"miscellaneous/variables.html":{}}}],["title:'proeficiencia",{"_index":1804,"title":{},"body":{"miscellaneous/variables.html":{}}}],["title?:string",{"_index":908,"title":{},"body":{"classes/Test.html":{}}}],["todo",{"_index":474,"title":{},"body":{"classes/CreateTestDto.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["todos",{"_index":491,"title":{},"body":{"classes/CreateTestDto.html":{},"injectables/ResultService.html":{},"miscellaneous/variables.html":{}}}],["token",{"_index":99,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginResponseDto.html":{},"injectables/UserService.html":{}}}],["token:${tokentourl",{"_index":1133,"title":{},"body":{"injectables/UserService.html":{}}}],["tokencrypt",{"_index":1122,"title":{},"body":{"injectables/UserService.html":{}}}],["tokentourl",{"_index":1126,"title":{},"body":{"injectables/UserService.html":{}}}],["tooling",{"_index":286,"title":{},"body":{"classes/CreateResultDto.html":{}}}],["toolshop",{"_index":269,"title":{},"body":{"classes/CreateResultDto.html":{},"classes/CreateTestDto.html":{},"classes/Test.html":{},"injectables/TestService.html":{},"miscellaneous/variables.html":{}}}],["toolshop:string",{"_index":913,"title":{},"body":{"classes/Test.html":{}}}],["tort",{"_index":1678,"title":{},"body":{"license.html":{}}}],["tostring",{"_index":1125,"title":{},"body":{"injectables/UserService.html":{}}}],["tostring(crypto.enc.utf8",{"_index":1146,"title":{},"body":{"injectables/UserService.html":{}}}],["totaldiff",{"_index":753,"title":{},"body":{"injectables/ResultService.html":{}}}],["trademark",{"_index":1456,"title":{},"body":{"license.html":{}}}],["trademarks",{"_index":1495,"title":{},"body":{"license.html":{}}}],["trainee",{"_index":316,"title":{},"body":{"classes/CreateSpecialtyDto.html":{}}}],["transfer",{"_index":1408,"title":{},"body":{"license.html":{}}}],["transformer",{"_index":1202,"title":{},"body":{"dependencies.html":{}}}],["transporter",{"_index":782,"title":{},"body":{"injectables/ResultService.html":{},"injectables/UserService.html":{}}}],["transporter.sendmail(maildata",{"_index":802,"title":{},"body":{"injectables/ResultService.html":{},"injectables/UserService.html":{}}}],["true",{"_index":407,"title":{},"body":{"classes/CreateTestDto.html":{},"injectables/ResultService.html":{},"injectables/TestService.html":{},"injectables/UserService.html":{}}}],["true})@isarray()@arrayminsize(3)@apiproperty({description",{"_index":338,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["true})@isarray()@arrayminsize(5)@apiproperty({description",{"_index":363,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["try",{"_index":816,"title":{},"body":{"injectables/ResultService.html":{},"injectables/UserService.html":{}}}],["type",{"_index":104,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateResultDto.html":{},"classes/CreateSpecialtyDto.html":{},"classes/CreateTestDto.html":{},"classes/CreateUserDto.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"injectables/PrismaService.html":{},"classes/Result.html":{},"controllers/ResultController.html":{},"injectables/ResultService.html":{},"controllers/SpecialtiesController.html":{},"injectables/SpecialtiesService.html":{},"classes/Specialty.html":{},"classes/Test.html":{},"controllers/TestController.html":{},"injectables/TestService.html":{},"classes/UpdateResultDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["typescript",{"_index":1287,"title":{},"body":{"index.html":{}}}],["técnicas",{"_index":437,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["técnicos",{"_index":425,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["título",{"_index":394,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["ui",{"_index":1218,"title":{},"body":{"dependencies.html":{}}}],["um",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateTestDto.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["uma",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateTestDto.html":{},"controllers/UserController.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["unauthorizedexception",{"_index":175,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}}}],["unauthorizedexception('invalid",{"_index":187,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["unauthorizedexception('user",{"_index":190,"title":{},"body":{"injectables/AuthService.html":{}}}],["undefined",{"_index":203,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateTestDto.html":{},"injectables/ResultService.html":{},"miscellaneous/functions.html":{}}}],["under",{"_index":1363,"title":{},"body":{"license.html":{}}}],["understand",{"_index":1602,"title":{},"body":{"license.html":{}}}],["unenforceable",{"_index":1733,"title":{},"body":{"license.html":{}}}],["unitário",{"_index":506,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["unknown",{"_index":596,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/ResultService.html":{},"injectables/SpecialtiesService.html":{},"injectables/TestService.html":{},"injectables/UserService.html":{}}}],["unless",{"_index":1610,"title":{},"body":{"license.html":{}}}],["unlicensed",{"_index":1778,"title":{},"body":{"properties.html":{}}}],["unmodified",{"_index":1464,"title":{},"body":{"license.html":{}}}],["unprocessableentityexception",{"_index":873,"title":{},"body":{"injectables/SpecialtiesService.html":{},"injectables/TestService.html":{}}}],["unprocessableentityexception('usuário",{"_index":877,"title":{},"body":{"injectables/SpecialtiesService.html":{},"injectables/TestService.html":{}}}],["until",{"_index":1611,"title":{},"body":{"license.html":{}}}],["update",{"_index":667,"title":{},"body":{"controllers/ResultController.html":{},"injectables/ResultService.html":{},"controllers/SpecialtiesController.html":{},"injectables/SpecialtiesService.html":{},"controllers/TestController.html":{},"injectables/TestService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["update(@param('id",{"_index":706,"title":{},"body":{"controllers/ResultController.html":{},"controllers/TestController.html":{}}}],["update(email",{"_index":1030,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["update(id",{"_index":683,"title":{},"body":{"controllers/ResultController.html":{},"injectables/ResultService.html":{},"controllers/SpecialtiesController.html":{},"injectables/SpecialtiesService.html":{},"controllers/TestController.html":{},"injectables/TestService.html":{}}}],["updatedat",{"_index":296,"title":{},"body":{"classes/CreateSpecialtyDto.html":{},"classes/Result.html":{},"classes/Specialty.html":{},"classes/Test.html":{},"injectables/TestService.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["updatedat:date",{"_index":917,"title":{},"body":{"classes/Test.html":{}}}],["updateresultdto",{"_index":684,"title":{"classes/UpdateResultDto.html":{}},"body":{"controllers/ResultController.html":{},"injectables/ResultService.html":{},"classes/UpdateResultDto.html":{},"coverage.html":{}}}],["updatespecialtydto",{"_index":846,"title":{"classes/UpdateSpecialtyDto.html":{}},"body":{"controllers/SpecialtiesController.html":{},"injectables/SpecialtiesService.html":{},"classes/UpdateSpecialtyDto.html":{},"coverage.html":{}}}],["updatetestdto",{"_index":928,"title":{"classes/UpdateTestDto.html":{}},"body":{"controllers/TestController.html":{},"injectables/TestService.html":{},"classes/UpdateTestDto.html":{},"coverage.html":{}}}],["updatetestdto,@loggeduser",{"_index":943,"title":{},"body":{"controllers/TestController.html":{}}}],["updateuserdto",{"_index":240,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/ChangePasswordDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["uploadedfiles",{"_index":1047,"title":{},"body":{"controllers/UserController.html":{}}}],["uploadfile",{"_index":1005,"title":{},"body":{"controllers/UserController.html":{}}}],["uploadfile(@uploadedfiles",{"_index":1078,"title":{},"body":{"controllers/UserController.html":{}}}],["uploadfile(file",{"_index":1034,"title":{},"body":{"controllers/UserController.html":{}}}],["url",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"injectables/UserService.html":{}}}],["use",{"_index":1457,"title":{},"body":{"license.html":{}}}],["used",{"_index":1337,"title":{},"body":{"license.html":{}}}],["useguards",{"_index":122,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ResultController.html":{},"controllers/SpecialtiesController.html":{},"controllers/TestController.html":{},"controllers/UserController.html":{}}}],["useguards(authguard",{"_index":142,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ResultController.html":{},"controllers/SpecialtiesController.html":{},"controllers/TestController.html":{},"controllers/UserController.html":{}}}],["useguards(undefined)@apibearerauth()@delete(':email')@apioperation({summary",{"_index":1022,"title":{},"body":{"controllers/UserController.html":{}}}],["useguards(undefined)@apibearerauth()@get(':email')@apioperation({summary",{"_index":1018,"title":{},"body":{"controllers/UserController.html":{}}}],["useguards(undefined)@apibearerauth()@get()@apioperation({summary",{"_index":1014,"title":{},"body":{"controllers/UserController.html":{}}}],["useguards(undefined)@apibearerauth()@patch(':email')@apioperation({summary",{"_index":1031,"title":{},"body":{"controllers/UserController.html":{}}}],["useguards(undefined)@apibearerauth()@post('upload')@apioperation({summary",{"_index":1035,"title":{},"body":{"controllers/UserController.html":{}}}],["useinterceptors",{"_index":1048,"title":{},"body":{"controllers/UserController.html":{}}}],["useinterceptors(fileinterceptor('file",{"_index":1077,"title":{},"body":{"controllers/UserController.html":{}}}],["user",{"_index":108,"title":{"classes/User.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"controllers/ResultController.html":{},"injectables/ResultService.html":{},"controllers/SpecialtiesController.html":{},"injectables/SpecialtiesService.html":{},"controllers/TestController.html":{},"injectables/TestService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["user'})@useguards(undefined)@apibearerauth",{"_index":112,"title":{},"body":{"controllers/AuthController.html":{}}}],["user.controller",{"_index":1084,"title":{},"body":{"modules/UserModule.html":{}}}],["user.decorator",{"_index":135,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ResultController.html":{},"controllers/SpecialtiesController.html":{},"controllers/TestController.html":{},"controllers/UserController.html":{}}}],["user.decorator.ts",{"_index":1174,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.dto",{"_index":239,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["user.dto.ts",{"_index":207,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:19",{"_index":580,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:23",{"_index":984,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:27",{"_index":575,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:33",{"_index":982,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:40",{"_index":581,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:47",{"_index":572,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:48",{"_index":228,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["user.dto.ts:55",{"_index":212,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["user.email",{"_index":828,"title":{},"body":{"injectables/ResultService.html":{},"injectables/UserService.html":{}}}],["user.id",{"_index":198,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["user.isverified",{"_index":189,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["user.password",{"_index":194,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"miscellaneous/variables.html":{}}}],["user.resettoken",{"_index":1137,"title":{},"body":{"injectables/UserService.html":{}}}],["user.results",{"_index":1158,"title":{},"body":{"injectables/UserService.html":{}}}],["user.results.sort((a",{"_index":1159,"title":{},"body":{"injectables/UserService.html":{}}}],["user.service",{"_index":1050,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["user.team",{"_index":773,"title":{},"body":{"injectables/ResultService.html":{}}}],["user.ts",{"_index":1182,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user/user.module",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["user:user",{"_index":622,"title":{},"body":{"classes/LoginResponseDto.html":{},"controllers/ResultController.html":{},"controllers/TestController.html":{}}}],["usercontroller",{"_index":1001,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userid",{"_index":648,"title":{},"body":{"classes/Result.html":{},"injectables/ResultService.html":{}}}],["usermodule",{"_index":61,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["users",{"_index":1015,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userservice",{"_index":1049,"title":{"injectables/UserService.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["using",{"_index":1404,"title":{},"body":{"license.html":{}}}],["usuário",{"_index":115,"title":{},"body":{"controllers/AuthController.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateUserDto.html":{},"injectables/ResultService.html":{},"classes/UpdateResultDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{}}}],["usuário'})@useinterceptors(undefined",{"_index":1040,"title":{},"body":{"controllers/UserController.html":{}}}],["usuários",{"_index":255,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/UpdateUserDto.html":{},"injectables/UserService.html":{}}}],["utilizando",{"_index":1257,"title":{},"body":{"index.html":{}}}],["utilize",{"_index":1281,"title":{},"body":{"index.html":{}}}],["v",{"_index":1759,"title":{},"body":{"license.html":{}}}],["validate",{"_index":590,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":592,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validator",{"_index":236,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateResultDto.html":{},"classes/CreateSpecialtyDto.html":{},"classes/CreateTestDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/UpdateResultDto.html":{},"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["validly",{"_index":1652,"title":{},"body":{"license.html":{}}}],["value",{"_index":1787,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":1175,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1780,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["veja",{"_index":1316,"title":{},"body":{"index.html":{}}}],["vercel",{"_index":1277,"title":{},"body":{"index.html":{}}}],["verificar",{"_index":775,"title":{},"body":{"injectables/ResultService.html":{}}}],["verified",{"_index":191,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["verify",{"_index":1045,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["verifyuseremail",{"_index":1006,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["verifyuseremail(@param('id",{"_index":1058,"title":{},"body":{"controllers/UserController.html":{}}}],["verifyuseremail(id",{"_index":1043,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["version",{"_index":1314,"title":{},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["versions",{"_index":1417,"title":{},"body":{"license.html":{}}}],["vertente",{"_index":356,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["view",{"_index":1019,"title":{},"body":{"controllers/UserController.html":{}}}],["vitor",{"_index":1297,"title":{},"body":{"index.html":{}}}],["voc",{"_index":409,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["void",{"_index":1042,"title":{},"body":{"controllers/UserController.html":{}}}],["want",{"_index":1752,"title":{},"body":{"license.html":{}}}],["warranties",{"_index":1658,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1557,"title":{},"body":{"license.html":{}}}],["whether",{"_index":1384,"title":{},"body":{"license.html":{}}}],["wide",{"_index":1449,"title":{},"body":{"license.html":{}}}],["within",{"_index":1560,"title":{},"body":{"license.html":{}}}],["without",{"_index":1398,"title":{},"body":{"license.html":{}}}],["work",{"_index":1367,"title":{},"body":{"license.html":{}}}],["world",{"_index":1448,"title":{},"body":{"license.html":{}}}],["yarn",{"_index":1247,"title":{},"body":{"index.html":{}}}],["z",{"_index":215,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["z])(?=.*[a",{"_index":214,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["zoom",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/ResultModule.html":{},"modules/SpecialtiesModule.html":{},"modules/TestModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAppStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAppStatus\n                        \n                    \n                \n            \n            \n                \ngetAppStatus()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:17\n                \n            \n\n\n            \n                \n                    Recebe uma requisição GET e retorna um objeto de status\nda aplicação com a URL de documentação\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        Objeto de status da aplicação\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport { AppService } from './app.service';\n\n@ApiTags('Status')\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  /**\n\t * Recebe uma requisição GET e retorna um objeto de status\n\t * da aplicação com a URL de documentação\n\t * @param req Objeto de Request do Express\n\t * @returns Objeto de status da aplicação\n\t */\n  @Get()\n  getAppStatus(): string {\n    return this.appService.getAppStatus();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nResultModule\n\nResultModule\n\nAppModule -->\n\nResultModule->AppModule\n\n\n\n\n\nSpecialtiesModule\n\nSpecialtiesModule\n\nAppModule -->\n\nSpecialtiesModule->AppModule\n\n\n\n\n\nTestModule\n\nTestModule\n\nAppModule -->\n\nTestModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            PrismaModule\n                        \n                        \n                            ResultModule\n                        \n                        \n                            SpecialtiesModule\n                        \n                        \n                            TestModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { AuthModule } from './auth/auth.module';\nimport { PrismaModule } from './prisma/prisma.module';\nimport { UserModule } from './user/user.module';\nimport { SpecialtiesModule } from './specialties/specialties.module';\nimport { TestModule } from './Test-crud/test.module';\nimport { ResultModule } from './result/result.module';\n\n@Module({\n  imports: [PrismaModule, UserModule, AuthModule,TestModule,SpecialtiesModule, ResultModule],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAppStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAppStatus\n                        \n                    \n                \n            \n            \n                \ngetAppStatus()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getAppStatus(): string {\n    return 'Server is running! 🚀\\n Please check http://localhost:3333/api for Swagger docs...';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                            \n                                profile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(loginDto: LoginDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@HttpCode(HttpStatus.OK)@ApiOperation({summary: 'Login receiving a token for authentication'})\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loginDto\n                                    \n                                                LoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        Token\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profile\n                        \n                    \n                \n            \n            \n                \nprofile(user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Returns the currently authenticated user'})@UseGuards(undefined)@ApiBearerAuth()\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { message: string; }\n\n                    \n                    \n                        message: Usuário autenticado com sucesso!\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Post,\n  HttpCode,\n  HttpStatus,\n  Get,\n  UseGuards,\n} from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { ApiBearerAuth, ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { User } from 'src/user/entities/user.entity';\nimport { AuthService } from './auth.service';\nimport { LoginDto } from './dto/login.dto';\nimport { LoginResponseDto } from './dto/login.response.dto';\nimport { LoggedUser } from './logged-user.decorator';\n\n@ApiTags('Auth')\n@Controller('auth')\nexport class AuthController {\n  constructor(private readonly authService: AuthService) {}\n\n  /**\n\t * @param req\n\t * @returns Token\n\t */\n  @Post()\n  @HttpCode(HttpStatus.OK)\n  @ApiOperation({\n    summary: 'Login receiving a token for authentication',\n  })\n  login(@Body() loginDto: LoginDto): Promise {\n    return this.authService.login(loginDto);\n  }\n\n  /**\n\t * @param req\n\t * @returns message: Usuário autenticado com sucesso!\n\t */\n  @Get()\n  @ApiOperation({\n    summary: 'Returns the currently authenticated user'\n  })\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth()\n  profile(@LoggedUser() user: User) {\n    return {message:`${user.name} successfully logged in!`};;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nPrismaModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { AuthController } from './auth.controller';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { JwtModule } from '@nestjs/jwt';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtStrategy } from './jwt.strategy';\n\n@Module({\n  imports: [\n    PrismaModule,\n    PassportModule.register({ defaultStrategy: 'jwt'}),\n    JwtModule.register({\n      secret: process.env.JWT_SECRET,\n      signOptions: { expiresIn: '24h' }\n    })],\n  controllers: [AuthController],\n  providers: [AuthService, JwtStrategy]\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(loginDto: LoginDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loginDto\n                                    \n                                                LoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { PrismaService } from '../prisma/prisma.service';\nimport { LoginDto } from './dto/login.dto';\nimport { LoginResponseDto } from './dto/login.response.dto';\nimport * as bcrypt from 'bcrypt';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private readonly prisma: PrismaService,\n    private readonly jwtService: JwtService,\n  ) {}\n\n  async login(loginDto: LoginDto): Promise {\n    const { email, password } = loginDto;\n    console.log(`dto.. ${email} - ${password}`);\n\n    const user = await this.prisma.user.findUnique({ where: { email } });\n\n    if (!user) {\n      throw new UnauthorizedException('Invalid email and/or password');\n    }\n\n    if (!user.isVerified) {\n      throw new UnauthorizedException('User not verified');\n    }\n\n    const isHashValid = await bcrypt.compare(password, user.password);\n    if (!isHashValid) {\n      throw new UnauthorizedException('Invalid email and/or password');\n    }\n\n    delete user.password;\n\n    await this.prisma.user.update({\n      where: { id: user.id },\n      data: { resetToken: null },\n    });\n\n    return {\n      token: this.jwtService.sign({ email }),\n      user: undefined,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ChangePasswordDto.html":{"url":"classes/ChangePasswordDto.html","title":"class - ChangePasswordDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ChangePasswordDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/update-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                confirmPassword\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        confirmPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty({example: 'Petlove@123'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/update-user.dto.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @MinLength(6)@IsString()@Matches(/((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/, {message: 'senha muito fraca'})@IsNotEmpty()@ApiProperty({description: 'Senha do usuário. Requer letras maiúsculas e minúsculas, números ou caracteres especiais', example: 'Petlove@123'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/update-user.dto.ts:48\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport {\n  MinLength,\n  IsString,\n  Matches,\n  IsNotEmpty,\n  IsOptional,\n} from 'class-validator';\nimport { CreateUserDto } from './create-user.dto';\n\nexport class UpdateUserDto extends PartialType(CreateUserDto) {\n  @MinLength(6)\n  @IsString()\n  @Matches(/((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/, {\n    message: 'senha muito fraca',\n  })\n  @IsOptional()\n  @ApiProperty({\n    description:\n      'Senha do usuário. Requer letras maiúsculas e minúsculas, números ou caracteres especiais',\n    example: 'Petlove@123',\n  })\n  newPassword: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @IsOptional()\n  @ApiProperty({\n    description:\n      'define qual notificação de email o usuário receberá (somente para usuários com papel de administrador)',\n    example: 'team',\n  })\n  emailNotification: 'none' | 'team' | 'all';\n}\n\nexport class ChangePasswordDto {\n  @MinLength(6)\n  @IsString()\n  @Matches(/((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/, {\n    message: 'senha muito fraca',\n  })\n  @IsNotEmpty()\n  @ApiProperty({\n    description:\n      'Senha do usuário. Requer letras maiúsculas e minúsculas, números ou caracteres especiais',\n    example: 'Petlove@123',\n  })\n  password: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({\n    example: 'Petlove@123',\n  })\n  confirmPassword: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateResultDto.html":{"url":"classes/CreateResultDto.html","title":"class - CreateResultDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateResultDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/result/dto/create-result.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                computationalFundamentals\n                            \n                            \n                                design\n                            \n                            \n                                person\n                            \n                            \n                                process\n                            \n                            \n                                system\n                            \n                            \n                                test\n                            \n                            \n                                toolshop\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        computationalFundamentals\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@ApiProperty({description: 'Result for the category Computational Fundamentals', example: 4})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/result/dto/create-result.dto.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        design\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@ApiProperty({description: 'result for the design category', example: 2})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/result/dto/create-result.dto.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        person\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@ApiProperty({description: 'Person test result', example: 3})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/result/dto/create-result.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        process\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@ApiProperty({description: 'Process test result', example: 5})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/result/dto/create-result.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        system\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@ApiProperty({description: 'System test result', example: 2})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/result/dto/create-result.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        test\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@ApiProperty({description: 'result for the test category', example: 4})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/result/dto/create-result.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toolshop\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@ApiProperty({description: 'result for the tooling category', example: 3})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/result/dto/create-result.dto.ts:45\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNumber } from 'class-validator';\n\nexport class CreateResultDto {\n  @IsNumber()\n  @ApiProperty({\n    description: 'System test result',\n    example: 2,\n  })\n  system: number;\n\n  @IsNumber()\n  @ApiProperty({\n    description: 'Person test result',\n    example: 3,\n  })\n  person: number;\n\n  @IsNumber()\n  @ApiProperty({\n    description: 'result for the test category',\n    example: 4,\n  })\n  test: number;\n\n  @IsNumber()\n  @ApiProperty({\n    description: 'Process test result',\n    example: 5,\n  })\n  process: number;\n\n  @IsNumber()\n  @ApiProperty({\n    description: 'result for the design category',\n    example: 2,\n  })\n  design: number;\n\n  @IsNumber()\n  @ApiProperty({\n    description: 'result for the tooling category',\n    example: 3,\n  })\n  toolshop: number;\n\n  @IsNumber()\n  @ApiProperty({\n    description: 'Result for the category Computational Fundamentals',\n    example: 4,\n  })\n  computationalFundamentals: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateSpecialtyDto.html":{"url":"classes/CreateSpecialtyDto.html","title":"class - CreateSpecialtyDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateSpecialtyDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/specialties/dto/create-specialty.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                description\n                            \n                            \n                                influence\n                            \n                            \n                                performance\n                            \n                            \n                                person\n                            \n                            \n                                process\n                            \n                            \n                                system\n                            \n                            \n                                technology\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/specialties/dto/create-specialty.dto.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'Description of the specialty', example: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit.'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/specialties/dto/create-specialty.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        influence\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber({maxDecimalPlaces: 2})@ApiProperty({description: 'Influence score', example: 2})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/specialties/dto/create-specialty.dto.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        performance\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'Professional level (Trainee, Junior, Pleno, Senior, Especialista, Tech-lead)', example: 'Junior'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/specialties/dto/create-specialty.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        person\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber({maxDecimalPlaces: 2})@ApiProperty({description: 'Persons score', example: 3})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/specialties/dto/create-specialty.dto.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        process\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber({maxDecimalPlaces: 2})@ApiProperty({description: 'Process score', example: 5})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/specialties/dto/create-specialty.dto.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        system\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber({maxDecimalPlaces: 2})@ApiProperty({description: 'Systems score', example: 2})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/specialties/dto/create-specialty.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        technology\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber({maxDecimalPlaces: 2})@ApiProperty({description: 'technology score', example: 4})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/specialties/dto/create-specialty.dto.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/specialties/dto/create-specialty.dto.ts:66\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNumber, IsString } from 'class-validator';\n\nexport class CreateSpecialtyDto {\n  @IsString()\n  @ApiProperty({\n    description:\n      'Professional level (Trainee, Junior, Pleno, Senior, Especialista, Tech-lead)',\n    example: 'Junior',\n  })\n  performance: string;\n\n  @IsString()\n  @ApiProperty({\n    description: 'Description of the specialty',\n    example: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit.',\n  })\n  description: string;\n\n  @IsNumber({\n    maxDecimalPlaces: 2,\n  })\n  @ApiProperty({\n    description: 'Systems score',\n    example: 2,\n  })\n  system: number;\n\n  @IsNumber({\n    maxDecimalPlaces: 2,\n  })\n  @ApiProperty({\n    description: 'Persons score',\n    example: 3,\n  })\n  person: number;\n\n  @IsNumber({\n    maxDecimalPlaces: 2,\n  })\n  @ApiProperty({\n    description: 'technology score',\n    example: 4,\n  })\n  technology: number;\n\n  @IsNumber({\n    maxDecimalPlaces: 2,\n  })\n  @ApiProperty({\n    description: 'Process score',\n    example: 5,\n  })\n  process: number;\n\n  @IsNumber({\n    maxDecimalPlaces: 2,\n  })\n  @ApiProperty({\n    description: 'Influence score',\n    example: 2,\n  })\n  influence: number;\n\n  createdAt: Date;\n  updatedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTestDto.html":{"url":"classes/CreateTestDto.html","title":"class - CreateTestDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTestDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Test-crud/dto/create-test.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                computationalFundamentals\n                            \n                            \n                                design\n                            \n                            \n                                person\n                            \n                            \n                                process\n                            \n                            \n                                system\n                            \n                            \n                                test\n                            \n                            \n                                title\n                            \n                            \n                                toolshop\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        computationalFundamentals\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString({each: true})@IsArray()@ArrayMinSize(3)@ApiProperty({description: 'A capacidade da pessoa em estabelecer e difundir os fundamentos computacionais e, através deles, melhorar a qualidade do código são os atributos buscados nessa vertente.', example: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Test-crud/dto/create-test.dto.ts:112\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        design\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString({each: true})@IsArray()@ArrayMinSize(3)@ApiProperty({description: 'Abrangerá os princípios de Design de cada chapter.', example: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Test-crud/dto/create-test.dto.ts:85\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        person\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString({each: true})@IsArray()@ArrayMinSize(5)@ApiProperty({description: 'Relacionamento da pessoa com outros dentro e fora da sua squad.', example: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Test-crud/dto/create-test.dto.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        process\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString({each: true})@IsArray()@ArrayMinSize(5)@ApiProperty({description: 'Nível de engajamento da pessoa com os processos definidos pelo time de tecnologia.', example: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Test-crud/dto/create-test.dto.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        system\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString({each: true})@IsArray()@ArrayMinSize(5)@ApiProperty({description: 'Conhecimento sistêmico da empresa. A capacidade da pessoa em conhecer e impactar os sistemas de tecnologia.', example: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Test-crud/dto/create-test.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        test\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString({each: true})@IsArray()@ArrayMinSize(3)@ApiProperty({description: 'A importância de testes e os tipos de testes são as coisas buscadas nesses níveis.', example: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Test-crud/dto/create-test.dto.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'Título do teste', example: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Test-crud/dto/create-test.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toolshop\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString({each: true})@IsArray()@ArrayMinSize(3)@ApiProperty({description: 'Abordará temas como CI/CD e Código Limpo.', example: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Test-crud/dto/create-test.dto.ts:98\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { ArrayMinSize, IsArray, IsString } from 'class-validator';\n\nexport class CreateTestDto {\n  @IsString()\n  @ApiProperty({\n    description: 'Título do teste',\n    example: ['Teste de Proficiência'],\n  })\n  title: string;\n\n  @IsString({ each: true })\n  @IsArray()\n  @ArrayMinSize(5)\n  @ApiProperty({\n    description:\n      'Conhecimento sistêmico da empresa. A capacidade da pessoa em conhecer e impactar os sistemas de tecnologia.',\n    example: [\n      'Você é capaz de implementar features simples e resolver pequenos bugs dentro da sua squad?',\n      'Você desenha e implementa soluções de média e alta complexidade reduzindo débitos técnicos do time?',\n      'Você é capaz de subir e controlar sistemas em produção e também monitora a qualidade olhando para SLAs?',\n      'Você desenvolve arquitetura para futuras soluções e define SLAs?',\n      'Você lidera as soluções técnicas com excelência e cria planos de contingências?',\n    ],\n  })\n  system: string[];\n\n  @IsString({ each: true })\n  @IsArray()\n  @ArrayMinSize(5)\n  @ApiProperty({\n    description:\n      'Relacionamento da pessoa com outros dentro e fora da sua squad.',\n    example: [\n      'Você está sempre aprendendo com os outros e estuda mais quando necessário?',\n      'Você sempre ajuda as pessoas do seu time a terem sucesso em seus desafios',\n      'Você organiza times, promove feedbacks e intermedeia discussões',\n      'Você mentora outros em seu desenvolvimento e já foi coach na construção de PDI',\n      'Você gerencia carreiras, expectativas, performances e nível de engajamento do seu time',\n    ],\n  })\n  person: string[];\n\n  @IsString({ each: true })\n  @IsArray()\n  @ArrayMinSize(5)\n  @ApiProperty({\n    description:\n      'Nível de engajamento da pessoa com os processos definidos pelo time de tecnologia.',\n    example: [\n      'Você segue todo o flow (git, CI/CD, Jira..) de desenvolvimento entregando features consistentes em produção?',\n      'Você sugere mudanças nos flows com consistência, sempre procurando caminhos para melhorar',\n      'Você sempre chama o time para reavaliar os flows, garantindo que todos entendam os benefícios e impactos',\n      'Você é o responsável por ajustar os flows do time, escutando feedbacks e guiando através das mudanças',\n      'Você define os flows baseado na maturidade, agilidade e disciplina do time',\n    ],\n  })\n  process: string[];\n\n  @IsString({ each: true })\n  @IsArray()\n  @ArrayMinSize(3)\n  @ApiProperty({\n    description:\n      'A importância de testes e os tipos de testes são as coisas buscadas nesses níveis.',\n    example: [\n      'Você implementa teste unitário e também testa a sua solução manualmente considerando as definições do produto?',\n      'Você simula comportamentos dos clientes no seu desenvolvimento, testa além do caminho feliz e analisa o impacto das mudanças',\n      'Você implementa teste e2e, de integração que permita avaliar e monitorar o produto',\n    ],\n  })\n  test: string;\n\n  @IsString({ each: true })\n  @IsArray()\n  @ArrayMinSize(3)\n  @ApiProperty({\n    description: 'Abrangerá os princípios de Design de cada chapter.',\n    example: [\n      'Você conhece e aplica os princípios do S.O.L.I.D (Ou algum outro pattern definido pelo seu chapter Manager) no seu código?',\n      'Você conhece e aplica pelo menos outros 3 princípios de pattern no seu código e ajuda seus colegas de time a escolherem qual o melhor para a solução do problema',\n      'Você já ajudou a definir padrões de projetos de times/produtos fora do seu time',\n    ],\n  })\n  design: string[];\n\n  @IsString({ each: true })\n  @IsArray()\n  @ArrayMinSize(3)\n  @ApiProperty({\n    description: 'Abordará temas como CI/CD e Código Limpo.',\n    example: [\n      'Você conhece o conceito de código limpo (link)? Aplica o conceito em pelo menos 50% do seu código? Conhece e desenvolve seguindo os nossos processos de CI/CD?https://petlove.atlassian.net/wiki/spaces/TEC/pages/351666200/Playbook',\n      'Você Constrói códigos modulares e segue os conceitos de código limpo em 80% do seu código?',\n      'Você ajuda a definir processos de CI/CD do seu time e da sua área? Ensina seus colegas a importância de um código limpo e cobra isso nos PRs que revisa?',\n    ],\n  })\n  toolshop: string[];\n\n  @IsString({ each: true })\n  @IsArray()\n  @ArrayMinSize(3)\n  @ApiProperty({\n    description:\n      'A capacidade da pessoa em estabelecer e difundir os fundamentos computacionais e, através deles, melhorar a qualidade do código são os atributos buscados nessa vertente.',\n    example: [\n      'Você Conhece e aplica estruturas de dados e multithreading?',\n      'Você consegue desenhar a arquitetura de um sistema de complexidade média a alta',\n      'Você consegue desenhar uma arquitetura multis sistêmica e para múltiplos times',\n    ],\n  })\n  computationalFundamentals: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                confirmPassword\n                            \n                            \n                                email\n                            \n                            \n                                name\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        confirmPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty({example: 'Petlove@123'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsEmail()@ApiProperty({description: 'Email do usuário', example: 'PetLove@gmail.com'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Length(15, 40)@IsString()@IsNotEmpty()@ApiProperty({description: 'Nome do usuário', example: 'Petlove'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @MinLength(6)@IsString()@Matches(/((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/, {message: 'senha muito fraca'})@IsNotEmpty()@ApiProperty({description: 'Senha do usuário. Requer letras maiúsculas e minúsculas, números ou caracteres especiais', example: 'Petlove@123'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:40\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {\n  IsEmail,\n  IsNotEmpty,\n  IsString,\n  Length,\n  Matches,\n  MinLength,\n} from 'class-validator';\n\nexport class CreateUserDto {\n  @Length(15, 40)\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({\n    description: 'Nome do usuário',\n    example: 'Petlove',\n  })\n  name: string;\n\n  @IsNotEmpty()\n  @IsEmail()\n  @ApiProperty({\n    description: 'Email do usuário',\n    example: 'PetLove@gmail.com',\n  })\n  email: string;\n\n  @MinLength(6)\n  @IsString()\n  @Matches(/((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/, {\n    message: 'senha muito fraca',\n  })\n  @IsNotEmpty()\n  @ApiProperty({\n    description:\n      'Senha do usuário. Requer letras maiúsculas e minúsculas, números ou caracteres especiais',\n    example: 'Petlove@123',\n  })\n  password: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({\n    example: 'Petlove@123',\n  })\n  confirmPassword: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JwtPayload.html":{"url":"interfaces/JwtPayload.html","title":"interface - JwtPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  JwtPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/entities/jwtChangePassword.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface JwtPayload {\n  id?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt.strategy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/jwt.strategy.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PrismaService } from 'src/prisma/prisma.service';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(private readonly prisma: PrismaService) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: process.env.JWT_SECRET,\n    });\n  }\n\n  async validate(payload: { email: string }) {\n    const user = await this.prisma.user.findUnique({\n      where: { email: payload.email },\n    });\n\n    if (!user) {\n      throw new UnauthorizedException(\n        'User does not exist or is not authenticated',\n      );\n    }\n\n    delete user.password;\n\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginDto.html":{"url":"classes/LoginDto.html","title":"class - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/login.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@IsEmail()@ApiProperty({description: 'User email', example: 'PetLove@gmail.com'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty({description: 'User password', example: 'Petlove@123'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login.dto.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { IsString, IsNotEmpty, IsEmail} from \"class-validator\";\n\nexport class LoginDto {\n\n  @IsString()\n  @IsNotEmpty()\n  @IsEmail()\n  @ApiProperty({\n    description: \"User email\",\n    example: \"PetLove@gmail.com\"\n  })\n  email: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({\n    description: \"User password\",\n    example: \"Petlove@123\"\n  })\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginResponseDto.html":{"url":"classes/LoginResponseDto.html","title":"class - LoginResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/login.response.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                token\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'JWT generated by login', example: 'AUTOMATICALLY GENERATED TOKEN'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login.response.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Authenticated user data'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login.response.dto.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { User } from \"src/user/entities/user.entity\";\n\nexport class LoginResponseDto {\n\n  @ApiProperty({\n    description: \"JWT generated by login\",\n    example: \"AUTOMATICALLY GENERATED TOKEN\"\n  })\n  token: string;\n\n  @ApiProperty({\n    description: \"Authenticated user data\",\n  })\n  user:User;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PrismaModule.html":{"url":"modules/PrismaModule.html","title":"module - PrismaModule","body":"\n                   \n\n\n\n\n    Modules\n    PrismaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_providers\n\n\n\ncluster_PrismaModule_exports\n\n\n\n\nPrismaService \n\nPrismaService \n\n\n\nPrismaModule\n\nPrismaModule\n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/prisma/prisma.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PrismaService } from './prisma.service';\n\n@Module({\n  providers: [PrismaService],\n  exports: [PrismaService],\n})\nexport class PrismaModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prisma/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    PrismaClient\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                homepage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                enableShutdownHooks\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        enableShutdownHooks\n                        \n                    \n                \n            \n            \n                \n                    \n                    enableShutdownHooks(app: INestApplication)\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n                                    \n                                            INestApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        homepage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/prisma/prisma.service.ts:6\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { INestApplication, Injectable, OnModuleInit } from '@nestjs/common';\nimport { PrismaClient } from '@prisma/client';\n\n@Injectable()\nexport class PrismaService extends PrismaClient implements OnModuleInit {\n  homepage: any;\n  async onModuleInit() {\n    await this.$connect();\n  }\n\n  async enableShutdownHooks(app: INestApplication) {\n    this.$on('beforeExit', async () => {\n      await app.close();\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Result.html":{"url":"classes/Result.html","title":"class - Result","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Result\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/result/entities/result.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                    Optional\n                                influence\n                            \n                            \n                                    Optional\n                                isValided\n                            \n                            \n                                nextRole\n                            \n                            \n                                person\n                            \n                            \n                                process\n                            \n                            \n                                system\n                            \n                            \n                                    Optional\n                                technology\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                            \n                                    Optional\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/result/entities/result.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/result/entities/result.entity.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        influence\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/result/entities/result.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        isValided\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"Sim\" | \"Não\"\n\n                    \n                \n                    \n                        \n                                Defined in src/result/entities/result.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nextRole\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/result/entities/result.entity.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        person\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/result/entities/result.entity.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        process\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/result/entities/result.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        system\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/result/entities/result.entity.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        technology\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/result/entities/result.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/result/entities/result.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/result/entities/result.entity.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Result {\n  id?: string;\n  nextRole: string;\n  system: number;\n  person: number;\n  process: number;\n  technology?: number;\n  influence?: number;\n  isValided?: 'Sim' | 'Não';\n  userId?: string;\n  createdAt?: Date;\n  updatedAt?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ResultController.html":{"url":"controllers/ResultController.html","title":"controller - ResultController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ResultController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/result/result.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                Result\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(user: User, dto: CreateResultDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Create test result'})\n                \n            \n\n            \n                \n                    Defined in src/result/result.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                CreateResultDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Result\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll(user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'List all results'})\n                \n            \n\n            \n                \n                    Defined in src/result/result.controller.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Results\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOperation({summary: 'To find a test result by id'})\n                \n            \n\n            \n                \n                    Defined in src/result/result.controller.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Result\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string, user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/result/result.controller.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        message: 'Result deleted successfully'\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, dto: UpdateResultDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiOperation({summary: 'To change data from a test performed'})\n                \n            \n\n            \n                \n                    Defined in src/result/result.controller.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                UpdateResultDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Result\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  UseGuards,\n} from '@nestjs/common';\nimport { ResultService } from './result.service';\nimport { CreateResultDto } from './dto/create-result.dto';\nimport { UpdateResultDto } from './dto/update-result.dto';\nimport { ApiBearerAuth, ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { LoggedUser } from 'src/auth/logged-user.decorator';\nimport { User } from 'src/user/entities/user.entity';\nimport { AuthGuard } from '@nestjs/passport';\n\n@ApiTags('Result')\n@UseGuards(AuthGuard())\n@ApiBearerAuth()\n@Controller('Result')\nexport class ResultController {\n  constructor(private readonly resultService: ResultService) {}\n\n    /**\n\t * @param req\n\t * @returns  Result\n\t */\n  @Post()\n  @ApiOperation({ summary: 'Create test result' })\n  create(@LoggedUser() user: User, @Body() dto: CreateResultDto) {\n    return this.resultService.create(user, dto);\n  }\n\n    /**\n\t * @param req\n\t * @returns  Results\n\t */\n  @Get()\n  @ApiOperation({ summary: 'List all results' })\n  findAll(@LoggedUser() user: User) {\n    return this.resultService.findAll(user);\n  }\n\n   /**\n\t * @param req\n\t * @returns Result\n\t */\n  @Get(':id')\n  @ApiOperation({ summary: 'To find a test result by id' })\n  findOne(@Param('id') id: string) {\n    return this.resultService.findOne(id);\n  }\n\n   /**\n\t * @param req\n\t * @returns  Result\n\t */\n  @Patch(':id')\n  @ApiOperation({ summary: 'To change data from a test performed' })\n  update(@Param('id') id: string, @Body() dto: UpdateResultDto) {\n    return this.resultService.update(id, dto);\n  }\n\n   /**\n\t * @param req\n\t * @returns message: 'Result deleted successfully'\n\t */\n  @Delete(':id')\n  remove(@Param('id') id: string, @LoggedUser() user:User) {\n    return this.resultService.remove(id,user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ResultModule.html":{"url":"modules/ResultModule.html","title":"module - ResultModule","body":"\n                   \n\n\n\n\n    Modules\n    ResultModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ResultModule\n\n\n\ncluster_ResultModule_providers\n\n\n\ncluster_ResultModule_imports\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nResultModule\n\nResultModule\n\nResultModule -->\n\nPrismaModule->ResultModule\n\n\n\n\n\nResultService\n\nResultService\n\nResultModule -->\n\nResultService->ResultModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/result/result.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ResultService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ResultController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ResultService } from './result.service';\nimport { ResultController } from './result.controller';\nimport { PassportModule } from '@nestjs/passport';\nimport { PrismaModule } from 'src/prisma/prisma.module';\n\n@Module({\n  imports: [PrismaModule, PassportModule.register({ defaultStrategy: 'jwt' })],\n  controllers: [ResultController],\n  providers: [ResultService]\n})\nexport class ResultModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ResultService.html":{"url":"injectables/ResultService.html","title":"injectable - ResultService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ResultService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/result/result.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/result/result.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(user: User, dto: CreateResultDto)\n                \n            \n\n\n            \n                \n                    Defined in src/result/result.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                CreateResultDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/result/result.service.ts:154\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/result/result.service.ts:176\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string, user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/result/result.service.ts:332\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, dto: UpdateResultDto)\n                \n            \n\n\n            \n                \n                    Defined in src/result/result.service.ts:195\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                UpdateResultDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  Injectable,\n  NotFoundException,\n} from '@nestjs/common';\nimport { Prisma } from '@prisma/client';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { User } from 'src/user/entities/user.entity';\nimport { handleError } from 'src/utils/handleError.utils';\nimport { isAdmin } from 'src/utils/isAdmin.utils';\nimport { CreateResultDto } from './dto/create-result.dto';\nimport { UpdateResultDto } from './dto/update-result.dto';\nimport * as nodemailer from 'nodemailer';\n\n@Injectable()\nexport class ResultService {\n  constructor(private readonly prisma: PrismaService) {}\n  async create(user: User, dto: CreateResultDto) {\n    const technology =\n      (dto.toolshop + dto.design + dto.test + dto.computationalFundamentals) *\n      (5 / 12);\n    const influence = (dto.system + dto.process + 2 * dto.person) / 4;\n\n    let nextRoleValue = undefined;\n\n    const specialtys = await this.prisma.specialtie.findMany();\n\n    if (specialtys.length === 0) {\n      throw new NotFoundException('Não existem especialidades cadastradas.');\n    }\n\n    const result = specialtys.map((specialy) => {\n      const { performance, system, person, technology, process, influence } =\n        specialy;\n      const systemDiff = system - dto.system;\n      const personDiff = person - dto.person;\n      const technologyDiff = technology - technology;\n      const processDiff = process - dto.process;\n      const influenceDiff = influence - influence;\n\n      const totalDiff =\n        Math.abs(systemDiff) +\n        Math.abs(personDiff) +\n        Math.abs(technologyDiff) +\n        Math.abs(processDiff) +\n        Math.abs(influenceDiff);\n      return { performance, totalDiff };\n    });\n\n    const near = result.reduce((prev, current) =>\n      prev.totalDiff  {\n        // enviar email para todos os administradores\n\n        const adms = await this.prisma.user.findMany({\n          where: {\n            isAdmin: true,\n          },\n          select: {\n            email: true,\n            emailNotification: true,\n            team: true,\n          },\n        });\n\n        const emails = adms.map((adm) => {\n          if (adm.emailNotification === 'all') {\n            return adm.email;\n          }\n\n          if (adm.emailNotification === 'team' && adm.team === user.team) {\n            return adm.email;\n          }\n\n          return null;\n        });\n\n        console.log(emails);\n\n        // verificar se todos do map retornaram null\n\n        const allNull = emails.every((email) => email === null);\n\n        if (allNull) {\n          return result;\n        }\n\n        console.log(allNull);\n\n        const transporter = nodemailer.createTransport({\n          host: 'smtp.gmail.com',\n          port: 587,\n          service: 'gmail',\n          auth: {\n            user: 'projetopetlover@gmail.com',\n            pass: 'skbfwjaibimleyou',\n          },\n        });\n\n        const mailData = {\n          from: 'Pet Love ',\n          to: emails,\n          subject: 'Novo teste realizado',\n          html: 'oi1 oi2',\n        };\n\n        transporter.sendMail(mailData, function (err, info) {\n          if (err) {\n            console.log(err);\n\n            throw new BadRequestException('Error sending email');\n          } else {\n            console.log(info);\n          }\n        });\n\n        return result;\n      })\n      .catch(handleError);\n  }\n\n  async findAll(user: User) {\n    isAdmin(user);\n    const allResults = await this.prisma.result.findMany({\n      select: {\n        id: true,\n        nextRole: true,\n        person: true,\n        process: true,\n        system: true,\n        technology: true,\n        influence: true,\n        createdAt: true,\n      },\n    });\n\n    if (allResults.length === 0) {\n      throw new NotFoundException('Não existem resultados cadastrados.');\n    }\n\n    return allResults;\n  }\n\n  async findOne(id: string) {\n    try {\n      return await this.prisma.result.findUnique({\n        where: { id: id },\n        select: {\n          id: true,\n          nextRole: true,\n          person: true,\n          process: true,\n          system: true,\n          technology: true,\n          influence: true,\n        },\n      });\n    } catch (error) {\n      return handleError(error);\n    }\n  }\n\n  async update(id: string, dto: UpdateResultDto) {\n    if (\n      dto.isValided &&\n      dto.nextRole &&\n      (!dto.influence ||\n        !dto.technology ||\n        !dto.system ||\n        !dto.process ||\n        !dto.person)\n    ) {\n      return this.prisma.result\n        .update({\n          where: { id: id },\n          data: {\n            isValided: dto.isValided,\n            nextRole: dto.nextRole,\n          },\n          select: {\n            id: true,\n            userId: true,\n            nextRole: true,\n            person: true,\n            process: true,\n            system: true,\n            technology: true,\n            influence: true,\n          },\n        })\n        .then(async (result) => {\n          // enviar email para o usuário\n\n          const user = await this.prisma.user.findUnique({\n            where: { id: result.userId },\n            select: {\n              email: true,\n            },\n          });\n\n          const transporter = nodemailer.createTransport({\n            host: 'smtp.gmail.com',\n            port: 587,\n            service: 'gmail',\n            auth: {\n              user: 'projetopetlover@gmail.com',\n              pass: 'skbfwjaibimleyou',\n            },\n          });\n\n          const mailData = {\n            from: 'Pet Love ',\n            to: user.email,\n            subject: 'Resultado do teste',\n            html: 'oi1 oi2',\n          };\n\n          transporter.sendMail(mailData, function (err, info) {\n            if (err) {\n              console.log(err);\n\n              throw new BadRequestException('Error sending email');\n            } else {\n              console.log(info);\n            }\n          });\n\n          return result;\n        })\n        .catch(handleError);\n    }\n\n    const data: Prisma.ResultUpdateInput = {\n      isValided: dto.isValided,\n      nextRole: dto.nextRole,\n      person: dto.person,\n      process: dto.process,\n      system: dto.system,\n      technology: dto.technology,\n      influence: dto.influence,\n    };\n\n    return this.prisma.result\n      .update({\n        data,\n        where: { id: id },\n        select: {\n          id: true,\n          userId: true,\n          nextRole: true,\n          person: true,\n          process: true,\n          system: true,\n          technology: true,\n          influence: true,\n        },\n      })\n      .then(async (result) => {\n        // enviar email para o usuário\n\n        const user = await this.prisma.user.findUnique({\n          where: { id: result.userId },\n          select: {\n            email: true,\n          },\n        });\n\n        const transporter = nodemailer.createTransport({\n          host: 'smtp.gmail.com',\n          port: 587,\n          service: 'gmail',\n          auth: {\n            user: 'projetopetlover@gmail.com',\n            pass: 'skbfwjaibimleyou',\n          },\n        });\n\n        const mailData = {\n          from: 'Pet Love ',\n          to: user.email,\n          subject: 'Resultado do teste (modificado pelo administrador)',\n          html: 'oi1 oi2',\n        };\n\n        transporter.sendMail(mailData, function (err, info) {\n          if (err) {\n            console.log(err);\n\n            throw new BadRequestException('Error sending email');\n          } else {\n            console.log(info);\n          }\n        });\n\n        return result;\n      })\n      .catch(handleError);\n  }\n\n  async remove(id:string,user:User) {\n    isAdmin(user);\n    await this.prisma.result.delete({where:{id:id}});\n    return { message: 'Result deleted successfully' };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SpecialtiesController.html":{"url":"controllers/SpecialtiesController.html","title":"controller - SpecialtiesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SpecialtiesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/specialties/specialties.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                Specialty\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(dto: CreateSpecialtyDto, user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'create a specialty'})\n                \n            \n\n            \n                \n                    Defined in src/specialties/specialties.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateSpecialtyDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Specialtie\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll(user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'List all specialties'})\n                \n            \n\n            \n                \n                    Defined in src/specialties/specialties.controller.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Specialties\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string, user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOperation({summary: 'Find a specific specialty through the id'})\n                \n            \n\n            \n                \n                    Defined in src/specialties/specialties.controller.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Specialtie\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string, user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ApiOperation({summary: 'delete a specialty'})\n                \n            \n\n            \n                \n                    Defined in src/specialties/specialties.controller.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        message: 'specialty deleted successfully'\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, dto: UpdateSpecialtyDto, user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiOperation({summary: 'Change or update information about a specialty'})\n                \n            \n\n            \n                \n                    Defined in src/specialties/specialties.controller.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                UpdateSpecialtyDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Specialtie\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  UseGuards,\n} from '@nestjs/common';\nimport { SpecialtiesService } from './specialties.service';\nimport { CreateSpecialtyDto } from './dto/create-specialty.dto';\nimport { UpdateSpecialtyDto } from './dto/update-specialty.dto';\nimport { User } from 'src/user/entities/user.entity';\nimport { LoggedUser } from 'src/auth/logged-user.decorator';\nimport { AuthGuard } from '@nestjs/passport';\nimport { ApiBearerAuth, ApiOperation, ApiTags } from '@nestjs/swagger';\n\n@UseGuards(AuthGuard())\n@ApiBearerAuth()\n@ApiTags('Specialtie')\n@Controller('Specialty')\nexport class SpecialtiesController {\n  constructor(private readonly specialty: SpecialtiesService) {}\n\n    /**\n\t * @param req\n\t * @returns Specialtie\n\t */\n  @Post()\n  @ApiOperation({ summary: 'create a specialty' })\n  create(@Body() dto: CreateSpecialtyDto, @LoggedUser() user: User) {\n    return this.specialty.create(dto, user);\n  }\n\n    /**\n\t * @param req\n\t * @returns Specialties\n\t */\n  @Get()\n  @ApiOperation({ summary: 'List all specialties' })\n  findAll(@LoggedUser() user: User) {\n    return this.specialty.findAll(user);\n  }\n\n    /**\n\t * @param req\n\t * @returns Specialtie\n\t */\n  @Get(':id')\n  @ApiOperation({ summary: 'Find a specific specialty through the id' })\n  findOne(@Param('id') id: string, @LoggedUser() user: User) {\n    return this.specialty.findOne(id, user);\n  }\n\n  /**\n\t * @param req\n\t * @returns Specialtie\n\t */\n  @Patch(':id')\n  @ApiOperation({ summary: 'Change or update information about a specialty' })\n  update(\n    @Param('id') id: string,\n    @Body() dto: UpdateSpecialtyDto,\n    @LoggedUser() user: User,\n  ) {\n    return this.specialty.update(id, dto, user);\n  }\n\n  /**\n\t * @param req\n\t * @returns  message: 'specialty deleted successfully' \n\t */\n  @Delete(':id')\n  @ApiOperation({ summary: 'delete a specialty' })\n  remove(@Param('id') id: string, @LoggedUser() user: User) {\n    return this.specialty.remove(id, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SpecialtiesModule.html":{"url":"modules/SpecialtiesModule.html","title":"module - SpecialtiesModule","body":"\n                   \n\n\n\n\n    Modules\n    SpecialtiesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_SpecialtiesModule\n\n\n\ncluster_SpecialtiesModule_providers\n\n\n\ncluster_SpecialtiesModule_imports\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nSpecialtiesModule\n\nSpecialtiesModule\n\nSpecialtiesModule -->\n\nPrismaModule->SpecialtiesModule\n\n\n\n\n\nSpecialtiesService\n\nSpecialtiesService\n\nSpecialtiesModule -->\n\nSpecialtiesService->SpecialtiesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/specialties/specialties.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SpecialtiesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            SpecialtiesController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { SpecialtiesService } from './specialties.service';\nimport { SpecialtiesController } from './specialties.controller';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { PassportModule } from '@nestjs/passport';\n\n@Module({\n  imports: [PrismaModule, PassportModule.register({ defaultStrategy: 'jwt' })],\n  controllers: [SpecialtiesController],\n  providers: [SpecialtiesService],\n})\nexport class SpecialtiesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SpecialtiesService.html":{"url":"injectables/SpecialtiesService.html","title":"injectable - SpecialtiesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SpecialtiesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/specialties/specialties.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/specialties/specialties.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(dto: CreateSpecialtyDto, user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/specialties/specialties.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateSpecialtyDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/specialties/specialties.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string, user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/specialties/specialties.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string, user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/specialties/specialties.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, dto: UpdateSpecialtyDto, user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/specialties/specialties.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                UpdateSpecialtyDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnprocessableEntityException } from '@nestjs/common';\nimport { Prisma } from '@prisma/client';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { User } from 'src/user/entities/user.entity';\nimport { handleError } from 'src/utils/handleError.utils';\nimport { isAdmin } from 'src/utils/isAdmin.utils';\nimport { CreateSpecialtyDto } from './dto/create-specialty.dto';\nimport { UpdateSpecialtyDto } from './dto/update-specialty.dto';\nimport { Specialty } from './entities/specialty.entity';\n\n@Injectable()\nexport class SpecialtiesService {\n  constructor(private readonly prisma: PrismaService) {}\n\n  async create(dto: CreateSpecialtyDto, user: User) {\n    isAdmin(user);\n    const data: Prisma.SpecialtieCreateInput = { ...dto };\n    return await this.prisma.specialtie.create({ data }).catch(handleError);\n  }\n\n  async findAll(user: User) {\n    if (!user) {\n      throw new UnprocessableEntityException('Usuário não está logado');\n    }\n\n    return await this.prisma.specialtie.findMany().catch(handleError);\n  }\n\n  async findOne(id: string, user: User) {\n    if (!user) {\n      throw new UnprocessableEntityException('Usuário não está logado');\n    }\n\n    return await this.prisma.specialtie\n      .findUnique({ where: { id } })\n      .catch(handleError);\n  }\n\n  async update(id: string, dto: UpdateSpecialtyDto, user: User) {\n    isAdmin(user);\n    const data: Partial = { ...dto };\n    return await this.prisma.specialtie\n      .update({\n        where: { id },\n        data,\n      })\n      .catch(handleError);\n  }\n\n  async remove(id: string, user: User) {\n    isAdmin(user);\n    await this.prisma.specialtie.delete({ where: { id } }).catch(handleError);\n    return { message: 'specialty deleted successfully' };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Specialty.html":{"url":"classes/Specialty.html","title":"class - Specialty","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Specialty\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/specialties/entities/specialty.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                description\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                influence\n                            \n                            \n                                performance\n                            \n                            \n                                person\n                            \n                            \n                                process\n                            \n                            \n                                system\n                            \n                            \n                                technology\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/specialties/entities/specialty.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/specialties/entities/specialty.entity.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/specialties/entities/specialty.entity.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        influence\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/specialties/entities/specialty.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        performance\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/specialties/entities/specialty.entity.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        person\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/specialties/entities/specialty.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        process\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/specialties/entities/specialty.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        system\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/specialties/entities/specialty.entity.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        technology\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/specialties/entities/specialty.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/specialties/entities/specialty.entity.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Specialty {\n  id?: string;\n  performance: string;\n  description: string;\n  system: number;\n  person: number;\n  technology: number;\n  process: number;\n  influence: number;\n  createdAt?: Date;\n  updatedAt?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Test.html":{"url":"classes/Test.html","title":"class - Test","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Test\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Test-crud/entities/test.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                computationalFundamentals\n                            \n                            \n                                createdAt\n                            \n                            \n                                design\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                person\n                            \n                            \n                                process\n                            \n                            \n                                system\n                            \n                            \n                                test\n                            \n                            \n                                    Optional\n                                title\n                            \n                            \n                                toolshop\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        computationalFundamentals\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/Test-crud/entities/test.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/Test-crud/entities/test.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        design\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/Test-crud/entities/test.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/Test-crud/entities/test.entity.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        person\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/Test-crud/entities/test.entity.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        process\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/Test-crud/entities/test.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        system\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/Test-crud/entities/test.entity.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        test\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/Test-crud/entities/test.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/Test-crud/entities/test.entity.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toolshop\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/Test-crud/entities/test.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/Test-crud/entities/test.entity.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Test {\nid?:string;\ntitle?:string\nsystem:string[];\nperson:string[];\ntest:string[];\ndesign:string[];\ntoolshop:string[];\nprocess:string[];\ncomputationalFundamentals:string[];\ncreatedAt:Date;\nupdatedAt:Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TestController.html":{"url":"controllers/TestController.html","title":"controller - TestController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TestController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Test-crud/test.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                Test\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(dto: CreateTestDto, user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/create')@ApiOperation({summary: 'Create a complete test'})\n                \n            \n\n            \n                \n                    Defined in src/Test-crud/test.controller.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateTestDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Test\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll(user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/allTests')@ApiOperation({summary: To list all tests})\n                \n            \n\n            \n                \n                    Defined in src/Test-crud/test.controller.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Tests\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string, user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ApiOperation({summary: To delete a test})\n                \n            \n\n            \n                \n                    Defined in src/Test-crud/test.controller.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Message: 'Teste deletado com sucesso!'\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, dto: UpdateTestDto, user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiOperation({summary: To make changes to a test})\n                \n            \n\n            \n                \n                    Defined in src/Test-crud/test.controller.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                UpdateTestDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Test\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, UseGuards } from '@nestjs/common';\nimport { TestService } from './test.service';\nimport { CreateTestDto } from './dto/create-test.dto';\nimport { UpdateTestDto } from './dto/update-test.dto';\nimport { ApiBearerAuth, ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { LoggedUser } from 'src/auth/logged-user.decorator';\nimport { User } from 'src/user/entities/user.entity';\nimport { AuthGuard } from '@nestjs/passport';\n\n\n@ApiTags('Test')\n@UseGuards(AuthGuard())\n@ApiBearerAuth()\n@Controller('Test')\nexport class TestController {\n  constructor(private readonly testService: TestService) {}\n\n\n   /**\n\t * @param req\n\t * @returns Test\n\t */\n  @Post('/create')\n  @ApiOperation({ summary: 'Create a complete test' })\n  create(@Body() dto: CreateTestDto,@LoggedUser() user:User) {\n    return this.testService.create(dto,user);\n  }\n\n  /**\n\t * @param req\n\t * @returns Tests\n\t */\n  @Get('/allTests')\n  @ApiOperation({summary: `To list all tests`})\n  findAll(@LoggedUser() user:User) {\n    return this.testService.findAll(user);\n  }\n\n    /**\n\t * @param req\n\t * @returns Test\n\t */\n  @Patch(':id')\n  @ApiOperation({summary: `To make changes to a test`})\n  update(@Param('id') id: string, @Body() dto: UpdateTestDto,@LoggedUser() user:User) {\n    return this.testService.update(id,dto,user);\n  }\n\n    /**\n\t * @param req\n\t * @returns Message: 'Teste deletado com sucesso!'\n\t */\n  @Delete(':id')\n  @ApiOperation({summary: `To delete a test`})\n  remove(@Param('id') id:string,@LoggedUser() user:User) {\n    return this.testService.remove(id,user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TestModule.html":{"url":"modules/TestModule.html","title":"module - TestModule","body":"\n                   \n\n\n\n\n    Modules\n    TestModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_TestModule\n\n\n\ncluster_TestModule_imports\n\n\n\ncluster_TestModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nTestModule\n\nTestModule\n\nTestModule -->\n\nPrismaModule->TestModule\n\n\n\n\n\nTestService\n\nTestService\n\nTestModule -->\n\nTestService->TestModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/Test-crud/test.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TestService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TestController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TestService } from './test.service';\nimport { TestController } from './test.controller';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { PassportModule } from '@nestjs/passport';\n\n@Module({\n  imports: [PrismaModule, PassportModule.register({ defaultStrategy: 'jwt' })],\n  controllers: [TestController],\n  providers: [TestService]\n})\nexport class TestModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TestService.html":{"url":"injectables/TestService.html","title":"injectable - TestService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TestService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Test-crud/test.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/Test-crud/test.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(dto: CreateTestDto, user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/Test-crud/test.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateTestDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/Test-crud/test.service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string, user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/Test-crud/test.service.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, dto: UpdateTestDto, user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/Test-crud/test.service.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                UpdateTestDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  HttpException,\n  Injectable,\n  NotFoundException,\n  UnprocessableEntityException,\n} from '@nestjs/common';\nimport { Prisma } from '@prisma/client';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { User } from 'src/user/entities/user.entity';\nimport { handleError } from 'src/utils/handleError.utils';\nimport { isAdmin } from 'src/utils/isAdmin.utils';\nimport { CreateTestDto } from './dto/create-test.dto';\nimport { UpdateTestDto } from './dto/update-test.dto';\n\n@Injectable()\nexport class TestService {\n  constructor(private readonly prisma: PrismaService) {}\n\n  async create(dto: CreateTestDto, user: User) {\n    isAdmin(user);\n\n    const data: Prisma.TestCreateInput = {\n      person: dto.person,\n      process: dto.process,\n      system: dto.system,\n      test: dto.test,\n      toolshop: dto.toolshop,\n      design: dto.design,\n      computationalFundamentals: dto.computationalFundamentals,\n    };\n\n    return this.prisma.test\n      .create({\n        data,\n        select: {\n          person: true,\n          process: true,\n          system: true,\n          test: true,\n          toolshop: true,\n          design: true,\n          computationalFundamentals: true,\n          createdAt: true,\n        },\n      })\n      .catch(handleError);\n  }\n\n  async findAll(user: User) {\n    if (!user) {\n      throw new UnprocessableEntityException('Usuário não está logado');\n    }\n\n    return await this.prisma.test.findMany().catch(handleError);\n  }\n\n  async update(id: string, dto: UpdateTestDto, user: User) {\n    isAdmin(user);\n\n    if (!id) {\n      throw new NotFoundException(`id:${id} não encontrado`);\n    }\n\n    const data: Prisma.TestUpdateInput = {\n      person: dto.person,\n      process: dto.process,\n      system: dto.system,\n      test: dto.test,\n      toolshop: dto.toolshop,\n      design: dto.design,\n      computationalFundamentals: dto.computationalFundamentals,\n    };\n\n    return this.prisma.test\n      .update({\n        data,\n        where: { id: id },\n        select: {\n          person: true,\n          process: true,\n          system: true,\n          test: true,\n          toolshop: true,\n          design: true,\n          updatedAt: true,\n        },\n      })\n      .catch(handleError);\n  }\n\n  async remove(id: string, user: User) {\n    isAdmin(user);\n\n    if (!id) {\n      throw new NotFoundException(`id:${id} não encontrado`);\n    } else {\n      await this.prisma.test.delete({ where: { id: id } });\n      throw new HttpException('Teste deletado com sucesso!', 200);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateResultDto.html":{"url":"classes/UpdateResultDto.html","title":"class - UpdateResultDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateResultDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/result/dto/update-result.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                influence\n                            \n                            \n                                isValided\n                            \n                            \n                                nextRole\n                            \n                            \n                                technology\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        influence\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber({maxDecimalPlaces: 2})@IsOptional()@ApiProperty({description: 'Influence test result', example: 3})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/result/dto/update-result.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isValided\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"Sim\" | \"Não\"\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'Para escolher se o usuário passou ou não', example: 'Sim'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/result/dto/update-result.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nextRole\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'Para escolher a categoria do usuário', example: 'Junior'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/result/dto/update-result.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        technology\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber({maxDecimalPlaces: 2})@IsOptional()@ApiProperty({description: 'Technology test result', example: 3})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/result/dto/update-result.dto.ts:38\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { IsNumber, IsOptional, IsString } from 'class-validator';\nimport { CreateResultDto } from './create-result.dto';\n\nexport class UpdateResultDto extends PartialType(CreateResultDto) {\n  @IsString()\n  @ApiProperty({\n    description: 'Para escolher a categoria do usuário',\n    example: 'Junior',\n  })\n  nextRole: string;\n\n  @IsString()\n  @ApiProperty({\n    description: 'Para escolher se o usuário passou ou não',\n    example: 'Sim',\n  })\n  isValided: 'Sim' | 'Não';\n\n  @IsNumber({\n    maxDecimalPlaces: 2,\n  })\n  @IsOptional()\n  @ApiProperty({\n    description: 'Influence test result',\n    example: 3,\n  })\n  influence: number;\n\n  @IsNumber({\n    maxDecimalPlaces: 2,\n  })\n  @IsOptional()\n  @ApiProperty({\n    description: 'Technology test result',\n    example: 3,\n  })\n  technology: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateSpecialtyDto.html":{"url":"classes/UpdateSpecialtyDto.html","title":"class - UpdateSpecialtyDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateSpecialtyDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/specialties/dto/update-specialty.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateSpecialtyDto } from './create-specialty.dto';\n\nexport class UpdateSpecialtyDto extends PartialType(CreateSpecialtyDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateTestDto.html":{"url":"classes/UpdateTestDto.html","title":"class - UpdateTestDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateTestDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Test-crud/dto/update-test.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateTestDto } from './create-test.dto';\n\nexport class UpdateTestDto extends PartialType(CreateTestDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/update-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                emailNotification\n                            \n                            \n                                newPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        emailNotification\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"none\" | \"team\" | \"all\"\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@IsOptional()@ApiProperty({description: 'define qual notificação de email o usuário receberá (somente para usuários com papel de administrador)', example: 'team'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/update-user.dto.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        newPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @MinLength(6)@IsString()@Matches(/((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/, {message: 'senha muito fraca'})@IsOptional()@ApiProperty({description: 'Senha do usuário. Requer letras maiúsculas e minúsculas, números ou caracteres especiais', example: 'Petlove@123'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/update-user.dto.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport {\n  MinLength,\n  IsString,\n  Matches,\n  IsNotEmpty,\n  IsOptional,\n} from 'class-validator';\nimport { CreateUserDto } from './create-user.dto';\n\nexport class UpdateUserDto extends PartialType(CreateUserDto) {\n  @MinLength(6)\n  @IsString()\n  @Matches(/((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/, {\n    message: 'senha muito fraca',\n  })\n  @IsOptional()\n  @ApiProperty({\n    description:\n      'Senha do usuário. Requer letras maiúsculas e minúsculas, números ou caracteres especiais',\n    example: 'Petlove@123',\n  })\n  newPassword: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @IsOptional()\n  @ApiProperty({\n    description:\n      'define qual notificação de email o usuário receberá (somente para usuários com papel de administrador)',\n    example: 'team',\n  })\n  emailNotification: 'none' | 'team' | 'all';\n}\n\nexport class ChangePasswordDto {\n  @MinLength(6)\n  @IsString()\n  @Matches(/((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/, {\n    message: 'senha muito fraca',\n  })\n  @IsNotEmpty()\n  @ApiProperty({\n    description:\n      'Senha do usuário. Requer letras maiúsculas e minúsculas, números ou caracteres especiais',\n    example: 'Petlove@123',\n  })\n  password: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({\n    example: 'Petlove@123',\n  })\n  confirmPassword: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/entities/user.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                chapter\n                            \n                            \n                                createdAt\n                            \n                            \n                                email\n                            \n                            \n                                    Optional\n                                emailNotification\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                    Optional\n                                isAdmin\n                            \n                            \n                                    Optional\n                                isVerified\n                            \n                            \n                                name\n                            \n                            \n                                    Optional\n                                password\n                            \n                            \n                                    Optional\n                                role\n                            \n                            \n                                    Optional\n                                team\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        chapter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        emailNotification\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"none\" | \"team\" | \"all\"\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        isAdmin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        isVerified\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        team\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {\n  id?: string;\n  name: string;\n  email: string;\n  password?: string;\n  team?: string;\n  chapter?: string;\n  role?: string;\n  isAdmin?: boolean;\n  isVerified?: boolean;\n  emailNotification?: 'none' | 'team' | 'all';\n  createdAt: Date;\n  updatedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                User\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changePassword\n                            \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                sendEmailForgotPassword\n                            \n                            \n                                update\n                            \n                            \n                                uploadFile\n                            \n                            \n                                verifyUserEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changePassword\n                        \n                    \n                \n            \n            \n                \nchangePassword(id: string, resetToken: string, dto: ChangePasswordDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('change/password/:resetToken/:id')@ApiOperation({summary: 'Recover user password'})\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    resetToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                ChangePasswordDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        message: 'Password changed'\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/create')@ApiOperation({summary: 'create user'})\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        user\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll(user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(undefined)@ApiBearerAuth()@Get()@ApiOperation({summary: 'List all users'})\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        users\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(email: string, user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(undefined)@ApiBearerAuth()@Get(':email')@ApiOperation({summary: 'View a user by id.'})\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        users\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(email: string, user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(undefined)@ApiBearerAuth()@Delete(':email')@ApiOperation({summary: 'Delete a user (Adm)'})\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:125\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Message: Usuário deletado com sucesso!\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendEmailForgotPassword\n                        \n                    \n                \n            \n            \n                \nsendEmailForgotPassword(email: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('send/:email')@ApiOperation({summary: 'Send email to change password'})\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        Message: 'Email sent'!\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(email: string, updateUserDto: UpdateUserDto, user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(undefined)@ApiBearerAuth()@Patch(':email')@ApiOperation({summary: 'Edit User Information!'})\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        users\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uploadFile\n                        \n                    \n                \n            \n            \n                \nuploadFile(file)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(undefined)@ApiBearerAuth()@Post('upload')@ApiOperation({summary: 'Adiciona uma foto ao perfil do usuário'})@UseInterceptors(undefined)\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:137\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        verifyUserEmail\n                        \n                    \n                \n            \n            \n                \nverifyUserEmail(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('verify/:id')@ApiOperation({summary: 'Verify user email'})\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        user\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  UseGuards,\n  UploadedFiles,\n  UseInterceptors,\n} from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { ChangePasswordDto, UpdateUserDto } from './dto/update-user.dto';\nimport { User } from './entities/user.entity';\nimport { ApiBearerAuth, ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { AuthGuard } from '@nestjs/passport';\nimport { LoggedUser } from 'src/auth/logged-user.decorator';\nimport { FileInterceptor } from '@nestjs/platform-express';\n\n@ApiTags('User')\n@Controller('User')\nexport class UserController {\n  constructor(private readonly userService: UserService) {}\n\n  /**\n\t * @param req\n\t * @returns user\n\t */\n  @Post('/create')\n  @ApiOperation({ summary: 'create user' })\n  create(@Body() createUserDto: CreateUserDto) {\n    return this.userService.create(createUserDto);\n  }\n\n   /**\n\t * @param req\n\t * @returns user\n\t */\n  @Get('verify/:id')\n  @ApiOperation({\n    summary: 'Verify user email',\n  })\n  verifyUserEmail(@Param('id') id: string): Promise {\n    return this.userService.verifyUserEmail(id);\n  }\n\n  /**\n\t * @param req\n\t * @returns Message: 'Email sent'!\n\t */\n  @Get('send/:email')\n  @ApiOperation({\n    summary: 'Send email to change password',\n  })\n  sendEmailForgotPassword(@Param('email') email: string): Promise {\n    return this.userService.sendEmailForgotPassword(email);\n  }\n\n  /**\n\t * @param req\n\t * @returns message: 'Password changed'\n\t */\n  @Patch('change/password/:resetToken/:id')\n  @ApiOperation({\n    summary: 'Recover user password',\n  })\n  changePassword(\n    @Param('id') id: string,\n    @Param('resetToken') resetToken: string,\n    @Body() dto: ChangePasswordDto,\n  ): Promise {\n    return this.userService.changePassword(id, resetToken, dto);\n  }\n\n  /**\n\t * @param req\n\t * @returns users\n\t */\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth()\n  @Get()\n  @ApiOperation({ summary: 'List all users' })\n  findAll(@LoggedUser() user: User) {\n    return this.userService.findAll(user);\n  }\n\n  /**\n\t * @param req\n\t * @returns users\n\t */\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth()\n  @Get(':email')\n  @ApiOperation({ summary: 'View a user by id.' })\n  findOne(@Param('email') email: string, @LoggedUser() user: User) {\n    return this.userService.findOne(email, user);\n  }\n\n    /**\n\t * @param req\n\t * @returns users\n\t */\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth()\n  @Patch(':email')\n  @ApiOperation({ summary: 'Edit User Information!' })\n  update(\n    @Param('email') email: string,\n    @Body() updateUserDto: UpdateUserDto,\n    @LoggedUser() user: User,\n  ) {\n    return this.userService.update(email, updateUserDto, user);\n  }\n\n   /**\n\t * @param req\n\t * @returns Message: Usuário deletado com sucesso!\n\t */\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth()\n  @Delete(':email')\n  @ApiOperation({ summary: 'Delete a user (Adm)' })\n  remove(@Param('email') email: string, @LoggedUser() user: User) {\n    return this.userService.remove(email, user);\n  }\n\n     /**\n\t * @param req\n\t */\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth()\n  @Post('upload')\n  @ApiOperation({ summary: 'Adiciona uma foto ao perfil do usuário' })\n  @UseInterceptors(FileInterceptor('file'))\n  uploadFile(@UploadedFiles() file) {\n  console.log(file);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UserModule\n\n\n\ncluster_UserModule_imports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nPrismaModule->UserModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { UserController } from './user.controller';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { PassportModule } from '@nestjs/passport';\nimport { MulterModule } from '@nestjs/platform-express';\nimport { JwtModule } from '@nestjs/jwt';\n\n@Module({\n  imports: [\n    PrismaModule,\n    PassportModule.register({ defaultStrategy: 'jwt' }),\n    MulterModule.register({dest:'./upload',}),\n    JwtModule.register({\n      secret: process.env.JWT_SECRET,\n      signOptions: { expiresIn: '30m' },\n    }),\n  ],\n  controllers: [UserController],\n  providers: [UserService],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                changePassword\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                sendEmailForgotPassword\n                            \n                            \n                                    Async\n                                update\n                            \n                            \n                                    Async\n                                verifyUserEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/user/user.service.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        changePassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    changePassword(id: string, resetToken: string, dto: ChangePasswordDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:186\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    resetToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                ChangePasswordDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(dto: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:280\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(email: string, user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:309\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(email: string, user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:406\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        sendEmailForgotPassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendEmailForgotPassword(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(email: string, updateUserDto: UpdateUserDto, user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:345\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        verifyUserEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    verifyUserEmail(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  HttpException,\n  Injectable,\n  NotAcceptableException,\n  NotFoundException,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { ChangePasswordDto, UpdateUserDto } from './dto/update-user.dto';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport * as bcrypt from 'bcrypt';\nimport { handleError } from 'src/utils/handleError.utils';\nimport { Prisma } from '@prisma/client';\nimport { isAdmin } from 'src/utils/isAdmin.utils';\nimport { User } from './entities/user.entity';\nimport * as nodemailer from 'nodemailer';\nimport { JwtPayload } from './entities/jwtChangePassword.entity';\nimport { JwtService } from '@nestjs/jwt';\nimport * as crypto from 'crypto-js';\n\n@Injectable()\nexport class UserService {\n  constructor(\n    private readonly prisma: PrismaService,\n    private readonly jwtService: JwtService,\n  ) {}\n\n  async create(dto: CreateUserDto) {\n    if (dto.password != dto.confirmPassword) {\n      throw new BadRequestException('As senhas informadas não são iguais.');\n    }\n\n    delete dto.confirmPassword;\n\n    const data: Prisma.UserCreateInput = {\n      name: dto.name,\n      email: dto.email,\n      password: await bcrypt.hash(dto.password, 5),\n      isAdmin: false,\n    };\n\n    return this.prisma.user\n      .create({\n        data,\n        select: {\n          password: false,\n          id: true,\n          name: true,\n          email: true,\n          isAdmin: true,\n          createdAt: true,\n          updatedAt: true,\n        },\n      })\n      .then((user) => {\n        const transporter = nodemailer.createTransport({\n          host: 'smtp.gmail.com',\n          port: 587,\n          service: 'gmail',\n          auth: {\n            user: 'projetopetlover@gmail.com',\n            pass: 'skbfwjaibimleyou',\n          },\n        });\n\n        const mailData = {\n          from: 'Pet Love ',\n          to: user.email,\n          subject: 'Verify Email',\n          html: 'oi1 oi2',\n        };\n\n        transporter.sendMail(mailData, function (err, info) {\n          if (err) {\n            console.log(err);\n\n            throw new BadRequestException('Error sending email');\n          } else {\n            console.log(info);\n          }\n        });\n\n        return user;\n      })\n      .catch(handleError);\n  }\n\n  async verifyUserEmail(id: string) {\n    const user: User = await this.prisma.user.findUnique({\n      where: { id },\n      select: {\n        id: true,\n        email: true,\n        name: true,\n        createdAt: true,\n        updatedAt: true,\n      },\n    });\n\n    if (user.isVerified) {\n      throw new NotAcceptableException('Email already verified');\n    }\n\n    const data: Prisma.UserUpdateInput = {\n      isVerified: true,\n    };\n\n    return this.prisma.user\n      .update({\n        where: { id },\n        data,\n      })\n      .then(() => {\n        return 'Email verified! You can close this page and login';\n      })\n      .catch(handleError);\n  }\n\n  async sendEmailForgotPassword(email: string): Promise {\n    const user = await this.prisma.user\n      .findUnique({\n        where: { email },\n        select: {\n          id: true,\n          email: true,\n        },\n      })\n      .catch(handleError);\n\n    if (!user) {\n      throw new NotFoundException(`Email '${email}' not found`);\n    }\n\n    const payload: JwtPayload = {\n      id: user.id,\n    };\n\n    const token = this.jwtService.sign(payload);\n\n    const tokenCrypt = crypto.AES.encrypt(\n      token,\n      process.env.JWT_CHANGE_PASSWORD_SECRET,\n    ).toString();\n\n    const tokenToUrl = await tokenCrypt\n      .replace(/\\+/g, 'p1L2u3S')\n      .replace(/\\//g, 's1L2a3S4h')\n      .replace(/=/g, 'e1Q2u3A4l');\n\n    const transporter = nodemailer.createTransport({\n      host: 'smtp.gmail.com',\n      port: 587,\n      service: 'gmail',\n      auth: {\n        user: 'projetopetlover@gmail.com',\n        pass: 'skbfwjaibimleyou',\n      },\n    });\n\n    const mailData = {\n      from: 'Pet Love ',\n      to: user.email,\n      subject: 'Reset your password',\n      html: `oi1 token:${tokenToUrl}, id:${user.id}, url: http://localhost:3000/Change/${tokenToUrl}/${user.id}`,\n    };\n\n    transporter.sendMail(mailData, async function (err, info) {\n      if (err) {\n        console.log(err);\n\n        throw new BadRequestException('Error sending email');\n      } else {\n        console.log(info);\n      }\n    });\n\n    await this.prisma.user.update({\n      where: { id: user.id },\n      data: { resetToken: token },\n    });\n\n    return 'Email sent';\n  }\n\n  async changePassword(\n    id: string,\n    resetToken: string,\n    dto: ChangePasswordDto,\n  ): Promise {\n    const user = await this.prisma.user.findUnique({\n      where: { id },\n    });\n\n    if (!user) {\n      throw new NotFoundException(`User '${id}' not found`);\n    }\n\n    if (!user.resetToken) {\n      throw new BadRequestException('Token not found');\n    }\n    console.log(resetToken);\n\n    const resetTokenToText = resetToken\n      .replace(/p1L2u3S/g, '+')\n      .replace(/s1L2a3S4h/g, '/')\n      .replace(/e1Q2u3A4l/g, '=');\n\n    const resetTokenDecrypted = crypto.AES.decrypt(\n      resetTokenToText,\n      process.env.JWT_CHANGE_PASSWORD_SECRET,\n    ).toString(crypto.enc.Utf8);\n\n    if (resetTokenDecrypted != user.resetToken) {\n      throw new UnauthorizedException('Invalid token');\n    }\n    let jwtVerify: JwtPayload;\n    try {\n      jwtVerify = this.jwtService.verify(user.resetToken);\n    } catch (error) {\n      throw new UnauthorizedException('Invalid token');\n    }\n\n    if (!jwtVerify.id || jwtVerify.id != id) {\n      throw new UnauthorizedException('Invalid token');\n    }\n\n    if (!dto.password || !dto.confirmPassword) {\n      throw new BadRequestException('Informe a nova senha.');\n    }\n\n    if (dto.password !== dto.confirmPassword) {\n      throw new BadRequestException('As senhas informadas não são iguais.');\n    }\n\n    const hashedPassword = await bcrypt.hash(dto.password, 8);\n\n    const data: Prisma.UserUpdateInput = {\n      password: hashedPassword,\n      resetToken: null,\n    };\n\n    return this.prisma.user\n      .update({\n        where: { id },\n        data,\n      })\n      .then((user) => {\n        const transporter = nodemailer.createTransport({\n          host: 'smtp.gmail.com',\n          port: 587,\n          service: 'gmail',\n          auth: {\n            user: 'projetopetlover@gmail.com',\n            pass: 'skbfwjaibimleyou',\n          },\n        });\n\n        const mailData = {\n          from: 'Pet Love ',\n          to: user.email,\n          subject: 'Password Changed',\n          html: 'oi1 oi2',\n        };\n\n        transporter.sendMail(mailData, function (err, info) {\n          if (err) {\n            console.log(err);\n\n            throw new BadRequestException('Error sending email');\n          } else {\n            console.log(info);\n          }\n        });\n        return { message: 'Password changed' };\n      })\n      .catch(handleError);\n  }\n\n  async findAll(user: User) {\n    isAdmin(user);\n    const allUsers = await this.prisma.user.findMany({\n      select: {\n        id: true,\n        name: true,\n        email: true,\n        team: true,\n        role: true,\n        chapter: true,\n        results: true,\n        createdAt: true,\n      },\n    });\n\n    if (allUsers.length === 0) {\n      throw new NotFoundException('Não existem usuários cadastrados.');\n    }\n\n    const allUsersSort = allUsers.map((user) => {\n      user.results = user.results.sort((a, b) => {\n        return b.createdAt  {\n        return b.createdAt \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/Test-crud/dto/create-test.dto.ts\n            \n            class\n            CreateTestDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/Test-crud/dto/update-test.dto.ts\n            \n            class\n            UpdateTestDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/Test-crud/entities/test.entity.ts\n            \n            class\n            Test\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/Test-crud/test.controller.ts\n            \n            controller\n            TestController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/Test-crud/test.service.ts\n            \n            injectable\n            TestService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/login.dto.ts\n            \n            class\n            LoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/login.response.dto.ts\n            \n            class\n            LoginResponseDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/logged-user.decorator.ts\n            \n            variable\n            LoggedUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/prisma/seed.ts\n            \n            variable\n            prisma\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/seed.ts\n            \n            variable\n            seeds\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/seed/01-user.ts\n            \n            variable\n            user\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/seed/01-user.ts\n            \n            variable\n            users\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/seed/02-Test-crud.ts\n            \n            variable\n            test\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/seed/02-Test-crud.ts\n            \n            variable\n            Tests\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/seed/03-specialties.ts\n            \n            variable\n            specialtie\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/seed/03-specialties.ts\n            \n            variable\n            specialties\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/result/dto/create-result.dto.ts\n            \n            class\n            CreateResultDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/result/dto/update-result.dto.ts\n            \n            class\n            UpdateResultDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/result/entities/result.entity.ts\n            \n            class\n            Result\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/result/result.controller.ts\n            \n            controller\n            ResultController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/result/result.service.ts\n            \n            injectable\n            ResultService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/specialties/dto/create-specialty.dto.ts\n            \n            class\n            CreateSpecialtyDto\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/specialties/dto/update-specialty.dto.ts\n            \n            class\n            UpdateSpecialtyDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/specialties/entities/specialty.entity.ts\n            \n            class\n            Specialty\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/specialties/specialties.controller.ts\n            \n            controller\n            SpecialtiesController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/specialties/specialties.service.ts\n            \n            injectable\n            SpecialtiesService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/user/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/user/dto/update-user.dto.ts\n            \n            class\n            ChangePasswordDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/user/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/user/entities/jwtChangePassword.entity.ts\n            \n            interface\n            JwtPayload\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/user/entities/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/utils/handleError.utils.ts\n            \n            function\n            handleError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/isAdmin.utils.ts\n            \n            function\n            isAdmin\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^9.0.0\n        \n            @nestjs/core : ^9.0.0\n        \n            @nestjs/jwt : ^9.0.0\n        \n            @nestjs/passport : ^9.0.0\n        \n            @nestjs/platform-express : ^9.0.0\n        \n            @nestjs/swagger : ^6.1.2\n        \n            @prisma/client : ^4.3.1\n        \n            bcrypt : ^5.1.0\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.13.2\n        \n            crypto-js : ^4.1.1\n        \n            nodemailer : ^6.8.0\n        \n            passport : ^0.6.0\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n        \n            swagger-ui-express : ^4.5.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            handleError   (src/.../handleError.utils.ts)\n                        \n                        \n                            isAdmin   (src/.../isAdmin.utils.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/utils/handleError.utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        handleError\n                        \n                    \n                \n            \n            \n                \nhandleError(error: Error)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                            Error\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/utils/isAdmin.utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isAdmin\n                        \n                    \n                \n            \n            \n                \nisAdmin(user: User)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nPetlove Back-end\nGetting Started\nProjeto de bootcamp desenvolvido para a equipe da Petlove, referente a uma aplicação onde os gestores possam avaliar seus colaboradores através de questionarios que determinam as qualidades individuais e da equipe como um todo.\nFirst, run the development server:\nnpm run dev\n# or\nyarn devPré-requisitos\nOpen http://localhost:3000 with your browser to see the result.\n👯‍ Clonando o projeto\nClone o projeto na sua maquina utilizando o comando do git:\nGit Clone https://github.com/pedroasdoliveira/petlove-project-backend\nOu através do Github Desktop:\nLearn More\ngh repo clone pedroasdoliveira/petlove-project-backend\nTo learn more about Next.js, take a look at the following resources:\n🔧 Instalação\nyarn install\nDeploy on Vercel\n⚙️ Rodando o projeto\nyarn dev\n\nPara roda no ambiente de produção utilize os comandos:\n\nyarn build & yarn start\n🛠️ Construído com\n\nJavaScript\nTypeScript\nNest.js\nnpm\n\n\n✒️ Autores\n\nPedro Oliveira (Github: https://github.com/pedroasdoliveira);\nGiovanne Berteli (Github: https://github.com/hethus);\nJoão Vitor Carvalho (Github: https://github.com/jcvalgas);\nBruna Barbosa Bomfim (Github: https://github.com/brunabbomfim);\nFelipe dos Santos Azevedo (Github: https://github.com/Felipe360flp);\n\n\n📄 Licença\nEste projeto está sob a licença (Mozilla Public License Version 2.0) - veja o arquivo [LICENSE.md] para mais detalhes.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMozilla Public License Version 2.0\n\nDefinitions\n\n\n1.1. \"Contributor\"\n    means each individual or legal entity that creates, contributes to\n    the creation of, or owns Covered Software.\n1.2. \"Contributor Version\"\n    means the combination of the Contributions of others (if any) used\n    by a Contributor and that particular Contributor's Contribution.\n1.3. \"Contribution\"\n    means Covered Software of a particular Contributor.\n1.4. \"Covered Software\"\n    means Source Code Form to which the initial Contributor has attached\n    the notice in Exhibit A, the Executable Form of such Source Code\n    Form, and Modifications of such Source Code Form, in each case\n    including portions thereof.\n1.5. \"Incompatible With Secondary Licenses\"\n    means\n(a) that the initial Contributor has attached the notice described\n    in Exhibit B to the Covered Software; or\n\n(b) that the Covered Software was made available under the terms of\n    version 1.1 or earlier of the License, but not also under the\n    terms of a Secondary License.1.6. \"Executable Form\"\n    means any form of the work other than Source Code Form.\n1.7. \"Larger Work\"\n    means a work that combines Covered Software with other material, in\n    a separate file or files, that is not Covered Software.\n1.8. \"License\"\n    means this document.\n1.9. \"Licensable\"\n    means having the right to grant, to the maximum extent possible,\n    whether at the time of the initial grant or subsequently, any and\n    all of the rights conveyed by this License.\n1.10. \"Modifications\"\n    means any of the following:\n(a) any file in Source Code Form that results from an addition to,\n    deletion from, or modification of the contents of Covered\n    Software; or\n\n(b) any new file in Source Code Form that contains any Covered\n    Software.1.11. \"Patent Claims\" of a Contributor\n    means any patent claim(s), including without limitation, method,\n    process, and apparatus claims, in any patent Licensable by such\n    Contributor that would be infringed, but for the grant of the\n    License, by the making, using, selling, offering for sale, having\n    made, import, or transfer of either its Contributions or its\n    Contributor Version.\n1.12. \"Secondary License\"\n    means either the GNU General Public License, Version 2.0, the GNU\n    Lesser General Public License, Version 2.1, the GNU Affero General\n    Public License, Version 3.0, or any later versions of those\n    licenses.\n1.13. \"Source Code Form\"\n    means the form of the work preferred for making modifications.\n1.14. \"You\" (or \"Your\")\n    means an individual or a legal entity exercising rights under this\n    License. For legal entities, \"You\" includes any entity that\n    controls, is controlled by, or is under common control with You. For\n    purposes of this definition, \"control\" means (a) the power, direct\n    or indirect, to cause the direction or management of such entity,\n    whether by contract or otherwise, or (b) ownership of more than\n    fifty percent (50%) of the outstanding shares or beneficial\n    ownership of such entity.\n\nLicense Grants and Conditions\n\n\n2.1. Grants\nEach Contributor hereby grants You a world-wide, royalty-free,\nnon-exclusive license:\n(a) under intellectual property rights (other than patent or trademark)\n    Licensable by such Contributor to use, reproduce, make available,\n    modify, display, perform, distribute, and otherwise exploit its\n    Contributions, either on an unmodified basis, with Modifications, or\n    as part of a Larger Work; and\n(b) under Patent Claims of such Contributor to make, use, sell, offer\n    for sale, have made, import, and otherwise transfer either its\n    Contributions or its Contributor Version.\n2.2. Effective Date\nThe licenses granted in Section 2.1 with respect to any Contribution\nbecome effective for each Contribution on the date the Contributor first\ndistributes such Contribution.\n2.3. Limitations on Grant Scope\nThe licenses granted in this Section 2 are the only rights granted under\nthis License. No additional rights or licenses will be implied from the\ndistribution or licensing of Covered Software under this License.\nNotwithstanding Section 2.1(b) above, no patent license is granted by a\nContributor:\n(a) for any code that a Contributor has removed from Covered Software;\n    or\n(b) for infringements caused by: (i) Your and any other third party's\n    modifications of Covered Software, or (ii) the combination of its\n    Contributions with other software (except as part of its Contributor\n    Version); or\n(c) under Patent Claims infringed by Covered Software in the absence of\n    its Contributions.\nThis License does not grant any rights in the trademarks, service marks,\nor logos of any Contributor (except as may be necessary to comply with\nthe notice requirements in Section 3.4).\n2.4. Subsequent Licenses\nNo Contributor makes additional grants as a result of Your choice to\ndistribute the Covered Software under a subsequent version of this\nLicense (see Section 10.2) or under the terms of a Secondary License (if\npermitted under the terms of Section 3.3).\n2.5. Representation\nEach Contributor represents that the Contributor believes its\nContributions are its original creation(s) or it has sufficient rights\nto grant the rights to its Contributions conveyed by this License.\n2.6. Fair Use\nThis License is not intended to limit any rights You have under\napplicable copyright doctrines of fair use, fair dealing, or other\nequivalents.\n2.7. Conditions\nSections 3.1, 3.2, 3.3, and 3.4 are conditions of the licenses granted\nin Section 2.1.\n\nResponsibilities\n\n\n3.1. Distribution of Source Form\nAll distribution of Covered Software in Source Code Form, including any\nModifications that You create or to which You contribute, must be under\nthe terms of this License. You must inform recipients that the Source\nCode Form of the Covered Software is governed by the terms of this\nLicense, and how they can obtain a copy of this License. You may not\nattempt to alter or restrict the recipients' rights in the Source Code\nForm.\n3.2. Distribution of Executable Form\nIf You distribute Covered Software in Executable Form then:\n(a) such Covered Software must also be made available in Source Code\n    Form, as described in Section 3.1, and You must inform recipients of\n    the Executable Form how they can obtain a copy of such Source Code\n    Form by reasonable means in a timely manner, at a charge no more\n    than the cost of distribution to the recipient; and\n(b) You may distribute such Executable Form under the terms of this\n    License, or sublicense it under different terms, provided that the\n    license for the Executable Form does not attempt to limit or alter\n    the recipients' rights in the Source Code Form under this License.\n3.3. Distribution of a Larger Work\nYou may create and distribute a Larger Work under terms of Your choice,\nprovided that You also comply with the requirements of this License for\nthe Covered Software. If the Larger Work is a combination of Covered\nSoftware with a work governed by one or more Secondary Licenses, and the\nCovered Software is not Incompatible With Secondary Licenses, this\nLicense permits You to additionally distribute such Covered Software\nunder the terms of such Secondary License(s), so that the recipient of\nthe Larger Work may, at their option, further distribute the Covered\nSoftware under the terms of either this License or such Secondary\nLicense(s).\n3.4. Notices\nYou may not remove or alter the substance of any license notices\n(including copyright notices, patent notices, disclaimers of warranty,\nor limitations of liability) contained within the Source Code Form of\nthe Covered Software, except that You may alter any license notices to\nthe extent required to remedy known factual inaccuracies.\n3.5. Application of Additional Terms\nYou may choose to offer, and to charge a fee for, warranty, support,\nindemnity or liability obligations to one or more recipients of Covered\nSoftware. However, You may do so only on Your own behalf, and not on\nbehalf of any Contributor. You must make it absolutely clear that any\nsuch warranty, support, indemnity, or liability obligation is offered by\nYou alone, and You hereby agree to indemnify every Contributor for any\nliability incurred by such Contributor as a result of warranty, support,\nindemnity or liability terms You offer. You may include additional\ndisclaimers of warranty and limitations of liability specific to any\njurisdiction.\n\nInability to Comply Due to Statute or Regulation\n\n\nIf it is impossible for You to comply with any of the terms of this\nLicense with respect to some or all of the Covered Software due to\nstatute, judicial order, or regulation then You must: (a) comply with\nthe terms of this License to the maximum extent possible; and (b)\ndescribe the limitations and the code they affect. Such description must\nbe placed in a text file included with all distributions of the Covered\nSoftware under this License. Except to the extent prohibited by statute\nor regulation, such description must be sufficiently detailed for a\nrecipient of ordinary skill to be able to understand it.\n\nTermination\n\n\n5.1. The rights granted under this License will terminate automatically\nif You fail to comply with any of its terms. However, if You become\ncompliant, then the rights granted under this License from a particular\nContributor are reinstated (a) provisionally, unless and until such\nContributor explicitly and finally terminates Your grants, and (b) on an\nongoing basis, if such Contributor fails to notify You of the\nnon-compliance by some reasonable means prior to 60 days after You have\ncome back into compliance. Moreover, Your grants from a particular\nContributor are reinstated on an ongoing basis if such Contributor\nnotifies You of the non-compliance by some reasonable means, this is the\nfirst time You have received notice of non-compliance with this License\nfrom such Contributor, and You become compliant prior to 30 days after\nYour receipt of the notice.\n5.2. If You initiate litigation against any entity by asserting a patent\ninfringement claim (excluding declaratory judgment actions,\ncounter-claims, and cross-claims) alleging that a Contributor Version\ndirectly or indirectly infringes any patent, then the rights granted to\nYou by any and all Contributors for the Covered Software under Section\n2.1 of this License shall terminate.\n5.3. In the event of termination under Sections 5.1 or 5.2 above, all\nend user license agreements (excluding distributors and resellers) which\nhave been validly granted by You or Your distributors under this License\nprior to termination shall survive termination.\n\n\n                                                                 *\n\nDisclaimer of Warranty                                           *\n\n\n-------------------------                                           *\n                                                                 *\nCovered Software is provided under this License on an \"as is\"       *\nbasis, without warranty of any kind, either expressed, implied, or  *\nstatutory, including, without limitation, warranties that the       *\nCovered Software is free of defects, merchantable, fit for a        *\nparticular purpose or non-infringing. The entire risk as to the     *\nquality and performance of the Covered Software is with You.        *\nShould any Covered Software prove defective in any respect, You     *\n(not any Contributor) assume the cost of any necessary servicing,   *\nrepair, or correction. This disclaimer of warranty constitutes an   *\nessential part of this License. No use of any Covered Software is   *\nauthorized under this License except under this disclaimer.         *\n                                                                 *\n\n\n\n\n                                                                 *\n\nLimitation of Liability                                          *\n\n\n--------------------------                                          *\n                                                                 *\nUnder no circumstances and under no legal theory, whether tort      *\n(including negligence), contract, or otherwise, shall any           *\nContributor, or anyone who distributes Covered Software as          *\npermitted above, be liable to You for any direct, indirect,         *\nspecial, incidental, or consequential damages of any character      *\nincluding, without limitation, damages for lost profits, loss of    *\ngoodwill, work stoppage, computer failure or malfunction, or any    *\nand all other commercial damages or losses, even if such party      *\nshall have been informed of the possibility of such damages. This   *\nlimitation of liability shall not apply to liability for death or   *\npersonal injury resulting from such party's negligence to the       *\nextent applicable law prohibits such limitation. Some               *\njurisdictions do not allow the exclusion or limitation of           *\nincidental or consequential damages, so this exclusion and          *\nlimitation may not apply to You.                                    *\n                                                                 *\n\n\n\nLitigation\n\n\nAny litigation relating to this License may be brought only in the\ncourts of a jurisdiction where the defendant maintains its principal\nplace of business and such litigation shall be governed by laws of that\njurisdiction, without reference to its conflict-of-law provisions.\nNothing in this Section shall prevent a party's ability to bring\ncross-claims or counter-claims.\n\nMiscellaneous\n\n\nThis License represents the complete agreement concerning the subject\nmatter hereof. If any provision of this License is held to be\nunenforceable, such provision shall be reformed only to the extent\nnecessary to make it enforceable. Any law or regulation which provides\nthat the language of a contract shall be construed against the drafter\nshall not be used to construe this License against a Contributor.\n\nVersions of the License\n\n\n10.1. New Versions\nMozilla Foundation is the license steward. Except as provided in Section\n10.3, no one other than the license steward has the right to modify or\npublish new versions of this License. Each version will be given a\ndistinguishing version number.\n10.2. Effect of New Versions\nYou may distribute the Covered Software under the terms of the version\nof the License under which You originally received the Covered Software,\nor under the terms of any subsequent version published by the license\nsteward.\n10.3. Modified Versions\nIf you create software not governed by this License, and you want to\ncreate a new license for such software, you may create and use a\nmodified version of this License if you rename the license and remove\nany references to the name of the license steward (except to note that\nsuch modified license differs from this License).\n10.4. Distributing Source Code Form that is Incompatible With Secondary\nLicenses\nIf You choose to distribute Source Code Form that is Incompatible With\nSecondary Licenses under the terms of this version of the License, the\nnotice described in Exhibit B of this License must be attached.\nExhibit A - Source Code Form License Notice\n  This Source Code Form is subject to the terms of the Mozilla Public\n  License, v. 2.0. If a copy of the MPL was not distributed with this\n  file, You can obtain one at http://mozilla.org/MPL/2.0/.\nIf it is not possible or desirable to put the notice in a particular\nfile, then You may include the notice in a location (such as a LICENSE\nfile in a relevant directory) where a recipient would be likely to look\nfor such a notice.\nYou may add additional accurate notices of copyright ownership.\nExhibit B - \"Incompatible With Secondary Licenses\" Notice\n  This Source Code Form is \"Incompatible With Secondary Licenses\", as\n  defined by the Mozilla Public License, v. 2.0.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PrismaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ResultModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SpecialtiesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TestModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\ncluster_ResultModule\n\n\n\ncluster_ResultModule_providers\n\n\n\ncluster_SpecialtiesModule\n\n\n\ncluster_SpecialtiesModule_providers\n\n\n\ncluster_TestModule\n\n\n\ncluster_TestModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAuthModule -->\n\nPrismaModule->AuthModule\n\n\n\n\n\nResultModule\n\nResultModule\n\nResultModule -->\n\nPrismaModule->ResultModule\n\n\n\n\n\nSpecialtiesModule\n\nSpecialtiesModule\n\nSpecialtiesModule -->\n\nPrismaModule->SpecialtiesModule\n\n\n\n\n\nTestModule\n\nTestModule\n\nTestModule -->\n\nPrismaModule->TestModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nPrismaModule->UserModule\n\n\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nPrismaService \n\nPrismaService \n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\nAppModule -->\n\nResultModule->AppModule\n\n\n\nAppModule -->\n\nSpecialtiesModule->AppModule\n\n\n\nAppModule -->\n\nTestModule->AppModule\n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\nResultService\n\nResultService\n\nResultModule -->\n\nResultService->ResultModule\n\n\n\n\n\nSpecialtiesService\n\nSpecialtiesService\n\nSpecialtiesModule -->\n\nSpecialtiesService->SpecialtiesModule\n\n\n\n\n\nTestService\n\nTestService\n\nTestModule -->\n\nTestService->TestModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        7 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    6 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    8 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    15 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            LoggedUser   (src/.../logged-user.decorator.ts)\n                        \n                        \n                            prisma   (src/.../seed.ts)\n                        \n                        \n                            seeds   (src/.../seed.ts)\n                        \n                        \n                            specialtie   (src/.../03-specialties.ts)\n                        \n                        \n                            specialties   (src/.../03-specialties.ts)\n                        \n                        \n                            test   (src/.../02-Test-crud.ts)\n                        \n                        \n                            Tests   (src/.../02-Test-crud.ts)\n                        \n                        \n                            user   (src/.../01-user.ts)\n                        \n                        \n                            users   (src/.../01-user.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/auth/logged-user.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        LoggedUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator((_, ctx: ExecutionContext) => {\n  const request = ctx.switchToHttp().getRequest();\n  const user = request.user;\n\n  delete user.password;\n\n  return user;\n})\n                    \n                \n\n\n        \n    \n\n    src/prisma/seed.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        prisma\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new PrismaClient()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seeds\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.entries({\n  ...require('./seed/01-user'),\n  ...require('./seed/02-Test-crud'),\n  ...require('./seed/03-specialties'),\n})\n                    \n                \n\n\n        \n    \n\n    src/prisma/seed/03-specialties.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        specialtie\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (prisma: PrismaClient) => {\n  for (const obj of Object.values(specialties)) {\n    await prisma.specialtie.upsert({\n      where: { performance: obj.performance },\n      update: {},\n      create: {\n        ...obj,\n      },\n    });\n  }\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        specialties\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Prisma.SpecialtieCreateInput[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    performance: 'Inserir nome',\n    description: 'Inserir descrição',\n    system: 0,\n    person: 0,\n    technology: 0,\n    process: 0,\n    influence: 0,\n  },\n]\n                    \n                \n\n\n        \n    \n\n    src/prisma/seed/02-Test-crud.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        test\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Prisma.TestCreateInput[]\n\n                    \n                \n                \n                    \n                        Default value : [\n\t{\n    title:'proeficiencia',\n\n\t\tsystem:[\n      'Você é capaz de implementar features simples e resolver pequenos bugs dentro da sua squad?',\n      'Você desenha e implementa soluções de média e alta complexidade reduzindo débitos técnicos do time?',\n      'Você é capaz de subir e controlar sistemas em produção e também monitora a qualidade olhando para SLAs?',\n      'Você desenvolve arquitetura para futuras soluções e define SLAs?',\n      'Você lidera as soluções técnicas com excelência e cria planos de contingências?'\n    ],\n    person:[\n      'Você está sempre aprendendo com os outros e estuda mais quando necessário?',\n      'Você sempre ajuda as pessoas do seu time a terem sucesso em seus desafios',\n      'Você organiza times, promove feedbacks e intermedeia discussões',\n      'Você mentora outros em seu desenvolvimento e já foi coach na construção de PDI',\n      'Você gerencia carreiras, expectativas, performances e nível de engajamento do seu time'\n    ],\n    test:[\n      'Você implementa teste unitário e também testa a sua solução manualmente considerando as definições do produto?',\n      'Você simula comportamentos dos clientes no seu desenvolvimento, testa além do caminho feliz e analisa o impacto das mudanças',\n      'Você implementa teste e2e, de integração que permita avaliar e monitorar o produto'\n    ],\n    design:[\n      'Você conhece e aplica os princípios do S.O.L.I.D (Ou algum outro pattern definido pelo seu chapter Manager) no seu código?',\n      'Você conhece e aplica pelo menos outros 3 princípios de pattern no seu código e ajuda seus colegas de time a escolherem qual o melhor para a solução do problema',\n      'Você já ajudou a definir padrões de projetos de times/produtos fora do seu time'\n    ],\n    toolshop:[\n      'Você conhece o conceito de código limpo (link) e aplica o conceito em pelo menos 50% do seu código. Conhece e desenvolve seguindo os nossos processos de CI/CD?',\n      'Você Constrói códigos modulares e segue os conceitos de código limpo em 80% do seu código',\n      'Você ajuda a definir processos de CI/CD do seu time e da sua área. Ensina seus colegas a importância de um código limpo e cobra isso nos PRs que revisa'\n    ],\n    process:[\n      'Você segue todo o flow (git, CI/CD, Jira..) de desenvolvimento entregando features consistentes em produção?',\n      'Você sugere mudanças nos flows com consistência, sempre procurando caminhos para melhorar',\n      'Você sempre chama o time para reavaliar os flows, garantindo que todos entendam os benefícios e impactos',\n      'Você é o responsável por ajustar os flows do time, escutando feedbacks e guiando através das mudanças',\n      'Você define os flows baseado na maturidade, agilidade e disciplina do time'\n    ],\n    computationalFundamentals:[\n      'Você Conhece e aplica estruturas de dados e multithreading?',\n      'Você consegue desenhar a arquitetura de um sistema de complexidade média a alta',\n      'Você consegue desenhar uma arquitetura multis sistêmica e para múltiplos times'\n    ]\n\t},\n]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Tests\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (prisma: PrismaClient) => {\n\tfor (const obj of Object.values(test)) {\n\t\tawait prisma.test.upsert({\n\t\t\twhere: { title: obj.title },\n\t\t\tupdate: {},\n\t\t\tcreate: {\n\t\t\t\t...obj,\n\t\t\t},\n\t\t});\n\t}\n}\n                    \n                \n\n\n        \n    \n\n    src/prisma/seed/01-user.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (prisma: PrismaClient) => {\n\tfor (const obj of Object.values(users)) {\n\t\tawait prisma.user.upsert({\n\t\t\twhere: { email: obj.email },\n\t\t\tupdate: {},\n\t\t\tcreate: {\n\t\t\t\t...obj,\n\t\t\t\tpassword: await bcrypt.hash(obj.password, 10),\n\t\t\t},\n\t\t});\n\t}\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Prisma.UserCreateInput[]\n\n                    \n                \n                \n                    \n                        Default value : [\n\t{\n\t\tname: \"PetLove\",\n\t\temail: \"petlove@bootcamp.com\",\n\t\tpassword: \"Petlove@123\",\n\t},\n]\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
