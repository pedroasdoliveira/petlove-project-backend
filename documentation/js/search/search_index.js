var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.306,1,2.436]],["body/controllers/AppController.html",[0,2.029,1,3.786,2,1.594,3,0.31,4,0.277,5,0.245,6,3.713,7,0.529,8,1.915,9,5.474,10,1.42,11,0.022,12,0.655,13,4.355,14,5.544,15,3.465,16,5.544,17,2.769,18,5.544,19,3.465,20,6.629,21,4.703,22,6.42,23,4.385,24,5.474,25,2.591,26,4.727,27,5.544,28,1.808,29,1.012,30,0.633,31,0.952,32,2.512,33,1.198,34,3.518,35,3.713,36,4.355,37,0.31,38,0.123,39,1.91,40,1.691,41,2.512,42,2.975,43,3.713,44,2.975,45,1.504,46,4.355,47,0.017,48,0.017]],["title/modules/AppModule.html",[49,1.163,50,2.436]],["body/modules/AppModule.html",[1,4.051,2,1.954,3,0.293,4,0.261,5,0.231,11,0.022,30,0.722,31,0.898,34,3.849,35,3.502,37,0.293,38,0.116,47,0.016,48,0.016,49,1.741,50,4.971,51,1.801,52,2.341,53,3.502,54,3.502,55,3.502,56,4.069,57,2.926,58,4.171,59,4.069,60,4.069,61,4.171,62,2.667,63,1.92,64,2.052,65,4.107,66,2.86,67,3.08,68,4.107,69,4.107,70,4.107,71,4.107,72,4.107,73,1.595,74,4.107,75,4.107,76,4.107]],["title/injectables/AppService.html",[34,2.058,77,1.038]],["body/injectables/AppService.html",[3,0.364,4,0.325,5,0.288,7,0.622,8,2.115,9,5.79,11,0.022,12,0.769,28,1.668,29,1.117,30,0.531,31,1.118,34,3.532,37,0.364,38,0.144,45,1.766,47,0.018,48,0.018,77,1.782,78,2.39,79,4.36,80,5.114,81,4.36,82,5.114,83,5.114,84,5.114,85,5.114,86,5.114,87,3.864,88,5.114]],["title/controllers/AuthController.html",[0,1.306,89,2.436]],["body/controllers/AuthController.html",[0,1.355,2,1.355,3,0.264,4,0.236,5,0.208,7,0.45,8,1.722,10,1.626,11,0.022,12,0.75,25,2.33,28,2.114,29,0.676,30,0.699,31,0.809,32,2.136,33,1.019,37,0.264,38,0.105,39,1.624,40,1.437,41,2.876,42,3.404,45,1.722,47,0.015,48,0.015,89,3.404,90,3.157,91,2.314,92,2.797,93,4.117,94,4.984,95,3.157,96,4.051,97,3.702,98,4.984,99,4.117,100,4.984,101,3.702,102,1.824,103,1.451,104,0.7,105,1.371,106,3.404,107,3.702,108,1.626,109,2.797,110,4.984,111,3.766,112,3.702,113,3.702,114,2.815,115,2.876,116,4.984,117,2.67,118,2.314,119,3.116,120,3.702,121,3.702,122,2.314,123,2.314,124,1.437,125,3.116,126,3.522,127,1.849,128,3.251,129,3.157,130,3.157,131,2.314,132,3.157,133,1.849,134,4.984,135,2.314,136,3.702,137,3.702,138,3.702,139,3.116,140,3.702,141,3.702,142,2.314,143,3.702,144,3.702,145,3.157]],["title/modules/AuthModule.html",[49,1.163,56,2.23]],["body/modules/AuthModule.html",[2,2.035,3,0.312,4,0.278,5,0.246,11,0.022,30,0.715,31,0.957,37,0.312,38,0.124,47,0.017,48,0.017,49,1.813,51,1.919,52,2.438,56,4.437,57,2.975,62,2.777,63,2.045,64,2.186,66,2.978,67,3.208,89,4.174,124,1.699,128,3.914,129,3.73,146,3.73,147,4.375,148,3.73,149,4.241,150,4.375,151,4.375,152,2.735,153,3.73,154,2.735,155,2.735,156,4.375,157,2.735,158,2.735,159,2.186,160,3.73,161,3.73,162,3.306,163,3.73,164,3.73,165,4.375]],["title/injectables/AuthService.html",[77,1.038,128,2.058]],["body/injectables/AuthService.html",[3,0.27,4,0.241,5,0.213,7,0.461,8,1.749,11,0.023,12,0.762,28,1.237,30,0.677,31,0.829,37,0.27,38,0.107,40,1.966,45,1.31,47,0.015,48,0.015,77,1.475,78,1.772,93,3.46,95,4.319,96,4.079,99,2.59,102,1.854,103,1.475,104,0.711,105,1.393,106,3.46,108,1.4,128,2.922,130,3.233,131,2.371,132,3.233,154,2.371,166,3.233,167,2.849,168,2.922,169,2.188,170,2.509,171,5.681,172,3.792,173,2.367,174,3.792,175,2.865,176,3.792,177,3.827,178,4.319,179,3.055,180,3.259,181,2.845,182,3.792,183,2.849,184,2.865,185,3.29,186,2.666,187,4.319,188,5.065,189,3.233,190,3.792,191,3.233,192,5.065,193,3.792,194,3.827,195,1.894,196,3.233,197,1.31,198,3.233,199,2.188,200,2.865,201,3.233,202,3.792,203,2.59]],["title/classes/ChangePasswordDto.html",[38,0.101,204,2.058]],["body/classes/ChangePasswordDto.html",[3,0.279,4,0.249,5,0.22,7,0.475,10,1.686,11,0.022,12,0.778,17,2.893,29,1.169,30,0.601,33,1.076,37,0.368,38,0.164,47,0.016,48,0.016,104,0.726,114,2.893,115,3.341,181,2.707,204,2.982,205,1.205,206,4.375,207,2.671,208,1.505,209,4.375,210,3.334,211,4.005,212,3.911,213,2.955,214,4.375,215,4.375,216,4.496,217,4.375,218,3.334,219,4.375,220,4.375,221,4.375,222,4.375,223,4.375,224,3.102,225,4.375,226,4.375,227,2.88,228,3.911,229,2.88,230,2.445,231,2.955,232,3.3,233,2.955,234,3.955,235,3.906,236,1.828,237,2.095,238,1.275,239,2.671,240,2.256,241,2.095,242,3.334,243,3.906,244,3.906,245,3.906,246,1.892,247,2.955]],["title/classes/CreateResultDto.html",[38,0.101,248,2.058]],["body/classes/CreateResultDto.html",[3,0.246,4,0.22,5,0.194,7,0.42,10,2.121,11,0.022,12,0.978,30,0.494,33,0.951,37,0.246,38,0.134,47,0.014,48,0.014,73,2.668,104,0.914,205,1.065,208,1.385,227,3.281,229,3.097,236,1.616,246,2.381,248,2.744,249,5.649,250,2.612,251,3.4,252,3.84,253,2.694,254,2.694,255,2.871,256,3.4,257,4.05,258,6.504,259,3.281,260,6.626,261,4.757,262,4.757,263,4.426,264,3.457,265,3.662,266,2.948,267,3.662,268,3.457,269,3.249,270,3.457,271,3.457,272,3.457,273,4.757,274,3.457,275,5.006]],["title/classes/CreateSpecialtyDto.html",[38,0.101,276,2.058]],["body/classes/CreateSpecialtyDto.html",[3,0.224,4,0.2,5,0.177,7,0.383,10,2.067,11,0.022,12,0.99,29,1.027,30,0.463,33,0.866,37,0.224,38,0.126,47,0.013,48,0.013,104,0.925,205,0.97,208,1.298,227,3.235,229,3.026,232,2.771,236,1.472,246,2.495,253,2.269,254,2.604,255,2.418,257,3.851,263,3.368,265,4.116,267,2.787,269,3.045,275,4.658,276,2.572,277,5.692,278,2.38,279,2.771,280,3.425,281,3.234,282,3.425,283,2.771,284,3.246,285,3.15,286,3.368,287,2.572,288,4.458,289,4.458,290,4.458,291,4.458,292,4.458,293,4.458,294,4.458,295,4.458,296,3.15,297,5.062,298,5.937,299,6.676,300,3.15,301,4.458,302,4.458,303,4.458,304,4.797,305,4.458,306,4.458,307,4.458,308,4.458,309,4.458,310,3.15,311,4.458,312,3.15,313,3.15,314,4.458,315,3.15,316,3.15,317,3.15,318,5.062]],["title/classes/CreateTestDto.html",[38,0.101,319,2.058]],["body/classes/CreateTestDto.html",[3,0.116,4,0.103,5,0.091,7,0.198,10,1.702,11,0.022,12,0.785,15,1.016,17,3.479,19,1.675,21,4.711,23,4.121,25,2.333,29,1.131,30,0.278,33,0.447,37,0.116,38,0.076,47,0.008,48,0.008,73,1.327,104,0.733,117,0.871,203,3.564,205,0.501,208,0.78,224,0.871,227,2.896,229,2.527,232,2.896,236,0.76,246,1.91,251,2.137,252,2.742,253,1.499,254,1.499,255,1.598,256,2.137,267,1.016,286,1.228,319,1.546,320,2.896,321,4.61,322,1.228,323,2.583,324,4.992,325,3.966,326,3.966,327,5.218,328,4.748,329,2.68,330,2.68,331,4.863,332,2.68,333,2.68,334,2.583,335,2.68,336,2.915,337,2.915,338,4.868,339,3.381,340,2.68,341,2.68,342,2.68,343,2.68,344,1.625,345,2.68,346,3.381,347,2.68,348,2.335,349,1.625,350,3.419,351,2.68,352,3.74,353,2.915,354,2.915,355,3.314,356,2.915,357,1.625,358,2.915,359,2.915,360,3.381,361,2.68,362,3.74,363,4.313,364,3.966,365,1.625,366,2.68,367,2.68,368,2.68,369,2.68,370,2.68,371,2.915,372,1.625,373,2.915,374,3.966,375,2.68,376,2.68,377,2.68,378,2.68,379,2.68,380,1.625,381,2.68,382,3.314,383,1.625,384,2.68,385,2.68,386,2.285,387,3.381,388,3.74,389,1.625,390,1.625,391,5.218,392,1.625,393,4.257,394,3.772,395,3.419,396,5.068,397,2.285,398,1.386,399,2.285,400,1.386,401,1.386,402,1.386,403,1.386,404,1.386,405,2.915,406,2.915,407,2.285,408,2.285,409,2.285,410,1.386,411,1.386,412,1.386,413,1.386,414,1.386,415,2.025,416,2.285,417,1.386,418,1.386,419,2.951,420,2.285,421,2.285,422,2.915,423,1.386,424,2.285,425,1.386,426,1.386,427,1.386,428,1.386,429,1.386,430,1.386,431,1.016,432,3.381,433,1.386,434,1.386,435,1.228,436,1.386,437,1.386,438,2.915,439,1.386,440,4.868,441,1.386,442,2.583,443,1.386,444,1.386,445,2.285,446,1.386,447,2.285,448,1.386,449,1.386,450,1.386,451,2.915,452,2.285,453,1.386,454,1.386,455,2.025,456,1.386,457,1.386,458,1.386,459,1.386,460,1.386,461,1.386,462,2.285,463,1.016,464,3.564,465,1.386,466,1.228,467,1.386,468,1.386,469,1.386,470,1.386,471,2.915,472,2.025,473,3.381,474,1.386,475,1.386,476,1.386,477,1.386,478,1.386,479,1.386,480,2.583,481,1.386,482,1.386,483,1.386,484,1.386,485,1.228,486,1.386,487,1.386,488,1.386,489,1.386,490,2.285,491,1.386,492,1.386,493,1.386,494,1.386,495,3.966,496,1.386,497,2.285,498,2.285,499,1.386,500,1.386,501,1.386,502,2.285,503,1.386,504,1.386,505,1.228,506,1.386,507,1.386,508,1.386,509,1.386,510,1.386,511,1.386,512,1.386,513,1.386,514,1.386,515,1.228,516,1.386,517,3.74,518,3.381,519,1.386,520,1.386,521,1.386,522,2.285,523,1.386,524,1.386,525,2.285,526,2.285,527,1.386,528,1.386,529,1.386,530,1.386,531,1.386,532,2.285,533,1.386,534,1.386,535,1.386,536,2.285,537,1.386,538,1.11,539,1.386,540,1.386,541,1.625,542,1.386,543,1.386,544,1.386,545,1.386,546,1.386,547,1.228,548,1.386,549,1.386,550,1.386,551,1.386,552,1.386,553,1.386,554,1.386,555,1.386,556,2.285,557,2.285,558,1.386,559,1.386,560,1.386,561,1.386]],["title/classes/CreateUserDto.html",[38,0.101,237,1.91]],["body/classes/CreateUserDto.html",[3,0.272,4,0.243,5,0.215,7,0.464,10,1.99,11,0.022,12,0.918,17,2.54,29,1.237,30,0.528,33,1.05,37,0.272,38,0.144,47,0.015,48,0.015,103,1.666,104,0.857,114,2.54,115,3.771,180,3.175,181,2.674,205,1.176,207,2.606,208,1.481,209,4.322,210,3.253,211,3.814,213,2.883,214,3.842,215,3.842,216,4.167,217,3.842,218,3.253,219,3.842,220,3.842,221,3.842,222,3.842,223,3.842,224,2.724,225,3.842,226,3.842,227,3.119,229,2.971,231,2.883,232,3.268,233,2.883,234,4.341,236,1.783,237,2.724,243,2.883,244,2.883,245,2.883,246,2.094,562,5.419,563,3.815,564,3.815,565,4.336,566,3.815,567,5.086,568,3.815,569,4.336,570,3.842,571,3.815,572,3.815,573,4.336,574,3.815,575,3.815]],["title/interfaces/JwtPayload.html",[576,2.436,577,2.436]],["body/interfaces/JwtPayload.html",[3,0.381,4,0.34,5,0.301,7,0.65,11,0.021,29,1.219,37,0.381,47,0.019,48,0.019,104,0.751,105,1.729,197,2.38,208,1.83,576,3.652,577,4.293,578,5.347,579,4.559]],["title/injectables/JwtStrategy.html",[77,1.038,149,2.23]],["body/injectables/JwtStrategy.html",[3,0.301,4,0.269,5,0.238,7,0.514,8,1.879,11,0.022,12,0.818,28,1.379,29,0.772,30,0.659,31,0.924,37,0.301,38,0.119,39,1.854,40,1.641,45,1.46,47,0.016,48,0.016,77,1.584,78,1.976,102,1.991,103,1.584,104,0.892,105,1.496,108,1.559,111,3.194,124,1.641,149,3.4,159,2.112,162,3.194,167,3.004,168,2.439,169,2.439,170,2.618,173,2.542,175,4.11,179,2.264,180,2.717,183,2.112,184,3.194,185,2.439,186,1.976,194,3.194,195,2.112,241,2.264,580,3.605,581,5.439,582,4.228,583,5.439,584,5.439,585,4.228,586,3.605,587,2.643,588,4.228,589,4.228,590,4.228,591,3.605,592,2.643,593,4.228,594,4.228,595,4.228,596,4.228,597,4.228,598,3.605,599,4.228,600,4.228,601,4.228]],["title/classes/LoginDto.html",[38,0.101,96,2.23]],["body/classes/LoginDto.html",[3,0.332,4,0.296,5,0.262,7,0.566,10,1.886,11,0.022,12,0.87,29,1.2,30,0.6,33,1.281,37,0.332,38,0.163,47,0.017,48,0.017,96,3.615,104,0.812,108,1.615,180,3.378,181,3.161,205,1.435,208,1.684,211,3.615,227,3.074,229,2.94,232,3.369,234,4.296,236,2.177,246,2.117,565,4.93,573,4.93,602,3.971,603,4.658,604,4.658,605,4.658,606,4.658]],["title/classes/LoginResponseDto.html",[38,0.101,131,2.23]],["body/classes/LoginResponseDto.html",[3,0.335,4,0.299,5,0.265,7,0.572,10,1.898,11,0.022,12,0.875,29,1.062,30,0.604,33,1.294,37,0.335,38,0.133,47,0.018,48,0.018,93,3.974,99,4.633,104,0.817,108,1.696,111,4.396,127,2.35,131,3.637,159,2.906,199,3.357,205,1.449,208,1.694,227,2.72,229,2.953,246,2.13,607,4.011,608,5.819,609,6.6,610,4.961,611,4.704,612,4.704,613,4.011]],["title/modules/PrismaModule.html",[49,1.163,57,1.564]],["body/modules/PrismaModule.html",[3,0.353,4,0.315,5,0.279,11,0.022,30,0.623,31,1.083,37,0.353,38,0.14,47,0.018,48,0.018,49,1.958,51,2.172,52,2.633,57,3.104,62,2.999,63,2.315,64,2.474,66,3.216,170,3.008,614,4.222,615,4.222,616,4.222,617,4.952,618,6.005,619,4.952]],["title/injectables/PrismaService.html",[77,1.038,170,1.471]],["body/injectables/PrismaService.html",[3,0.324,4,0.289,5,0.256,7,0.552,8,1.967,11,0.022,12,0.936,28,1.857,30,0.591,31,0.994,37,0.324,38,0.128,47,0.017,48,0.017,77,1.658,78,2.124,102,1.663,103,1.323,104,0.8,105,1.25,167,3.472,170,2.348,183,2.845,208,1.658,241,3.05,620,3.875,621,5.303,622,6.22,623,5.695,624,6.851,625,5.695,626,6.52,627,4.545,628,4.545,629,4.545,630,4.545,631,2.622,632,4.545,633,4.545,634,4.545,635,4.545]],["title/classes/Result.html",[38,0.101,259,1.667]],["body/classes/Result.html",[3,0.295,4,0.264,5,0.233,7,0.504,11,0.022,12,1.065,29,1.259,37,0.295,38,0.117,47,0.016,48,0.016,104,0.995,105,1.979,197,2.057,205,1.277,208,1.563,253,2.612,254,2.612,255,2.784,257,4.058,259,2.51,279,3.19,280,3.436,282,3.436,283,3.19,284,3.635,636,3.533,637,5.079,638,5.079,639,5.957,640,4.144,641,4.144,642,4.144,643,4.144,644,4.144,645,4.144,646,4.144,647,4.144,648,4.144,649,4.144,650,4.144]],["title/controllers/ResultController.html",[0,1.306,651,2.436]],["body/controllers/ResultController.html",[0,1.175,2,1.175,3,0.229,4,0.204,5,0.18,7,0.39,8,1.56,10,1.95,11,0.022,12,0.899,28,1.95,29,1.207,30,0.675,31,0.702,32,1.851,33,0.883,37,0.229,38,0.091,39,1.407,40,1.246,41,1.851,45,2.065,47,0.017,48,0.014,73,2.408,91,2.006,102,2.188,103,1.741,104,0.84,105,1.645,108,1.664,109,2.424,118,3.267,119,2.824,122,2.006,123,2.006,124,1.246,125,2.824,126,3.738,127,1.603,133,1.603,135,2.006,139,3.546,142,2.006,195,1.603,197,2.247,199,2.606,238,1.85,248,3.273,259,2.795,651,3.085,652,2.736,653,2.256,654,2.606,655,2.111,656,2.111,657,2.736,658,3.25,659,2.736,660,3.209,661,1.603,662,3.085,663,3.209,664,2.192,665,2.736,666,3.851,667,3.209,668,1.851,669,3.413,670,3.209,671,1.851,672,3.546,673,2.424,674,3.413,675,4.517,676,3.209,677,2.192,678,3.015,679,2.736,680,1.603,681,3.413,682,1.603,683,1.851,684,3.209,685,3.209,686,3.209,687,3.209,688,2.192,689,3.209,690,2.736,691,2.736,692,3.209,693,2.424,694,2.736,695,3.209,696,2.424,697,3.209]],["title/modules/ResultModule.html",[49,1.163,58,2.23]],["body/modules/ResultModule.html",[2,2.12,3,0.333,4,0.297,5,0.263,11,0.022,30,0.702,31,1.021,37,0.333,38,0.132,47,0.017,48,0.017,49,1.889,51,2.048,52,2.54,57,3.025,58,4.417,62,2.893,63,2.182,64,2.332,66,3.102,67,3.341,124,1.813,152,2.919,155,2.919,157,2.919,158,2.919,159,2.332,651,4.3,678,3.979,679,3.981,698,3.981,699,3.981,700,4.669,701,4.669,702,4.669]],["title/injectables/ResultService.html",[77,1.038,678,2.058]],["body/injectables/ResultService.html",[3,0.218,4,0.195,5,0.172,7,0.372,8,1.508,11,0.023,12,0.918,28,1.915,29,1.147,30,0.667,31,0.668,37,0.218,38,0.086,39,1.341,40,1.187,45,1.056,47,0.013,48,0.013,77,1.271,78,1.429,102,2.234,103,1.777,104,0.857,105,1.679,108,1.577,127,1.527,167,3.266,168,1.764,169,1.764,170,2.289,173,2.379,179,3.632,183,1.527,185,1.764,186,1.429,197,1.758,203,2.088,238,1.424,248,3.203,253,1.914,254,1.914,255,2.04,259,1.429,263,2.31,265,1.911,269,2.088,280,3.203,281,2.728,282,3.203,587,3.47,592,1.911,631,1.764,653,2.18,654,2.518,655,2.04,656,2.04,657,3.721,658,2.932,661,1.527,664,2.088,668,1.764,671,1.764,672,3.182,678,2.518,680,1.527,681,3.298,682,1.527,703,2.607,704,3.057,705,3.057,706,3.057,707,3.057,708,3.057,709,3.057,710,2.31,711,1.638,712,2.088,713,1.527,714,2.088,715,2.607,716,2.607,717,2.607,718,2.607,719,3.057,720,3.721,721,3.721,722,3.721,723,3.057,724,3.057,725,3.057,726,3.057,727,2.088,728,2.607,729,2.607,730,3.057,731,3.057,732,3.057,733,3.057,734,3.057,735,3.057,736,3.057,737,3.057,738,3.057,739,4.365,740,3.057,741,3.057,742,3.057,743,3.057,744,3.057,745,3.057,746,3.057,747,3.057,748,3.057]],["title/controllers/SpecialtiesController.html",[0,1.306,749,2.436]],["body/controllers/SpecialtiesController.html",[0,1.112,2,1.112,3,0.216,4,0.193,5,0.171,7,0.369,8,1.501,10,1.91,11,0.022,12,0.881,28,1.91,29,1.192,30,0.666,31,0.664,32,1.752,33,0.836,37,0.216,38,0.086,39,1.332,40,1.179,41,1.752,45,2.023,47,0.013,48,0.013,91,1.899,102,2.143,103,1.705,104,0.823,105,1.611,108,1.792,109,2.295,118,2.716,119,2.716,122,1.899,123,1.899,124,1.179,125,2.716,126,3.808,127,1.517,133,2.925,135,1.899,139,3.661,142,1.899,195,2.533,197,2.215,238,1.805,276,3.193,287,3.822,653,2.17,654,2.506,655,2.031,656,2.737,658,3.043,659,2.59,661,1.517,662,2.967,664,2.075,665,2.59,666,3.704,668,1.752,669,2.295,671,1.752,673,2.295,674,3.282,677,2.075,680,1.517,682,1.517,683,1.752,688,2.075,690,2.59,691,2.59,693,2.295,696,2.295,749,2.967,750,2.59,751,1.899,752,3.038,753,2.967,754,3.038,755,3.704,756,4.344,757,3.038,758,2.59,759,3.038,760,3.46,761,3.704,762,3.038,763,2.506,764,2.59,765,3.282,766,3.038,767,3.038,768,2.295,769,3.038,770,3.038,771,3.038,772,2.59,773,3.038,774,3.038]],["title/modules/SpecialtiesModule.html",[49,1.163,59,2.23]],["body/modules/SpecialtiesModule.html",[2,2.12,3,0.333,4,0.297,5,0.263,11,0.022,30,0.702,31,1.021,37,0.333,38,0.132,47,0.017,48,0.017,49,1.889,51,2.048,52,2.54,57,3.025,59,4.417,62,2.893,63,2.182,64,2.332,66,3.102,67,3.341,124,1.813,152,2.919,155,2.919,157,2.919,158,2.919,159,2.332,749,4.3,763,3.979,764,3.981,775,3.981,776,3.981,777,4.669,778,4.669,779,4.669]],["title/injectables/SpecialtiesService.html",[77,1.038,763,2.058]],["body/injectables/SpecialtiesService.html",[3,0.214,4,0.191,5,0.169,7,0.364,8,1.487,11,0.022,12,0.912,28,1.9,29,1.188,30,0.675,31,0.656,37,0.214,38,0.085,39,1.315,40,1.164,45,2.013,47,0.013,48,0.013,77,1.253,78,1.402,102,2.22,103,1.766,104,0.852,105,1.669,108,1.783,114,1.498,127,1.498,145,2.557,167,3.453,168,1.73,169,1.73,170,2.269,173,2.354,179,2.306,183,2.911,185,2.483,186,2.012,197,2.095,199,3.174,238,1.404,276,3.174,287,2.483,431,2.691,587,3.642,592,1.875,631,1.73,653,2.15,654,2.483,655,2.012,656,2.354,658,3.03,661,2.15,664,2.94,668,2.483,671,2.483,680,1.498,682,1.498,711,1.606,712,2.048,713,1.498,714,2.048,751,2.691,760,3.44,763,2.483,765,3.252,780,2.557,781,2.999,782,2.999,783,2.999,784,2.999,785,2.999,786,2.999,787,2.557,788,2.999,789,3.439,790,2.557,791,2.999,792,4.157,793,3.67,794,2.94,795,3.67,796,2.999,797,4.305,798,2.557,799,2.999,800,2.999,801,2.999]],["title/classes/Specialty.html",[38,0.101,287,2.058]],["body/classes/Specialty.html",[3,0.307,4,0.274,5,0.242,7,0.523,11,0.022,12,1.065,29,1.233,37,0.307,38,0.122,47,0.017,48,0.017,104,0.994,105,1.859,197,2.095,205,1.326,208,1.602,246,2.22,253,2.66,254,2.66,255,2.835,257,4.084,279,3.249,280,3.499,281,3.792,282,3.499,283,3.249,284,3.688,287,3.175,802,3.671,803,4.305,804,4.305,805,4.305,806,4.305,807,4.305,808,4.305,809,4.305,810,4.305,811,4.305,812,4.305]],["title/classes/Test.html",[38,0.101,73,1.385]],["body/classes/Test.html",[3,0.301,4,0.269,5,0.238,7,0.514,11,0.022,12,1.069,29,1.277,37,0.301,38,0.119,47,0.016,48,0.016,73,2.465,104,0.998,105,1.747,197,1.879,205,1.303,208,1.584,251,3.4,252,3.4,253,2.385,254,2.385,255,2.542,256,3.4,279,2.913,283,2.913,284,3.138,320,3.828,323,4.11,813,3.605,814,4.228,815,4.228,816,4.228,817,4.228,818,4.228,819,4.228,820,4.228,821,4.228,822,4.228,823,4.228,824,4.228,825,4.228,826,4.228,827,4.228,828,4.228,829,4.228,830,4.228,831,4.228,832,4.228,833,4.228,834,4.228,835,4.228]],["title/controllers/TestController.html",[0,1.306,836,2.436]],["body/controllers/TestController.html",[0,1.143,2,1.143,3,0.222,4,0.199,5,0.176,7,0.38,8,1.531,10,1.828,11,0.022,12,0.843,25,2.071,28,2.107,29,1.08,30,0.67,31,0.683,32,1.802,33,0.859,37,0.222,38,0.088,39,1.37,40,1.213,41,3.415,42,3.828,45,1.936,47,0.013,48,0.013,73,2.617,91,1.953,102,2.052,103,1.632,104,0.787,105,1.542,108,1.717,114,2.214,117,2.374,118,2.77,119,1.953,122,1.953,123,1.953,124,1.213,125,2.77,126,2.77,127,1.56,133,1.56,135,1.953,139,1.953,142,1.953,195,2.573,197,1.779,238,1.828,319,2.971,320,3.17,382,3.348,613,4.779,653,2.214,655,2.071,656,2.071,658,2.956,661,1.56,662,3.027,668,1.802,669,2.36,671,1.802,673,2.36,677,2.133,680,1.56,682,1.56,683,1.802,688,2.133,693,2.36,694,2.663,696,2.36,751,1.953,758,2.663,768,2.36,836,3.027,837,2.663,838,2.663,839,3.778,840,3.124,841,3.124,842,4.235,843,3.124,844,3.124,845,3.027,846,3.22,847,3.778,848,4.432,849,3.124,850,2.971,851,2.663,852,3.348,853,3.124,854,3.124,855,2.663,856,3.124,857,3.124,858,3.124,859,5.151,860,3.124,861,3.124,862,3.124,863,3.124,864,3.124]],["title/modules/TestModule.html",[49,1.163,60,2.23]],["body/modules/TestModule.html",[2,2.117,3,0.332,4,0.296,5,0.262,11,0.022,30,0.702,31,1.018,37,0.332,38,0.132,47,0.017,48,0.017,49,1.886,51,2.042,52,2.536,57,3.023,60,4.415,62,2.888,63,2.177,64,2.326,66,3.097,67,3.336,124,1.808,152,2.911,155,2.911,157,2.911,158,2.911,159,2.326,320,2.495,836,4.296,850,3.976,851,3.971,865,3.971,866,4.658,867,3.971,868,4.658,869,4.658]],["title/injectables/TestService.html",[77,1.038,850,2.058]],["body/injectables/TestService.html",[3,0.202,4,0.18,5,0.159,7,0.344,8,1.426,11,0.022,12,0.857,25,1.323,28,1.747,29,1.085,30,0.653,31,0.619,37,0.202,38,0.08,39,1.242,40,1.099,45,1.684,47,0.012,48,0.012,73,2.08,77,1.202,78,1.323,102,2.085,103,1.658,104,0.8,105,1.567,108,1.748,117,1.517,127,1.414,167,3.338,168,1.633,169,1.633,170,2.209,173,2.278,179,2.212,183,2.063,185,3.091,186,2.504,197,2.174,199,3.091,238,1.59,251,3.047,252,3.349,253,2.349,254,2.349,255,2.504,256,3.349,279,1.517,283,1.517,319,3.091,320,3.185,394,5.176,431,1.77,587,3.047,592,1.77,631,1.633,653,2.063,655,1.93,656,2.278,658,2.676,661,2.063,668,2.382,671,2.382,680,1.414,682,1.414,710,2.139,711,1.517,712,1.934,713,1.414,714,1.934,715,3.521,716,3.521,717,3.521,718,3.521,720,3.521,721,3.521,722,3.521,751,2.581,787,2.414,789,3.329,792,3.12,793,2.414,794,3.329,795,2.414,845,1.934,846,3.349,850,2.382,852,3.12,870,2.414,871,2.831,872,2.831,873,2.831,874,2.831,875,2.831,876,2.414,877,2.414,878,4.129,879,3.521,880,2.831,881,4.129,882,3.521,883,2.831,884,2.831,885,2.831,886,2.414]],["title/classes/UpdateResultDto.html",[38,0.101,672,2.23]],["body/classes/UpdateResultDto.html",[3,0.27,4,0.241,5,0.213,7,0.461,10,1.985,11,0.022,12,0.916,29,1.111,30,0.592,33,1.043,37,0.27,38,0.143,47,0.015,48,0.015,73,2.363,104,0.855,115,3.511,205,1.168,208,1.475,224,2.713,227,3.164,229,2.965,230,2.371,232,3.055,235,4.309,236,1.772,238,1.237,241,2.031,246,2.228,248,2.188,250,2.865,253,2.669,257,3.511,259,2.845,265,3.166,266,3.233,267,3.805,275,4.309,280,3.29,282,3.29,286,3.827,297,4.319,304,4.319,318,4.319,419,3.805,464,3.46,637,4.863,638,4.863,672,3.166,681,2.865,794,3.46,887,5.408,888,5.065,889,3.792,890,6.087,891,5.065,892,5.065,893,5.065,894,3.792,895,5.065,896,3.792,897,3.792]],["title/classes/UpdateSpecialtyDto.html",[38,0.101,760,2.23]],["body/classes/UpdateSpecialtyDto.html",[3,0.382,4,0.341,5,0.302,11,0.022,30,0.653,33,1.475,37,0.382,38,0.151,47,0.019,48,0.019,205,1.652,230,3.352,238,1.749,241,2.872,276,3.094,278,4.052,760,3.936,765,4.052,898,4.572,899,5.363]],["title/classes/UpdateTestDto.html",[38,0.101,846,2.23]],["body/classes/UpdateTestDto.html",[3,0.381,4,0.34,5,0.301,11,0.022,30,0.652,33,1.471,37,0.381,38,0.151,47,0.019,48,0.019,205,1.648,230,3.343,238,1.744,241,2.864,319,3.085,320,2.864,322,4.04,846,3.929,852,4.04,900,4.559,901,5.347]],["title/classes/UpdateUserDto.html",[38,0.101,240,2.058]],["body/classes/UpdateUserDto.html",[3,0.286,4,0.255,5,0.226,7,0.487,10,1.308,11,0.022,12,0.603,17,2.929,29,1.136,30,0.608,33,1.103,37,0.374,38,0.166,47,0.016,48,0.016,104,0.563,114,2.929,115,3.383,181,1.875,204,2.314,205,1.236,206,3.971,207,2.739,208,1.53,209,3.03,211,3.89,213,3.03,214,4.43,215,4.43,216,4.528,217,4.43,219,4.43,220,4.43,221,4.43,222,4.43,223,4.43,224,3.141,225,4.43,226,4.43,227,2.909,229,2.909,230,2.507,231,3.03,232,3.333,233,3.03,234,4.005,235,3.971,236,1.875,237,2.148,238,1.308,239,2.739,240,3.033,241,2.148,242,3.42,243,3.971,244,3.971,245,3.971,246,1.924,247,4.43,902,4.011,903,4.011]],["title/classes/User.html",[38,0.101,108,0.876]],["body/classes/User.html",[3,0.296,4,0.265,5,0.234,7,0.506,11,0.022,12,1.066,29,1.313,37,0.296,38,0.118,47,0.016,48,0.016,103,1.738,104,0.996,105,1.962,108,1.322,180,2.982,181,2.79,197,2.062,205,1.282,208,1.568,279,3.197,283,3.197,284,3.641,348,4.077,713,2.982,904,3.549,905,5.089,906,5.089,907,5.089,908,4.162,909,4.162,910,4.162,911,4.162,912,6.312,913,4.162,914,4.162,915,4.162,916,4.162,917,4.162,918,4.162,919,4.162]],["title/controllers/UserController.html",[0,1.306,920,2.436]],["body/controllers/UserController.html",[0,0.776,2,0.776,3,0.151,4,0.135,5,0.23,7,0.258,8,1.146,10,1.93,11,0.023,12,0.89,15,2.075,25,1.551,28,2.158,29,1.239,30,0.614,31,0.464,32,1.224,33,0.584,37,0.151,38,0.06,39,0.93,40,0.824,41,3.493,42,4.042,44,1.449,45,1.989,47,0.01,48,0.01,91,1.326,102,2.166,103,1.723,104,0.809,105,1.628,106,3.636,108,1.767,114,2.659,115,2.359,117,1.778,118,2.556,119,1.326,122,1.326,123,1.326,124,0.824,125,3.327,126,3.784,133,2.31,135,1.326,139,3.7,142,3.138,180,3.213,181,2.488,195,2.042,197,1.839,200,3.494,204,2.668,237,2.851,238,1.508,239,2.267,240,3.322,653,1.658,654,1.915,655,1.551,656,1.911,658,2.31,661,1.06,662,2.267,674,2.508,677,1.449,680,1.06,682,1.06,683,1.224,688,1.449,761,2.83,768,1.603,772,1.809,838,1.809,845,2.267,855,1.809,920,2.267,921,1.809,922,3.486,923,2.83,924,3.319,925,2.83,926,1.809,927,2.121,928,3.319,929,2.121,930,2.83,931,2.121,932,2.121,933,2.121,934,4.35,935,2.121,936,1.809,937,2.121,938,3.319,939,2.121,940,1.809,941,2.121,942,3.319,943,2.121,944,1.809,945,2.121,946,3.319,947,2.121,948,2.83,949,1.809,950,2.121,951,3.319,952,2.121,953,2.121,954,2.121,955,3.319,956,3.319,957,3.319,958,3.319,959,2.121,960,2.121,961,2.121,962,1.809,963,2.121,964,2.83,965,2.121,966,2.121,967,2.121,968,2.359,969,1.809,970,1.809,971,2.121,972,1.603,973,2.121,974,2.121,975,2.121,976,2.121,977,2.121,978,2.121,979,2.121,980,2.121,981,2.121,982,2.121,983,2.121,984,2.121,985,2.121,986,2.121,987,2.121,988,2.121,989,2.121,990,2.121,991,2.121,992,2.121,993,2.121,994,2.121,995,2.121,996,2.121,997,2.121,998,2.121]],["title/modules/UserModule.html",[49,1.163,61,2.23]],["body/modules/UserModule.html",[2,2.047,3,0.315,4,0.281,5,0.248,11,0.022,30,0.717,31,0.966,37,0.315,38,0.125,44,3.017,47,0.017,48,0.017,49,1.824,51,1.937,52,2.453,57,2.983,61,4.369,62,2.794,63,2.064,64,2.206,66,2.996,67,3.227,124,1.715,152,2.761,153,3.766,154,2.761,155,2.761,157,2.761,158,2.761,159,2.206,160,3.766,161,3.766,162,3.337,163,3.766,164,3.766,920,4.193,968,3.924,969,3.766,972,3.337,999,3.766,1000,4.417,1001,3.766,1002,4.417,1003,4.417,1004,4.417,1005,4.417,1006,4.417]],["title/injectables/UserService.html",[77,1.038,968,2.058]],["body/injectables/UserService.html",[3,0.253,4,0.087,5,0.077,7,0.166,8,0.8,11,0.023,12,0.76,25,0.639,26,1.165,28,1.581,29,1.142,30,0.585,31,0.299,37,0.097,38,0.039,40,0.9,45,1.859,47,0.011,48,0.007,63,0.639,77,0.675,78,0.639,92,2.28,93,0.933,99,2.953,102,1.85,103,1.701,104,0.71,105,1.39,106,2.428,108,1.644,114,0.683,117,0.732,154,0.854,167,3.219,168,1.337,169,0.788,170,1.466,171,3.93,173,1.41,175,2.28,177,1.751,178,1.976,179,3.429,180,3.273,181,2.266,183,2.689,184,2.686,185,3.579,186,2.9,187,2.573,189,1.165,191,1.976,195,1.507,196,1.165,197,2.075,198,1.976,199,3.106,200,3.267,201,1.165,204,2.051,216,1.583,237,1.904,238,0.984,239,1.583,240,2.915,247,1.751,269,1.583,279,1.616,283,1.616,339,2.573,348,1.583,394,5.11,396,1.751,419,1.449,547,1.751,577,2.061,586,1.165,587,2.488,592,0.854,598,3.031,631,0.788,653,1.158,654,1.337,655,1.083,656,2.021,658,1.776,661,1.158,680,0.683,682,0.683,710,1.032,711,0.732,712,0.933,713,1.776,714,0.933,727,0.933,728,1.165,729,1.165,751,1.449,789,1.583,792,3.267,794,3.312,798,1.165,845,0.933,876,1.165,879,3.687,882,1.976,886,1.165,905,1.165,906,1.976,907,1.976,922,2.573,923,1.976,925,1.976,926,1.165,930,1.976,936,1.976,940,1.976,944,1.976,948,1.165,949,1.976,962,1.976,964,1.165,968,1.337,970,1.165,1007,1.165,1008,1.366,1009,1.366,1010,1.366,1011,1.366,1012,1.366,1013,1.366,1014,1.366,1015,1.366,1016,1.366,1017,2.318,1018,1.366,1019,1.976,1020,1.366,1021,1.976,1022,1.165,1023,3.018,1024,3.555,1025,2.318,1026,3.018,1027,3.018,1028,3.018,1029,1.165,1030,1.366,1031,1.366,1032,2.318,1033,4.324,1034,2.318,1035,3.018,1036,3.018,1037,3.018,1038,3.018,1039,3.018,1040,3.018,1041,2.28,1042,3.018,1043,3.018,1044,3.018,1045,3.018,1046,3.018,1047,3.018,1048,3.018,1049,3.979,1050,2.573,1051,3.018,1052,3.018,1053,2.318,1054,3.018,1055,2.573,1056,4.324,1057,3.018,1058,3.018,1059,1.366,1060,1.366,1061,2.318,1062,1.366,1063,1.366,1064,1.366,1065,3.018,1066,1.366,1067,2.318,1068,1.366,1069,2.318,1070,1.366,1071,1.366,1072,1.366,1073,1.366,1074,1.366,1075,1.366,1076,1.366,1077,1.366,1078,1.366,1079,1.366,1080,1.366,1081,2.318,1082,2.318,1083,1.366,1084,2.318,1085,1.366,1086,1.366,1087,2.318,1088,1.366,1089,1.366,1090,1.366,1091,2.318,1092,1.366,1093,1.366,1094,2.318,1095,1.366,1096,1.366,1097,1.366,1098,1.165,1099,2.318,1100,1.366,1101,1.366,1102,2.318,1103,1.165,1104,2.318,1105,1.366,1106,1.366,1107,1.366,1108,1.366,1109,3.018,1110,1.366,1111,2.318,1112,2.318,1113,2.318,1114,2.318,1115,2.318,1116,3.018,1117,1.366,1118,1.366,1119,1.366,1120,1.366,1121,1.366,1122,1.366,1123,2.318,1124,1.366,1125,1.366,1126,1.366,1127,1.366,1128,1.366]],["title/coverage.html",[1129,4.144]],["body/coverage.html",[0,2.239,1,2.102,5,0.173,6,2.624,11,0.022,34,1.775,38,0.196,47,0.013,48,0.013,73,2.162,77,1.874,79,2.624,89,2.102,90,2.624,96,1.924,104,0.432,108,1.076,128,1.775,131,1.924,133,1.537,149,1.924,166,2.624,170,1.269,173,1.438,186,1.438,204,1.775,206,3.313,207,3.489,237,1.648,240,1.775,248,1.775,249,2.624,250,3.313,259,1.438,276,1.775,277,2.624,278,3.313,287,1.775,319,1.775,320,3.152,321,2.624,322,3.313,538,2.102,562,2.624,576,2.102,577,2.102,579,2.624,580,2.624,602,2.624,607,2.624,620,2.624,636,2.624,651,2.102,652,2.624,672,1.924,678,1.775,683,1.775,703,2.624,711,1.648,713,1.537,727,5.027,749,2.102,750,2.624,753,2.102,760,1.924,763,1.775,780,2.624,802,2.624,813,2.624,836,2.102,837,2.624,842,2.325,846,1.924,850,1.775,870,2.624,887,2.624,898,2.624,900,2.624,904,2.624,920,2.102,921,2.624,934,2.325,968,1.775,1007,2.624,1055,4.356,1129,2.624,1130,3.077,1131,3.077,1132,3.077,1133,3.077,1134,6.897,1135,5.109,1136,5.109,1137,5.109,1138,3.077,1139,5.109,1140,6.118,1141,2.624,1142,6.549,1143,2.624,1144,2.624,1145,3.077,1146,3.739,1147,2.624,1148,3.739,1149,3.739,1150,3.739,1151,3.739,1152,3.739,1153,3.739,1154,2.624,1155,3.077,1156,4.385,1157,5.109,1158,3.077,1159,2.624,1160,2.624,1161,3.077,1162,3.077]],["title/dependencies.html",[52,1.88,1163,2.543]],["body/dependencies.html",[11,0.022,31,1.044,33,1.314,38,0.166,44,4.011,47,0.018,48,0.018,52,2.094,87,3.608,124,1.854,154,2.986,159,2.386,177,3.608,236,2.232,591,5.423,631,2.755,972,3.608,1019,4.072,1021,4.072,1022,4.072,1164,6.812,1165,4.776,1166,4.776,1167,4.776,1168,4.776,1169,4.776,1170,4.776,1171,4.776,1172,4.776,1173,4.776,1174,4.776,1175,4.776,1176,4.776,1177,4.776,1178,4.776,1179,4.776,1180,4.776,1181,4.776,1182,4.776,1183,4.776,1184,4.776,1185,4.776,1186,4.776]],["title/miscellaneous/functions.html",[1187,1.864,1188,3.656]],["body/miscellaneous/functions.html",[7,0.628,11,0.021,28,1.686,47,0.019,48,0.019,102,2.255,103,1.794,104,0.866,105,1.695,108,1.616,203,3.532,711,3.301,713,3.078,789,3.532,1098,5.613,1143,4.408,1144,5.613,1159,4.408,1160,4.408,1187,3.232,1188,4.408,1189,5.171,1190,5.171,1191,5.171,1192,5.171]],["title/index.html",[7,0.362,1193,2.037,1194,2.037]],["body/index.html",[11,0.021,15,2.38,17,1.902,19,2.38,21,3.903,23,3.469,24,3.246,25,1.78,47,0.015,48,0.015,81,3.246,224,2.039,259,1.78,331,3.837,334,3.837,355,2.877,386,3.246,415,2.877,419,3.572,431,2.38,435,2.877,442,2.877,455,2.877,463,2.38,464,4.338,466,3.837,480,2.877,505,2.877,515,2.877,570,3.837,1193,2.601,1194,2.601,1195,3.246,1196,3.246,1197,6.351,1198,3.808,1199,3.808,1200,5.079,1201,3.808,1202,3.808,1203,3.808,1204,3.808,1205,3.808,1206,3.808,1207,3.808,1208,3.808,1209,3.808,1210,3.246,1211,5.079,1212,3.808,1213,5.079,1214,5.079,1215,6.351,1216,3.808,1217,3.808,1218,3.808,1219,3.808,1220,3.246,1221,3.246,1222,3.808,1223,5.715,1224,3.808,1225,3.808,1226,3.808,1227,3.808,1228,5.079,1229,5.079,1230,6.533,1231,3.808,1232,5.079,1233,4.33,1234,3.808,1235,3.808,1236,3.808,1237,3.808,1238,3.808,1239,3.246,1240,3.246,1241,3.808,1242,3.808,1243,3.808,1244,3.246,1245,3.808,1246,3.808,1247,3.808,1248,3.808,1249,3.808,1250,3.808,1251,3.808,1252,3.808,1253,3.808,1254,3.808,1255,3.808,1256,3.808,1257,3.808,1258,3.808,1259,3.808,1260,3.808,1261,3.808,1262,3.808,1263,3.808,1264,3.808,1265,3.808,1266,3.808,1267,3.808,1268,3.246,1269,3.808,1270,3.808,1271,3.808,1272,3.246,1273,3.808,1274,3.808,1275,3.808,1276,5.079,1277,3.808,1278,3.808,1279,3.246,1280,3.246,1281,2.601,1282,2.877,1283,3.246,1284,3.808,1285,3.808,1286,3.808,1287,3.808]],["title/license.html",[1193,2.037,1194,2.037,1281,2.037]],["body/license.html",[4,0.375,5,0.233,11,0.02,12,0.167,30,0.201,47,0.008,48,0.006,103,0.323,108,0.273,186,1.64,238,1.144,246,0.709,254,0.487,257,0.641,259,0.906,265,0.694,281,0.694,284,1.118,363,1.464,393,3.287,538,0.758,610,0.947,655,0.906,755,0.947,839,0.947,847,2.635,1041,0.839,1050,1.653,1187,0.694,1195,0.947,1196,0.947,1210,1.653,1221,0.947,1233,2.635,1239,0.947,1240,0.947,1279,2.635,1280,3.287,1281,4.783,1282,4.283,1283,2.635,1288,1.11,1289,1.938,1290,6.503,1291,5.75,1292,1.938,1293,3.091,1294,3.855,1295,1.11,1296,1.11,1297,1.11,1298,1.11,1299,6.556,1300,6.605,1301,1.11,1302,2.58,1303,4.399,1304,1.11,1305,1.938,1306,3.855,1307,1.11,1308,3.508,1309,1.11,1310,1.11,1311,5.96,1312,6.342,1313,2.58,1314,2.58,1315,4.972,1316,3.508,1317,4.148,1318,6.443,1319,3.855,1320,1.11,1321,4.148,1322,1.11,1323,1.11,1324,1.11,1325,3.855,1326,5.121,1327,5.254,1328,2.58,1329,4.972,1330,3.091,1331,2.58,1332,6.53,1333,5.895,1334,1.11,1335,1.11,1336,4.972,1337,1.11,1338,3.855,1339,1.11,1340,1.11,1341,1.11,1342,1.11,1343,1.11,1344,1.11,1345,1.11,1346,2.58,1347,1.938,1348,1.938,1349,3.855,1350,1.938,1351,3.855,1352,2.58,1353,2.58,1354,1.11,1355,5.373,1356,1.938,1357,1.11,1358,1.11,1359,1.11,1360,1.11,1361,1.11,1362,1.11,1363,1.11,1364,4.805,1365,4.399,1366,1.11,1367,3.508,1368,4.399,1369,1.11,1370,1.11,1371,1.938,1372,1.938,1373,1.11,1374,1.11,1375,1.11,1376,1.938,1377,1.938,1378,1.11,1379,2.58,1380,2.58,1381,1.11,1382,3.508,1383,1.11,1384,1.11,1385,1.11,1386,3.855,1387,1.11,1388,1.11,1389,1.11,1390,1.11,1391,1.11,1392,1.11,1393,1.11,1394,1.11,1395,1.11,1396,1.11,1397,1.938,1398,1.11,1399,1.11,1400,1.11,1401,1.938,1402,1.938,1403,1.11,1404,1.11,1405,1.11,1406,2.58,1407,3.091,1408,2.58,1409,1.11,1410,1.11,1411,1.11,1412,1.11,1413,1.11,1414,3.855,1415,2.58,1416,1.938,1417,1.11,1418,1.11,1419,1.11,1420,1.938,1421,3.508,1422,1.11,1423,1.11,1424,1.11,1425,1.11,1426,3.855,1427,1.11,1428,1.938,1429,1.11,1430,1.11,1431,4.616,1432,1.11,1433,1.11,1434,3.091,1435,2.58,1436,1.11,1437,2.58,1438,1.11,1439,1.938,1440,4.616,1441,4.972,1442,2.58,1443,2.58,1444,1.938,1445,1.11,1446,3.091,1447,1.11,1448,3.508,1449,1.938,1450,3.855,1451,1.11,1452,1.11,1453,1.11,1454,2.58,1455,1.11,1456,1.11,1457,1.11,1458,1.11,1459,2.58,1460,1.11,1461,4.148,1462,1.11,1463,1.11,1464,1.11,1465,1.11,1466,1.11,1467,2.58,1468,3.855,1469,1.938,1470,2.58,1471,1.11,1472,2.58,1473,1.11,1474,1.938,1475,1.938,1476,1.938,1477,2.58,1478,1.11,1479,1.11,1480,1.938,1481,1.11,1482,1.11,1483,1.11,1484,1.11,1485,1.11,1486,2.58,1487,1.11,1488,1.938,1489,1.938,1490,2.58,1491,1.11,1492,1.11,1493,1.11,1494,1.11,1495,1.938,1496,2.58,1497,1.938,1498,1.11,1499,1.11,1500,1.938,1501,3.508,1502,3.091,1503,2.58,1504,2.58,1505,1.938,1506,3.091,1507,1.11,1508,2.58,1509,1.11,1510,1.11,1511,1.938,1512,1.938,1513,3.091,1514,1.11,1515,1.11,1516,3.091,1517,3.091,1518,1.11,1519,1.11,1520,1.938,1521,1.11,1522,1.11,1523,3.855,1524,1.11,1525,1.938,1526,4.399,1527,4.616,1528,1.11,1529,1.11,1530,1.11,1531,1.11,1532,1.11,1533,1.11,1534,1.11,1535,1.11,1536,1.11,1537,1.938,1538,1.11,1539,2.199,1540,2.58,1541,1.11,1542,1.938,1543,1.11,1544,1.11,1545,1.11,1546,1.11,1547,1.11,1548,1.11,1549,1.11,1550,1.11,1551,1.938,1552,2.58,1553,1.11,1554,1.938,1555,2.58,1556,3.091,1557,1.11,1558,1.11,1559,1.11,1560,1.11,1561,1.11,1562,1.11,1563,1.11,1564,1.11,1565,1.11,1566,1.11,1567,1.11,1568,1.11,1569,1.11,1570,1.11,1571,1.11,1572,3.091,1573,1.938,1574,1.938,1575,1.11,1576,1.938,1577,1.938,1578,1.11,1579,1.11,1580,1.11,1581,1.11,1582,1.11,1583,1.11,1584,1.938,1585,1.11,1586,1.11,1587,3.091,1588,2.58,1589,1.11,1590,1.938,1591,1.11,1592,1.11,1593,1.11,1594,1.938,1595,1.11,1596,1.11,1597,1.938,1598,1.11,1599,3.091,1600,2.58,1601,1.11,1602,1.11,1603,1.11,1604,1.938,1605,1.11,1606,1.11,1607,1.11,1608,1.938,1609,1.938,1610,1.11,1611,1.11,1612,1.11,1613,1.11,1614,1.11,1615,4.805,1616,1.11,1617,1.11,1618,1.11,1619,1.938,1620,1.11,1621,1.11,1622,1.11,1623,2.58,1624,1.11,1625,1.11,1626,1.11,1627,1.11,1628,1.11,1629,1.11,1630,1.11,1631,1.11,1632,1.11,1633,1.11,1634,1.11,1635,1.11,1636,1.11,1637,1.11,1638,1.11,1639,1.11,1640,1.11,1641,1.11,1642,1.11,1643,1.11,1644,1.11,1645,1.11,1646,1.11,1647,1.11,1648,1.938,1649,1.11,1650,1.11,1651,1.11,1652,1.938,1653,1.938,1654,3.508,1655,1.11,1656,1.11,1657,1.11,1658,1.11,1659,1.11,1660,1.11,1661,1.11,1662,1.11,1663,1.11,1664,1.11,1665,1.11,1666,1.11,1667,1.11,1668,1.11,1669,1.11,1670,1.938,1671,1.11,1672,1.11,1673,1.11,1674,1.11,1675,2.58,1676,1.11,1677,1.11,1678,1.11,1679,1.938,1680,1.11,1681,1.11,1682,1.11,1683,1.11,1684,1.11,1685,1.11,1686,1.11,1687,1.11,1688,1.11,1689,1.11,1690,1.11,1691,1.11,1692,1.11,1693,1.11,1694,1.11,1695,1.11,1696,1.11,1697,1.11,1698,1.11,1699,1.11,1700,1.938,1701,1.11,1702,1.11,1703,1.11,1704,1.11,1705,1.11,1706,1.11,1707,1.11,1708,1.11,1709,1.11,1710,1.11,1711,1.11,1712,3.091,1713,1.938,1714,1.11,1715,1.11,1716,1.11,1717,1.11,1718,1.11,1719,1.11,1720,2.58,1721,1.11,1722,1.11,1723,1.11,1724,1.11,1725,1.11,1726,1.11,1727,1.11,1728,1.938,1729,1.11,1730,1.11,1731,1.11,1732,1.11,1733,1.11,1734,1.11,1735,1.11,1736,1.11,1737,1.11,1738,1.11]],["title/modules.html",[51,2.131]],["body/modules.html",[11,0.019,47,0.019,48,0.019,50,3.541,51,2.274,56,3.241,57,2.274,58,3.241,59,3.241,60,3.241,61,3.241,1220,6.091,1539,6.091,1739,7.144,1740,7.144]],["title/overview.html",[1741,4.144]],["body/overview.html",[2,1.459,11,0.022,34,3.372,47,0.016,48,0.016,50,4.927,51,1.748,52,2.296,53,3.398,54,3.398,55,3.398,56,4.327,57,3.087,58,4.216,59,4.216,60,4.216,61,4.216,62,2.615,63,1.863,64,1.991,78,1.863,128,3.372,146,3.398,148,3.398,149,3.654,170,2.781,205,1.228,576,2.722,614,3.398,615,3.398,616,3.398,678,3.372,698,3.398,699,3.398,763,3.372,775,3.398,776,3.398,850,3.372,865,3.398,867,3.398,968,3.372,999,3.398,1001,3.398,1103,3.398,1741,3.398,1742,3.985,1743,3.985,1744,3.985,1745,3.985]],["title/properties.html",[208,1.248,1163,2.543]],["body/properties.html",[11,0.022,47,0.019,48,0.019,208,1.621,246,2.038,1281,3.804,1282,4.208,1746,5.569,1747,5.569,1748,5.569]],["title/todo.html",[463,1.864,1193,2.037,1194,2.037]],["body/todo.html",[11,0.019,17,2.386,19,2.986,47,0.019,48,0.018,49,1.558,73,1.854,87,3.608,92,4.805,108,1.561,133,2.934,173,2.745,463,2.986,472,5.013,485,3.608,711,2.558,713,3.177,753,3.262,1041,3.608,1244,4.072,1268,4.072,1272,5.007,1749,5.99,1750,6.635,1751,6.935,1752,6.635,1753,6.635,1754,4.776,1755,4.776,1756,4.776,1757,4.776,1758,4.776,1759,4.776,1760,4.776,1761,5.873]],["title/miscellaneous/variables.html",[1187,1.864,1762,3.656]],["body/miscellaneous/variables.html",[7,0.238,11,0.022,15,1.226,17,3.453,19,1.951,21,4.551,23,2.131,25,1.816,43,1.673,45,0.678,47,0.009,48,0.009,73,2.096,103,0.571,104,0.546,108,1.187,117,1.051,133,1.559,167,1.941,173,2.259,179,2.589,180,1.559,181,1.459,183,2.212,186,0.917,194,1.482,195,0.98,211,1.226,224,1.051,238,1.267,246,0.718,251,1.226,252,1.226,253,1.368,254,1.368,255,1.459,256,1.226,267,1.226,280,1.132,281,1.951,282,1.132,323,1.482,328,4.389,331,4.233,334,1.482,336,1.673,337,1.673,338,4.603,346,2.661,348,1.34,352,3.313,353,1.673,354,1.673,355,2.936,356,1.673,358,1.673,359,1.673,360,2.661,362,3.313,363,4.362,371,1.673,373,1.673,382,2.358,387,3.313,388,3.313,396,5.204,397,2.661,398,1.673,399,2.661,400,1.673,401,1.673,402,1.673,403,1.673,404,1.673,405,3.313,406,3.313,407,2.661,408,2.661,409,2.661,410,1.673,411,1.673,412,1.673,413,1.673,414,1.673,415,2.358,416,2.661,417,1.673,418,1.673,419,3.218,420,2.661,421,2.661,422,3.313,423,1.673,424,2.661,425,1.673,426,1.673,427,1.673,428,1.673,429,1.673,430,1.673,431,1.226,432,3.776,433,1.673,434,1.673,435,1.482,436,1.673,437,1.673,438,3.313,439,1.673,440,5.149,441,1.673,442,2.936,443,1.673,444,1.673,445,2.661,446,1.673,447,2.661,448,1.673,449,1.673,450,1.673,451,3.313,452,2.661,453,1.673,454,1.673,455,2.358,456,1.673,457,1.673,458,1.673,459,1.673,460,1.673,461,1.673,462,2.661,463,1.226,464,3.827,465,1.673,466,1.482,467,1.673,468,1.673,469,1.673,470,1.673,471,3.313,472,2.358,473,3.776,474,1.673,475,1.673,476,1.673,477,1.673,478,1.673,479,1.673,480,2.936,481,1.673,482,1.673,483,1.673,484,1.673,485,1.482,486,1.673,487,1.673,488,1.673,489,1.673,490,2.661,491,1.673,492,1.673,493,1.673,494,1.673,496,1.673,497,2.661,498,2.661,499,1.673,500,1.673,501,1.673,502,2.661,503,1.673,504,1.673,505,1.482,506,1.673,507,1.673,508,1.673,509,1.673,510,1.673,511,1.673,512,1.673,513,1.673,514,1.673,515,1.482,516,1.673,517,4.121,518,3.776,519,1.673,520,1.673,521,1.673,522,2.661,523,1.673,524,1.673,525,2.661,526,2.661,527,1.673,528,1.673,529,1.673,530,1.673,531,1.673,532,2.661,533,1.673,534,1.673,535,1.673,536,2.661,537,1.673,538,1.34,539,1.673,540,1.673,542,1.673,543,1.673,544,1.673,545,1.673,546,1.673,547,1.482,548,1.673,549,1.673,550,1.673,551,1.673,552,1.673,553,1.673,554,1.673,555,1.673,556,2.661,557,2.661,558,1.673,559,1.673,560,1.673,561,1.673,569,1.673,570,1.482,621,3.776,656,1.816,683,1.132,727,3.302,753,2.654,790,1.673,842,2.358,877,1.673,934,2.358,1029,1.673,1141,2.661,1146,1.673,1147,2.661,1148,1.673,1149,3.313,1150,1.673,1151,3.313,1152,1.673,1153,3.313,1154,2.661,1187,1.226,1749,1.673,1762,1.673,1763,1.962,1764,3.121,1765,3.121,1766,3.121,1767,3.121,1768,5.773,1769,5.773,1770,1.962,1771,1.962,1772,1.962,1773,1.962,1774,1.962,1775,1.962,1776,1.962,1777,1.962,1778,1.962,1779,5.148,1780,1.962,1781,1.962,1782,1.962,1783,3.121,1784,1.962,1785,1.962,1786,1.962,1787,1.962,1788,1.962,1789,1.962,1790,1.962,1791,1.962,1792,1.962,1793,1.962,1794,1.962]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateResultDto.html":{},"classes/CreateSpecialtyDto.html":{},"classes/CreateTestDto.html":{},"classes/CreateUserDto.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Result.html":{},"controllers/ResultController.html":{},"modules/ResultModule.html":{},"injectables/ResultService.html":{},"controllers/SpecialtiesController.html":{},"modules/SpecialtiesModule.html":{},"injectables/SpecialtiesService.html":{},"classes/Specialty.html":{},"classes/Test.html":{},"controllers/TestController.html":{},"modules/TestModule.html":{},"injectables/TestService.html":{},"classes/UpdateResultDto.html":{},"classes/UpdateSpecialtyDto.html":{},"classes/UpdateTestDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":727,"title":{},"body":{"injectables/ResultService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.0.1",{"_index":1746,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":1180,"title":{},"body":{"dependencies.html":{}}}],["0.13.2",{"_index":1171,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":1170,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":1174,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1134,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1157,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1158,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1135,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1139,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1140,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1145,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1136,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1137,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1156,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1155,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1133,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":1745,"title":{},"body":{"overview.html":{}}}],["1.0.0",{"_index":1177,"title":{},"body":{"dependencies.html":{}}}],["1.1",{"_index":1289,"title":{},"body":{"license.html":{}}}],["1.10",{"_index":1357,"title":{},"body":{"license.html":{}}}],["1.12",{"_index":1378,"title":{},"body":{"license.html":{}}}],["1.13",{"_index":1388,"title":{},"body":{"license.html":{}}}],["1.14",{"_index":1390,"title":{},"body":{"license.html":{}}}],["1.2",{"_index":1301,"title":{},"body":{"license.html":{}}}],["1.3",{"_index":1309,"title":{},"body":{"license.html":{}}}],["1.4",{"_index":1310,"title":{},"body":{"license.html":{}}}],["1.5",{"_index":1324,"title":{},"body":{"license.html":{}}}],["1.7",{"_index":1337,"title":{},"body":{"license.html":{}}}],["1.8",{"_index":1343,"title":{},"body":{"license.html":{}}}],["1.9",{"_index":1345,"title":{},"body":{"license.html":{}}}],["1/2",{"_index":1138,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1793,"title":{},"body":{"miscellaneous/variables.html":{}}}],["10.1",{"_index":1710,"title":{},"body":{"license.html":{}}}],["10.2",{"_index":1475,"title":{},"body":{"license.html":{}}}],["10.3",{"_index":1713,"title":{},"body":{"license.html":{}}}],["10.4",{"_index":1726,"title":{},"body":{"license.html":{}}}],["12",{"_index":719,"title":{},"body":{"injectables/ResultService.html":{}}}],["15",{"_index":1744,"title":{},"body":{"overview.html":{}}}],["2",{"_index":265,"title":{},"body":{"classes/CreateResultDto.html":{},"classes/CreateSpecialtyDto.html":{},"injectables/ResultService.html":{},"classes/UpdateResultDto.html":{},"license.html":{}}}],["2.0",{"_index":1283,"title":{},"body":{"index.html":{},"license.html":{}}}],["2.1",{"_index":1382,"title":{},"body":{"license.html":{}}}],["2.1(b",{"_index":1453,"title":{},"body":{"license.html":{}}}],["2.2",{"_index":1438,"title":{},"body":{"license.html":{}}}],["2.3",{"_index":1445,"title":{},"body":{"license.html":{}}}],["2.4",{"_index":1471,"title":{},"body":{"license.html":{}}}],["2.5",{"_index":1478,"title":{},"body":{"license.html":{}}}],["2.6",{"_index":1485,"title":{},"body":{"license.html":{}}}],["2.7",{"_index":1494,"title":{},"body":{"license.html":{}}}],["200",{"_index":886,"title":{},"body":{"injectables/TestService.html":{},"injectables/UserService.html":{}}}],["24h",{"_index":165,"title":{},"body":{"modules/AuthModule.html":{}}}],["2})@apiproperty({description",{"_index":298,"title":{},"body":{"classes/CreateSpecialtyDto.html":{}}}],["2})@isoptional()@apiproperty({description",{"_index":888,"title":{},"body":{"classes/UpdateResultDto.html":{}}}],["3",{"_index":267,"title":{},"body":{"classes/CreateResultDto.html":{},"classes/CreateSpecialtyDto.html":{},"classes/CreateTestDto.html":{},"classes/UpdateResultDto.html":{},"miscellaneous/variables.html":{}}}],["3.0",{"_index":1384,"title":{},"body":{"license.html":{}}}],["3.0.2",{"_index":1182,"title":{},"body":{"dependencies.html":{}}}],["3.1",{"_index":1496,"title":{},"body":{"license.html":{}}}],["3.2",{"_index":1497,"title":{},"body":{"license.html":{}}}],["3.3",{"_index":1477,"title":{},"body":{"license.html":{}}}],["3.4",{"_index":1470,"title":{},"body":{"license.html":{}}}],["3.5",{"_index":1535,"title":{},"body":{"license.html":{}}}],["30",{"_index":1595,"title":{},"body":{"license.html":{}}}],["30m",{"_index":1006,"title":{},"body":{"modules/UserModule.html":{}}}],["4",{"_index":263,"title":{},"body":{"classes/CreateResultDto.html":{},"classes/CreateSpecialtyDto.html":{},"injectables/ResultService.html":{}}}],["4.0.0",{"_index":1175,"title":{},"body":{"dependencies.html":{}}}],["4.1.1",{"_index":1172,"title":{},"body":{"dependencies.html":{}}}],["4.3.1",{"_index":1167,"title":{},"body":{"dependencies.html":{}}}],["4.5.0",{"_index":1186,"title":{},"body":{"dependencies.html":{}}}],["40",{"_index":575,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["40)@isstring()@isnotempty()@apiproperty({description",{"_index":568,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["5",{"_index":269,"title":{},"body":{"classes/CreateResultDto.html":{},"classes/CreateSpecialtyDto.html":{},"injectables/ResultService.html":{},"injectables/UserService.html":{}}}],["5.1",{"_index":1573,"title":{},"body":{"license.html":{}}}],["5.1.0",{"_index":1168,"title":{},"body":{"dependencies.html":{}}}],["5.2",{"_index":1597,"title":{},"body":{"license.html":{}}}],["5.3",{"_index":1616,"title":{},"body":{"license.html":{}}}],["50",{"_index":538,"title":{},"body":{"classes/CreateTestDto.html":{},"coverage.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["587",{"_index":1040,"title":{},"body":{"injectables/UserService.html":{}}}],["6",{"_index":1743,"title":{},"body":{"overview.html":{}}}],["6.1.2",{"_index":1166,"title":{},"body":{"dependencies.html":{}}}],["6.8.0",{"_index":1173,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":1589,"title":{},"body":{"license.html":{}}}],["7",{"_index":1742,"title":{},"body":{"overview.html":{}}}],["7.2.0",{"_index":1184,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":1103,"title":{},"body":{"injectables/UserService.html":{},"overview.html":{}}}],["80",{"_index":546,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["9.0.0",{"_index":1164,"title":{},"body":{"dependencies.html":{}}}],["ability",{"_index":1694,"title":{},"body":{"license.html":{}}}],["abordar",{"_index":384,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["above",{"_index":1454,"title":{},"body":{"license.html":{}}}],["abranger",{"_index":345,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["absence",{"_index":1463,"title":{},"body":{"license.html":{}}}],["absolutely",{"_index":1543,"title":{},"body":{"license.html":{}}}],["accurate",{"_index":1738,"title":{},"body":{"license.html":{}}}],["acessar",{"_index":1114,"title":{},"body":{"injectables/UserService.html":{}}}],["actions",{"_index":1607,"title":{},"body":{"license.html":{}}}],["add",{"_index":1737,"title":{},"body":{"license.html":{}}}],["addition",{"_index":1358,"title":{},"body":{"license.html":{}}}],["additional",{"_index":1448,"title":{},"body":{"license.html":{}}}],["additionally",{"_index":1519,"title":{},"body":{"license.html":{}}}],["adiciona",{"_index":955,"title":{},"body":{"controllers/UserController.html":{}}}],["adipiscing",{"_index":294,"title":{},"body":{"classes/CreateSpecialtyDto.html":{}}}],["adm",{"_index":942,"title":{},"body":{"controllers/UserController.html":{}}}],["affect",{"_index":1561,"title":{},"body":{"license.html":{}}}],["affero",{"_index":1383,"title":{},"body":{"license.html":{}}}],["against",{"_index":1600,"title":{},"body":{"license.html":{}}}],["agilidade",{"_index":493,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["agree",{"_index":1548,"title":{},"body":{"license.html":{}}}],["agreement",{"_index":1696,"title":{},"body":{"license.html":{}}}],["agreements",{"_index":1618,"title":{},"body":{"license.html":{}}}],["ajuda",{"_index":438,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["ajudou",{"_index":531,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["ajustar",{"_index":487,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["algum",{"_index":520,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["alleging",{"_index":1610,"title":{},"body":{"license.html":{}}}],["allow",{"_index":1678,"title":{},"body":{"license.html":{}}}],["allusers",{"_index":1104,"title":{},"body":{"injectables/UserService.html":{}}}],["allusers.length",{"_index":1106,"title":{},"body":{"injectables/UserService.html":{}}}],["alone",{"_index":1547,"title":{},"body":{"license.html":{}}}],["already",{"_index":1060,"title":{},"body":{"injectables/UserService.html":{}}}],["alta",{"_index":408,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["alter",{"_index":1506,"title":{},"body":{"license.html":{}}}],["além",{"_index":507,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["ambiente",{"_index":1248,"title":{},"body":{"index.html":{}}}],["amet",{"_index":292,"title":{},"body":{"classes/CreateSpecialtyDto.html":{}}}],["analisa",{"_index":510,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["and/or",{"_index":188,"title":{},"body":{"injectables/AuthService.html":{}}}],["anyone",{"_index":1649,"title":{},"body":{"license.html":{}}}],["ao",{"_index":957,"title":{},"body":{"controllers/UserController.html":{}}}],["api",{"_index":1756,"title":{},"body":{"todo.html":{}}}],["apibearerauth",{"_index":125,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ResultController.html":{},"controllers/SpecialtiesController.html":{},"controllers/TestController.html":{},"controllers/UserController.html":{}}}],["apioperation",{"_index":126,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ResultController.html":{},"controllers/SpecialtiesController.html":{},"controllers/TestController.html":{},"controllers/UserController.html":{}}}],["apioperation({summary",{"_index":859,"title":{},"body":{"controllers/TestController.html":{}}}],["apiproperty",{"_index":229,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateResultDto.html":{},"classes/CreateSpecialtyDto.html":{},"classes/CreateTestDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/UpdateResultDto.html":{},"classes/UpdateUserDto.html":{}}}],["apiproperty({description",{"_index":608,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["apitags",{"_index":32,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ResultController.html":{},"controllers/SpecialtiesController.html":{},"controllers/TestController.html":{},"controllers/UserController.html":{}}}],["apitags('auth",{"_index":136,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('result",{"_index":684,"title":{},"body":{"controllers/ResultController.html":{}}}],["apitags('specialtie",{"_index":766,"title":{},"body":{"controllers/SpecialtiesController.html":{}}}],["apitags('status",{"_index":36,"title":{},"body":{"controllers/AppController.html":{}}}],["apitags('test",{"_index":853,"title":{},"body":{"controllers/TestController.html":{}}}],["apitags('user",{"_index":973,"title":{},"body":{"controllers/UserController.html":{}}}],["aplica",{"_index":518,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["aplicação",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"index.html":{}}}],["app",{"_index":628,"title":{},"body":{"injectables/PrismaService.html":{}}}],["app.close",{"_index":635,"title":{},"body":{"injectables/PrismaService.html":{}}}],["app.controller",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":35,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["apparatus",{"_index":1370,"title":{},"body":{"license.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applicable",{"_index":1489,"title":{},"body":{"license.html":{}}}],["application",{"_index":1536,"title":{},"body":{"license.html":{}}}],["apply",{"_index":1670,"title":{},"body":{"license.html":{}}}],["appmodule",{"_index":50,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":34,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["aprendendo",{"_index":433,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["arquitetura",{"_index":422,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["arquivo",{"_index":1285,"title":{},"body":{"index.html":{}}}],["arrayminsize",{"_index":390,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["arrayminsize(3",{"_index":495,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["arrayminsize(5",{"_index":395,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["asserting",{"_index":1601,"title":{},"body":{"license.html":{}}}],["assume",{"_index":1638,"title":{},"body":{"license.html":{}}}],["async",{"_index":167,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/ResultService.html":{},"injectables/SpecialtiesService.html":{},"injectables/TestService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["através",{"_index":334,"title":{},"body":{"classes/CreateTestDto.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["atribuir",{"_index":1758,"title":{},"body":{"todo.html":{}}}],["atributos",{"_index":340,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["attached",{"_index":1314,"title":{},"body":{"license.html":{}}}],["attempt",{"_index":1505,"title":{},"body":{"license.html":{}}}],["atual",{"_index":1119,"title":{},"body":{"injectables/UserService.html":{}}}],["autenticado",{"_index":116,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth",{"_index":92,"title":{},"body":{"controllers/AuthController.html":{},"injectables/UserService.html":{},"todo.html":{}}}],["auth.controller",{"_index":151,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":129,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":89,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authenticated",{"_index":111,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{},"classes/LoginResponseDto.html":{}}}],["authentication",{"_index":100,"title":{},"body":{"controllers/AuthController.html":{}}}],["authguard",{"_index":123,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ResultController.html":{},"controllers/SpecialtiesController.html":{},"controllers/TestController.html":{},"controllers/UserController.html":{}}}],["authmodule",{"_index":56,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["authmodule,testmodule,specialtiesmodule",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["author",{"_index":1748,"title":{},"body":{"properties.html":{}}}],["authorized",{"_index":1644,"title":{},"body":{"license.html":{}}}],["authservice",{"_index":128,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["automatically",{"_index":610,"title":{},"body":{"classes/LoginResponseDto.html":{},"license.html":{}}}],["autores",{"_index":1257,"title":{},"body":{"index.html":{}}}],["available",{"_index":1331,"title":{},"body":{"license.html":{}}}],["avaliar",{"_index":515,"title":{},"body":{"classes/CreateTestDto.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["await",{"_index":183,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/ResultService.html":{},"injectables/SpecialtiesService.html":{},"injectables/TestService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["azevedo",{"_index":1274,"title":{},"body":{"index.html":{}}}],["b",{"_index":1329,"title":{},"body":{"license.html":{}}}],["back",{"_index":1195,"title":{},"body":{"index.html":{},"license.html":{}}}],["backend",{"_index":1229,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":1017,"title":{},"body":{"injectables/UserService.html":{}}}],["badrequestexception('a",{"_index":1118,"title":{},"body":{"injectables/UserService.html":{}}}],["badrequestexception('as",{"_index":1025,"title":{},"body":{"injectables/UserService.html":{}}}],["badrequestexception('error",{"_index":1081,"title":{},"body":{"injectables/UserService.html":{}}}],["badrequestexception('informe",{"_index":1100,"title":{},"body":{"injectables/UserService.html":{}}}],["badrequestexception('token",{"_index":1085,"title":{},"body":{"injectables/UserService.html":{}}}],["barbosa",{"_index":1269,"title":{},"body":{"index.html":{}}}],["baseado",{"_index":491,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["basis",{"_index":1434,"title":{},"body":{"license.html":{}}}],["bcrypt",{"_index":177,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["bcrypt.compare(password",{"_index":193,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hash(dto.password",{"_index":1032,"title":{},"body":{"injectables/UserService.html":{}}}],["bcrypt.hash(obj.password",{"_index":1792,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bcrypt.hash(updateuserdto.newpassword",{"_index":1125,"title":{},"body":{"injectables/UserService.html":{}}}],["become",{"_index":1443,"title":{},"body":{"license.html":{}}}],["behalf",{"_index":1542,"title":{},"body":{"license.html":{}}}],["believes",{"_index":1481,"title":{},"body":{"license.html":{}}}],["beneficial",{"_index":1413,"title":{},"body":{"license.html":{}}}],["benefícios",{"_index":483,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["berteli",{"_index":1262,"title":{},"body":{"index.html":{}}}],["body",{"_index":118,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ResultController.html":{},"controllers/SpecialtiesController.html":{},"controllers/TestController.html":{},"controllers/UserController.html":{}}}],["bomfim",{"_index":1270,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":912,"title":{},"body":{"classes/User.html":{}}}],["bootcamp",{"_index":1198,"title":{},"body":{"index.html":{}}}],["bootstrap",{"_index":1144,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["bring",{"_index":1695,"title":{},"body":{"license.html":{}}}],["brought",{"_index":1681,"title":{},"body":{"license.html":{}}}],["browse",{"_index":1740,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1220,"title":{},"body":{"index.html":{},"modules.html":{}}}],["bruna",{"_index":1268,"title":{},"body":{"index.html":{},"todo.html":{}}}],["bugs",{"_index":403,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["build",{"_index":1251,"title":{},"body":{"index.html":{}}}],["buscadas",{"_index":377,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["buscados",{"_index":341,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["business",{"_index":1687,"title":{},"body":{"license.html":{}}}],["c",{"_index":1462,"title":{},"body":{"license.html":{}}}],["cada",{"_index":347,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["cadastradas",{"_index":731,"title":{},"body":{"injectables/ResultService.html":{}}}],["cadastrados",{"_index":1108,"title":{},"body":{"injectables/UserService.html":{}}}],["caminho",{"_index":508,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["caminhos",{"_index":476,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["campos",{"_index":1752,"title":{},"body":{"todo.html":{}}}],["capacidade",{"_index":326,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["capaz",{"_index":397,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["caracteres",{"_index":225,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["carreiras",{"_index":459,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["carvalho",{"_index":1266,"title":{},"body":{"index.html":{}}}],["case",{"_index":1320,"title":{},"body":{"license.html":{}}}],["catch",{"_index":1097,"title":{},"body":{"injectables/UserService.html":{}}}],["catch(handleerror",{"_index":792,"title":{},"body":{"injectables/SpecialtiesService.html":{},"injectables/TestService.html":{},"injectables/UserService.html":{}}}],["categoria",{"_index":895,"title":{},"body":{"classes/UpdateResultDto.html":{}}}],["category",{"_index":260,"title":{},"body":{"classes/CreateResultDto.html":{}}}],["cause",{"_index":1403,"title":{},"body":{"license.html":{}}}],["caused",{"_index":1457,"title":{},"body":{"license.html":{}}}],["chama",{"_index":477,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["change",{"_index":674,"title":{},"body":{"controllers/ResultController.html":{},"controllers/SpecialtiesController.html":{},"controllers/UserController.html":{}}}],["changed",{"_index":930,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["changepassword",{"_index":922,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["changepassword(id",{"_index":926,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["changepassworddto",{"_index":204,"title":{"classes/ChangePasswordDto.html":{}},"body":{"classes/ChangePasswordDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["changes",{"_index":848,"title":{},"body":{"controllers/TestController.html":{}}}],["chapter",{"_index":348,"title":{},"body":{"classes/CreateTestDto.html":{},"classes/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["character",{"_index":1655,"title":{},"body":{"license.html":{}}}],["charge",{"_index":1511,"title":{},"body":{"license.html":{}}}],["check",{"_index":85,"title":{},"body":{"injectables/AppService.html":{}}}],["choice",{"_index":1474,"title":{},"body":{"license.html":{}}}],["choose",{"_index":1537,"title":{},"body":{"license.html":{}}}],["ci/cd",{"_index":387,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["ci/cd?https://petlove.atlassian.net/wiki/spaces/tec/pages/351666200/playbook",{"_index":541,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["circumstances",{"_index":1645,"title":{},"body":{"license.html":{}}}],["claim",{"_index":1603,"title":{},"body":{"license.html":{}}}],["claim(s",{"_index":1366,"title":{},"body":{"license.html":{}}}],["claims",{"_index":1365,"title":{},"body":{"license.html":{}}}],["class",{"_index":38,"title":{"classes/ChangePasswordDto.html":{},"classes/CreateResultDto.html":{},"classes/CreateSpecialtyDto.html":{},"classes/CreateTestDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Result.html":{},"classes/Specialty.html":{},"classes/Test.html":{},"classes/UpdateResultDto.html":{},"classes/UpdateSpecialtyDto.html":{},"classes/UpdateTestDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateResultDto.html":{},"classes/CreateSpecialtyDto.html":{},"classes/CreateTestDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Result.html":{},"controllers/ResultController.html":{},"modules/ResultModule.html":{},"injectables/ResultService.html":{},"controllers/SpecialtiesController.html":{},"modules/SpecialtiesModule.html":{},"injectables/SpecialtiesService.html":{},"classes/Specialty.html":{},"classes/Test.html":{},"controllers/TestController.html":{},"modules/TestModule.html":{},"injectables/TestService.html":{},"classes/UpdateResultDto.html":{},"classes/UpdateSpecialtyDto.html":{},"classes/UpdateTestDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":205,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateResultDto.html":{},"classes/CreateSpecialtyDto.html":{},"classes/CreateTestDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Result.html":{},"classes/Specialty.html":{},"classes/Test.html":{},"classes/UpdateResultDto.html":{},"classes/UpdateSpecialtyDto.html":{},"classes/UpdateTestDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"overview.html":{}}}],["clear",{"_index":1544,"title":{},"body":{"license.html":{}}}],["clientes",{"_index":506,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["clonando",{"_index":1222,"title":{},"body":{"index.html":{}}}],["clone",{"_index":1223,"title":{},"body":{"index.html":{}}}],["close",{"_index":1062,"title":{},"body":{"injectables/UserService.html":{}}}],["cluster_appmodule",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":146,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":147,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":148,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_prismamodule",{"_index":614,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_exports",{"_index":616,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_providers",{"_index":615,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_resultmodule",{"_index":698,"title":{},"body":{"modules/ResultModule.html":{},"overview.html":{}}}],["cluster_resultmodule_imports",{"_index":700,"title":{},"body":{"modules/ResultModule.html":{}}}],["cluster_resultmodule_providers",{"_index":699,"title":{},"body":{"modules/ResultModule.html":{},"overview.html":{}}}],["cluster_specialtiesmodule",{"_index":775,"title":{},"body":{"modules/SpecialtiesModule.html":{},"overview.html":{}}}],["cluster_specialtiesmodule_imports",{"_index":777,"title":{},"body":{"modules/SpecialtiesModule.html":{}}}],["cluster_specialtiesmodule_providers",{"_index":776,"title":{},"body":{"modules/SpecialtiesModule.html":{},"overview.html":{}}}],["cluster_testmodule",{"_index":865,"title":{},"body":{"modules/TestModule.html":{},"overview.html":{}}}],["cluster_testmodule_imports",{"_index":866,"title":{},"body":{"modules/TestModule.html":{}}}],["cluster_testmodule_providers",{"_index":867,"title":{},"body":{"modules/TestModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":999,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_imports",{"_index":1000,"title":{},"body":{"modules/UserModule.html":{}}}],["cluster_usermodule_providers",{"_index":1001,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["coach",{"_index":454,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["cobra",{"_index":549,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["code",{"_index":1311,"title":{},"body":{"license.html":{}}}],["coisas",{"_index":376,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["colaboradores",{"_index":1205,"title":{},"body":{"index.html":{}}}],["colegas",{"_index":526,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["com",{"_index":25,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/CreateTestDto.html":{},"controllers/TestController.html":{},"injectables/TestService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["comando",{"_index":1226,"title":{},"body":{"index.html":{}}}],["comandos",{"_index":1250,"title":{},"body":{"index.html":{}}}],["combination",{"_index":1302,"title":{},"body":{"license.html":{}}}],["combines",{"_index":1339,"title":{},"body":{"license.html":{}}}],["come",{"_index":1591,"title":{},"body":{"license.html":{}}}],["commercial",{"_index":1664,"title":{},"body":{"license.html":{}}}],["common",{"_index":1396,"title":{},"body":{"license.html":{}}}],["como",{"_index":386,"title":{},"body":{"classes/CreateTestDto.html":{},"index.html":{}}}],["complete",{"_index":839,"title":{},"body":{"controllers/TestController.html":{},"license.html":{}}}],["complexidade",{"_index":409,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["compliance",{"_index":1587,"title":{},"body":{"license.html":{}}}],["compliant",{"_index":1576,"title":{},"body":{"license.html":{}}}],["comply",{"_index":1468,"title":{},"body":{"license.html":{}}}],["comportamentos",{"_index":504,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["computacionais",{"_index":333,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["computational",{"_index":261,"title":{},"body":{"classes/CreateResultDto.html":{}}}],["computationalfundamentals",{"_index":251,"title":{},"body":{"classes/CreateResultDto.html":{},"classes/CreateTestDto.html":{},"classes/Test.html":{},"injectables/TestService.html":{},"miscellaneous/variables.html":{}}}],["computationalfundamentals:string",{"_index":833,"title":{},"body":{"classes/Test.html":{}}}],["computer",{"_index":1661,"title":{},"body":{"license.html":{}}}],["conceito",{"_index":536,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["conceitos",{"_index":545,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["concerning",{"_index":1697,"title":{},"body":{"license.html":{}}}],["conditions",{"_index":1415,"title":{},"body":{"license.html":{}}}],["confirmpassword",{"_index":209,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["conflict",{"_index":1690,"title":{},"body":{"license.html":{}}}],["conhece",{"_index":517,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["conhecer",{"_index":369,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["conhecimento",{"_index":366,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["consectetur",{"_index":293,"title":{},"body":{"classes/CreateSpecialtyDto.html":{}}}],["consegue",{"_index":556,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["consequential",{"_index":1653,"title":{},"body":{"license.html":{}}}],["considerando",{"_index":500,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["consistentes",{"_index":469,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["consistência",{"_index":474,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["console.log(`dto",{"_index":182,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(err",{"_index":1057,"title":{},"body":{"injectables/UserService.html":{}}}],["console.log(file",{"_index":998,"title":{},"body":{"controllers/UserController.html":{}}}],["console.log(info",{"_index":1058,"title":{},"body":{"injectables/UserService.html":{}}}],["console.log(resettoken",{"_index":1086,"title":{},"body":{"injectables/UserService.html":{}}}],["const",{"_index":179,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/ResultService.html":{},"injectables/SpecialtiesService.html":{},"injectables/TestService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["constitutes",{"_index":1642,"title":{},"body":{"license.html":{}}}],["constructor",{"_index":168,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/ResultService.html":{},"injectables/SpecialtiesService.html":{},"injectables/TestService.html":{},"injectables/UserService.html":{}}}],["constructor(prisma",{"_index":169,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/ResultService.html":{},"injectables/SpecialtiesService.html":{},"injectables/TestService.html":{},"injectables/UserService.html":{}}}],["constructor(private",{"_index":39,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{},"controllers/ResultController.html":{},"injectables/ResultService.html":{},"controllers/SpecialtiesController.html":{},"injectables/SpecialtiesService.html":{},"controllers/TestController.html":{},"injectables/TestService.html":{},"controllers/UserController.html":{}}}],["construe",{"_index":1709,"title":{},"body":{"license.html":{}}}],["construed",{"_index":1707,"title":{},"body":{"license.html":{}}}],["construção",{"_index":456,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["construído",{"_index":1253,"title":{},"body":{"index.html":{}}}],["constrói",{"_index":542,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["contained",{"_index":1528,"title":{},"body":{"license.html":{}}}],["contains",{"_index":1362,"title":{},"body":{"license.html":{}}}],["contents",{"_index":1361,"title":{},"body":{"license.html":{}}}],["contingências",{"_index":430,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["contract",{"_index":1406,"title":{},"body":{"license.html":{}}}],["contribute",{"_index":1499,"title":{},"body":{"license.html":{}}}],["contributes",{"_index":1296,"title":{},"body":{"license.html":{}}}],["contribution",{"_index":1308,"title":{},"body":{"license.html":{}}}],["contributions",{"_index":1303,"title":{},"body":{"license.html":{}}}],["contributor",{"_index":1290,"title":{},"body":{"license.html":{}}}],["contributor's",{"_index":1307,"title":{},"body":{"license.html":{}}}],["contributors",{"_index":1614,"title":{},"body":{"license.html":{}}}],["control",{"_index":1397,"title":{},"body":{"license.html":{}}}],["controlar",{"_index":414,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["controlled",{"_index":1395,"title":{},"body":{"license.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ResultController.html":{},"controllers/SpecialtiesController.html":{},"controllers/TestController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ResultController.html":{},"controllers/SpecialtiesController.html":{},"controllers/TestController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":137,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('result",{"_index":685,"title":{},"body":{"controllers/ResultController.html":{}}}],["controller('specialty",{"_index":767,"title":{},"body":{"controllers/SpecialtiesController.html":{}}}],["controller('test",{"_index":854,"title":{},"body":{"controllers/TestController.html":{}}}],["controller('user",{"_index":974,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/ResultController.html":{},"modules/ResultModule.html":{},"controllers/SpecialtiesController.html":{},"modules/SpecialtiesModule.html":{},"controllers/TestController.html":{},"modules/TestModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["controls",{"_index":1394,"title":{},"body":{"license.html":{}}}],["conveyed",{"_index":1356,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1504,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1490,"title":{},"body":{"license.html":{}}}],["correction",{"_index":1641,"title":{},"body":{"license.html":{}}}],["cost",{"_index":1512,"title":{},"body":{"license.html":{}}}],["counter",{"_index":1608,"title":{},"body":{"license.html":{}}}],["courts",{"_index":1682,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":1129,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["covered",{"_index":1299,"title":{},"body":{"license.html":{}}}],["create",{"_index":238,"title":{},"body":{"classes/ChangePasswordDto.html":{},"controllers/ResultController.html":{},"injectables/ResultService.html":{},"controllers/SpecialtiesController.html":{},"injectables/SpecialtiesService.html":{},"controllers/TestController.html":{},"injectables/TestService.html":{},"classes/UpdateResultDto.html":{},"classes/UpdateSpecialtyDto.html":{},"classes/UpdateTestDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["create(@body",{"_index":768,"title":{},"body":{"controllers/SpecialtiesController.html":{},"controllers/TestController.html":{},"controllers/UserController.html":{}}}],["create(@loggeduser",{"_index":686,"title":{},"body":{"controllers/ResultController.html":{}}}],["create(createuserdto",{"_index":931,"title":{},"body":{"controllers/UserController.html":{}}}],["create(dto",{"_index":751,"title":{},"body":{"controllers/SpecialtiesController.html":{},"injectables/SpecialtiesService.html":{},"controllers/TestController.html":{},"injectables/TestService.html":{},"injectables/UserService.html":{}}}],["create(user",{"_index":657,"title":{},"body":{"controllers/ResultController.html":{},"injectables/ResultService.html":{}}}],["createdat",{"_index":279,"title":{},"body":{"classes/CreateSpecialtyDto.html":{},"classes/Result.html":{},"classes/Specialty.html":{},"classes/Test.html":{},"injectables/TestService.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["createdat:date",{"_index":834,"title":{},"body":{"classes/Test.html":{}}}],["createparamdecorator((_",{"_index":1770,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createresultdto",{"_index":248,"title":{"classes/CreateResultDto.html":{}},"body":{"classes/CreateResultDto.html":{},"controllers/ResultController.html":{},"injectables/ResultService.html":{},"classes/UpdateResultDto.html":{},"coverage.html":{}}}],["creates",{"_index":1295,"title":{},"body":{"license.html":{}}}],["createspecialtydto",{"_index":276,"title":{"classes/CreateSpecialtyDto.html":{}},"body":{"classes/CreateSpecialtyDto.html":{},"controllers/SpecialtiesController.html":{},"injectables/SpecialtiesService.html":{},"classes/UpdateSpecialtyDto.html":{},"coverage.html":{}}}],["createtestdto",{"_index":319,"title":{"classes/CreateTestDto.html":{}},"body":{"classes/CreateTestDto.html":{},"controllers/TestController.html":{},"injectables/TestService.html":{},"classes/UpdateTestDto.html":{},"coverage.html":{}}}],["createtestdto,@loggeduser",{"_index":856,"title":{},"body":{"controllers/TestController.html":{}}}],["createuserdto",{"_index":237,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["creation",{"_index":1297,"title":{},"body":{"license.html":{}}}],["creation(s",{"_index":1483,"title":{},"body":{"license.html":{}}}],["cria",{"_index":428,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["cross",{"_index":1609,"title":{},"body":{"license.html":{}}}],["crud",{"_index":1749,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{}}}],["crud.ts",{"_index":1151,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["crud/dto/create",{"_index":321,"title":{},"body":{"classes/CreateTestDto.html":{},"coverage.html":{}}}],["crud/dto/update",{"_index":900,"title":{},"body":{"classes/UpdateTestDto.html":{},"coverage.html":{}}}],["crud/entities/test.entity.ts",{"_index":813,"title":{},"body":{"classes/Test.html":{},"coverage.html":{}}}],["crud/entities/test.entity.ts:10",{"_index":814,"title":{},"body":{"classes/Test.html":{}}}],["crud/entities/test.entity.ts:11",{"_index":815,"title":{},"body":{"classes/Test.html":{}}}],["crud/entities/test.entity.ts:12",{"_index":824,"title":{},"body":{"classes/Test.html":{}}}],["crud/entities/test.entity.ts:2",{"_index":817,"title":{},"body":{"classes/Test.html":{}}}],["crud/entities/test.entity.ts:3",{"_index":822,"title":{},"body":{"classes/Test.html":{}}}],["crud/entities/test.entity.ts:4",{"_index":820,"title":{},"body":{"classes/Test.html":{}}}],["crud/entities/test.entity.ts:5",{"_index":818,"title":{},"body":{"classes/Test.html":{}}}],["crud/entities/test.entity.ts:6",{"_index":821,"title":{},"body":{"classes/Test.html":{}}}],["crud/entities/test.entity.ts:7",{"_index":816,"title":{},"body":{"classes/Test.html":{}}}],["crud/entities/test.entity.ts:8",{"_index":823,"title":{},"body":{"classes/Test.html":{}}}],["crud/entities/test.entity.ts:9",{"_index":819,"title":{},"body":{"classes/Test.html":{}}}],["crud/test.controller.ts",{"_index":837,"title":{},"body":{"controllers/TestController.html":{},"coverage.html":{}}}],["crud/test.controller.ts:25",{"_index":840,"title":{},"body":{"controllers/TestController.html":{}}}],["crud/test.controller.ts:35",{"_index":843,"title":{},"body":{"controllers/TestController.html":{}}}],["crud/test.controller.ts:45",{"_index":849,"title":{},"body":{"controllers/TestController.html":{}}}],["crud/test.controller.ts:55",{"_index":844,"title":{},"body":{"controllers/TestController.html":{}}}],["crud/test.module",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["crud/test.module.ts",{"_index":868,"title":{},"body":{"modules/TestModule.html":{}}}],["crud/test.service.ts",{"_index":870,"title":{},"body":{"injectables/TestService.html":{},"coverage.html":{}}}],["crud/test.service.ts:16",{"_index":871,"title":{},"body":{"injectables/TestService.html":{}}}],["crud/test.service.ts:19",{"_index":872,"title":{},"body":{"injectables/TestService.html":{}}}],["crud/test.service.ts:49",{"_index":873,"title":{},"body":{"injectables/TestService.html":{}}}],["crud/test.service.ts:57",{"_index":875,"title":{},"body":{"injectables/TestService.html":{}}}],["crud/test.service.ts:91",{"_index":874,"title":{},"body":{"injectables/TestService.html":{}}}],["crypto",{"_index":1021,"title":{},"body":{"injectables/UserService.html":{},"dependencies.html":{}}}],["crypto.aes.decrypt",{"_index":1092,"title":{},"body":{"injectables/UserService.html":{}}}],["crypto.aes.encrypt",{"_index":1068,"title":{},"body":{"injectables/UserService.html":{}}}],["ctx",{"_index":1771,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":1773,"title":{},"body":{"miscellaneous/variables.html":{}}}],["current",{"_index":747,"title":{},"body":{"injectables/ResultService.html":{}}}],["currently",{"_index":110,"title":{},"body":{"controllers/AuthController.html":{}}}],["código",{"_index":338,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["códigos",{"_index":543,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["da",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateTestDto.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["dados",{"_index":554,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["damages",{"_index":1654,"title":{},"body":{"license.html":{}}}],["das",{"_index":490,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["data",{"_index":199,"title":{},"body":{"injectables/AuthService.html":{},"classes/LoginResponseDto.html":{},"controllers/ResultController.html":{},"injectables/SpecialtiesService.html":{},"injectables/TestService.html":{},"injectables/UserService.html":{}}}],["data.password",{"_index":1126,"title":{},"body":{"injectables/UserService.html":{}}}],["date",{"_index":284,"title":{},"body":{"classes/CreateSpecialtyDto.html":{},"classes/Result.html":{},"classes/Specialty.html":{},"classes/Test.html":{},"classes/User.html":{},"license.html":{}}}],["days",{"_index":1590,"title":{},"body":{"license.html":{}}}],["de",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateTestDto.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["dealing",{"_index":1492,"title":{},"body":{"license.html":{}}}],["death",{"_index":1671,"title":{},"body":{"license.html":{}}}],["declaratory",{"_index":1605,"title":{},"body":{"license.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateResultDto.html":{},"classes/CreateSpecialtyDto.html":{},"classes/CreateTestDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"controllers/ResultController.html":{},"controllers/SpecialtiesController.html":{},"controllers/TestController.html":{},"classes/UpdateResultDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{}}}],["default",{"_index":1768,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultstrategy",{"_index":158,"title":{},"body":{"modules/AuthModule.html":{},"modules/ResultModule.html":{},"modules/SpecialtiesModule.html":{},"modules/TestModule.html":{},"modules/UserModule.html":{}}}],["defective",{"_index":1637,"title":{},"body":{"license.html":{}}}],["defects",{"_index":1628,"title":{},"body":{"license.html":{}}}],["defendant",{"_index":1683,"title":{},"body":{"license.html":{}}}],["define",{"_index":424,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateResultDto.html":{},"classes/CreateSpecialtyDto.html":{},"classes/CreateTestDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"injectables/PrismaService.html":{},"classes/Result.html":{},"controllers/ResultController.html":{},"injectables/ResultService.html":{},"controllers/SpecialtiesController.html":{},"injectables/SpecialtiesService.html":{},"classes/Specialty.html":{},"classes/Test.html":{},"controllers/TestController.html":{},"injectables/TestService.html":{},"classes/UpdateResultDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"license.html":{}}}],["definido",{"_index":523,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["definidos",{"_index":361,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["definir",{"_index":532,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["definition",{"_index":1399,"title":{},"body":{"license.html":{}}}],["definitions",{"_index":1288,"title":{},"body":{"license.html":{}}}],["definições",{"_index":501,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["deles",{"_index":335,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["deletado",{"_index":845,"title":{},"body":{"controllers/TestController.html":{},"injectables/TestService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["delete",{"_index":195,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/ResultController.html":{},"controllers/SpecialtiesController.html":{},"controllers/TestController.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["delete(':email",{"_index":992,"title":{},"body":{"controllers/UserController.html":{}}}],["delete(':id",{"_index":669,"title":{},"body":{"controllers/ResultController.html":{},"controllers/SpecialtiesController.html":{},"controllers/TestController.html":{}}}],["delete(':id')@apioperation({summary",{"_index":758,"title":{},"body":{"controllers/SpecialtiesController.html":{},"controllers/TestController.html":{}}}],["deleted",{"_index":801,"title":{},"body":{"injectables/SpecialtiesService.html":{}}}],["deletion",{"_index":1359,"title":{},"body":{"license.html":{}}}],["dentro",{"_index":353,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["dependencies",{"_index":52,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/ResultModule.html":{},"modules/SpecialtiesModule.html":{},"modules/TestModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deploy",{"_index":1244,"title":{},"body":{"index.html":{},"todo.html":{}}}],["desafios",{"_index":443,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["describe",{"_index":1560,"title":{},"body":{"license.html":{}}}],["described",{"_index":1328,"title":{},"body":{"license.html":{}}}],["description",{"_index":246,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateResultDto.html":{},"classes/CreateSpecialtyDto.html":{},"classes/CreateTestDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Specialty.html":{},"classes/UpdateResultDto.html":{},"classes/UpdateUserDto.html":{},"license.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["descrição",{"_index":1784,"title":{},"body":{"miscellaneous/variables.html":{}}}],["desenha",{"_index":404,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["desenhar",{"_index":557,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["desenvolve",{"_index":421,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["desenvolvido",{"_index":1199,"title":{},"body":{"index.html":{}}}],["desenvolvimento",{"_index":451,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["design",{"_index":252,"title":{},"body":{"classes/CreateResultDto.html":{},"classes/CreateTestDto.html":{},"classes/Test.html":{},"injectables/TestService.html":{},"miscellaneous/variables.html":{}}}],["design:string",{"_index":830,"title":{},"body":{"classes/Test.html":{}}}],["desirable",{"_index":1732,"title":{},"body":{"license.html":{}}}],["desktop",{"_index":1231,"title":{},"body":{"index.html":{}}}],["detailed",{"_index":1568,"title":{},"body":{"license.html":{}}}],["detalhes",{"_index":1287,"title":{},"body":{"index.html":{}}}],["determinam",{"_index":1207,"title":{},"body":{"index.html":{}}}],["dev",{"_index":1214,"title":{},"body":{"index.html":{}}}],["development",{"_index":1212,"title":{},"body":{"index.html":{}}}],["devidos",{"_index":1753,"title":{},"body":{"todo.html":{}}}],["devpr",{"_index":1216,"title":{},"body":{"index.html":{}}}],["different",{"_index":1515,"title":{},"body":{"license.html":{}}}],["differs",{"_index":1725,"title":{},"body":{"license.html":{}}}],["difundir",{"_index":330,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["direct",{"_index":1401,"title":{},"body":{"license.html":{}}}],["direction",{"_index":1404,"title":{},"body":{"license.html":{}}}],["directly",{"_index":1611,"title":{},"body":{"license.html":{}}}],["directory",{"_index":1736,"title":{},"body":{"license.html":{}}}],["disciplina",{"_index":494,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["disclaimer",{"_index":1623,"title":{},"body":{"license.html":{}}}],["disclaimers",{"_index":1525,"title":{},"body":{"license.html":{}}}],["discussões",{"_index":449,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["display",{"_index":1429,"title":{},"body":{"license.html":{}}}],["distinguishing",{"_index":1716,"title":{},"body":{"license.html":{}}}],["distribute",{"_index":1431,"title":{},"body":{"license.html":{}}}],["distributed",{"_index":1730,"title":{},"body":{"license.html":{}}}],["distributes",{"_index":1444,"title":{},"body":{"license.html":{}}}],["distributing",{"_index":1727,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":1450,"title":{},"body":{"license.html":{}}}],["distributions",{"_index":1565,"title":{},"body":{"license.html":{}}}],["distributors",{"_index":1619,"title":{},"body":{"license.html":{}}}],["docs",{"_index":88,"title":{},"body":{"injectables/AppService.html":{}}}],["doctrines",{"_index":1491,"title":{},"body":{"license.html":{}}}],["document",{"_index":1344,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":1130,"title":{},"body":{"coverage.html":{}}}],["documentação",{"_index":27,"title":{},"body":{"controllers/AppController.html":{}}}],["dolor",{"_index":290,"title":{},"body":{"classes/CreateSpecialtyDto.html":{}}}],["done",{"_index":1759,"title":{},"body":{"todo.html":{}}}],["dos",{"_index":505,"title":{},"body":{"classes/CreateTestDto.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["drafter",{"_index":1708,"title":{},"body":{"license.html":{}}}],["dto",{"_index":658,"title":{},"body":{"controllers/ResultController.html":{},"injectables/ResultService.html":{},"controllers/SpecialtiesController.html":{},"injectables/SpecialtiesService.html":{},"controllers/TestController.html":{},"injectables/TestService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dto.computationalfundamentals",{"_index":718,"title":{},"body":{"injectables/ResultService.html":{},"injectables/TestService.html":{}}}],["dto.confirmpassword",{"_index":1024,"title":{},"body":{"injectables/UserService.html":{}}}],["dto.design",{"_index":716,"title":{},"body":{"injectables/ResultService.html":{},"injectables/TestService.html":{}}}],["dto.email",{"_index":1031,"title":{},"body":{"injectables/UserService.html":{}}}],["dto.name",{"_index":1030,"title":{},"body":{"injectables/UserService.html":{}}}],["dto.password",{"_index":1023,"title":{},"body":{"injectables/UserService.html":{}}}],["dto.person",{"_index":722,"title":{},"body":{"injectables/ResultService.html":{},"injectables/TestService.html":{}}}],["dto.process",{"_index":721,"title":{},"body":{"injectables/ResultService.html":{},"injectables/TestService.html":{}}}],["dto.system",{"_index":720,"title":{},"body":{"injectables/ResultService.html":{},"injectables/TestService.html":{}}}],["dto.test",{"_index":717,"title":{},"body":{"injectables/ResultService.html":{},"injectables/TestService.html":{}}}],["dto.toolshop",{"_index":715,"title":{},"body":{"injectables/ResultService.html":{},"injectables/TestService.html":{}}}],["dto/create",{"_index":680,"title":{},"body":{"controllers/ResultController.html":{},"injectables/ResultService.html":{},"controllers/SpecialtiesController.html":{},"injectables/SpecialtiesService.html":{},"controllers/TestController.html":{},"injectables/TestService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dto/login.dto",{"_index":130,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/login.response.dto",{"_index":132,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/update",{"_index":682,"title":{},"body":{"controllers/ResultController.html":{},"injectables/ResultService.html":{},"controllers/SpecialtiesController.html":{},"injectables/SpecialtiesService.html":{},"controllers/TestController.html":{},"injectables/TestService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["due",{"_index":1554,"title":{},"body":{"license.html":{}}}],["débitos",{"_index":411,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["e",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateTestDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["e1q2u3a4l",{"_index":1077,"title":{},"body":{"injectables/UserService.html":{}}}],["e2e",{"_index":512,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["each",{"_index":393,"title":{},"body":{"classes/CreateTestDto.html":{},"license.html":{}}}],["earlier",{"_index":1334,"title":{},"body":{"license.html":{}}}],["edit",{"_index":951,"title":{},"body":{"controllers/UserController.html":{}}}],["effect",{"_index":1717,"title":{},"body":{"license.html":{}}}],["effective",{"_index":1439,"title":{},"body":{"license.html":{}}}],["elit",{"_index":295,"title":{},"body":{"classes/CreateSpecialtyDto.html":{}}}],["em",{"_index":328,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["email",{"_index":180,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["empresa",{"_index":368,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["enableshutdownhooks",{"_index":623,"title":{},"body":{"injectables/PrismaService.html":{}}}],["enableshutdownhooks(app",{"_index":625,"title":{},"body":{"injectables/PrismaService.html":{}}}],["encontrado",{"_index":882,"title":{},"body":{"injectables/TestService.html":{},"injectables/UserService.html":{}}}],["end",{"_index":1196,"title":{},"body":{"index.html":{},"license.html":{}}}],["enforceable",{"_index":1704,"title":{},"body":{"license.html":{}}}],["engajamento",{"_index":359,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["ensina",{"_index":548,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["entendam",{"_index":482,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["entidade",{"_index":1761,"title":{},"body":{"todo.html":{}}}],["entire",{"_index":1633,"title":{},"body":{"license.html":{}}}],["entities",{"_index":1392,"title":{},"body":{"license.html":{}}}],["entities/jwtchangepassword.entity",{"_index":1020,"title":{},"body":{"injectables/UserService.html":{}}}],["entities/specialty.entity",{"_index":788,"title":{},"body":{"injectables/SpecialtiesService.html":{}}}],["entities/user.entity",{"_index":970,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["entity",{"_index":1294,"title":{},"body":{"license.html":{}}}],["entregando",{"_index":468,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["equipe",{"_index":1200,"title":{},"body":{"index.html":{}}}],["equivalents",{"_index":1493,"title":{},"body":{"license.html":{}}}],["err",{"_index":1056,"title":{},"body":{"injectables/UserService.html":{}}}],["error",{"_index":1098,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["escolher",{"_index":890,"title":{},"body":{"classes/UpdateResultDto.html":{}}}],["escolherem",{"_index":527,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["escutando",{"_index":488,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["especiais",{"_index":226,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["especialidades",{"_index":730,"title":{},"body":{"injectables/ResultService.html":{}}}],["especialista",{"_index":307,"title":{},"body":{"classes/CreateSpecialtyDto.html":{}}}],["essa",{"_index":1115,"title":{},"body":{"injectables/UserService.html":{}}}],["essential",{"_index":1643,"title":{},"body":{"license.html":{}}}],["est",{"_index":431,"title":{},"body":{"classes/CreateTestDto.html":{},"injectables/SpecialtiesService.html":{},"injectables/TestService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["estabelecer",{"_index":329,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["este",{"_index":1277,"title":{},"body":{"index.html":{}}}],["estruturas",{"_index":553,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["estuda",{"_index":434,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["even",{"_index":1666,"title":{},"body":{"license.html":{}}}],["event",{"_index":1617,"title":{},"body":{"license.html":{}}}],["example",{"_index":227,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateResultDto.html":{},"classes/CreateSpecialtyDto.html":{},"classes/CreateTestDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/UpdateResultDto.html":{},"classes/UpdateUserDto.html":{}}}],["excelência",{"_index":427,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["except",{"_index":1461,"title":{},"body":{"license.html":{}}}],["excluding",{"_index":1604,"title":{},"body":{"license.html":{}}}],["exclusion",{"_index":1679,"title":{},"body":{"license.html":{}}}],["exclusive",{"_index":1422,"title":{},"body":{"license.html":{}}}],["executable",{"_index":1317,"title":{},"body":{"license.html":{}}}],["executioncontext",{"_index":1772,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exercising",{"_index":1391,"title":{},"body":{"license.html":{}}}],["exhibit",{"_index":1316,"title":{},"body":{"license.html":{}}}],["exist",{"_index":601,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["existem",{"_index":729,"title":{},"body":{"injectables/ResultService.html":{},"injectables/UserService.html":{}}}],["expectativas",{"_index":460,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["expiresin",{"_index":164,"title":{},"body":{"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["explicitly",{"_index":1581,"title":{},"body":{"license.html":{}}}],["exploit",{"_index":1432,"title":{},"body":{"license.html":{}}}],["export",{"_index":37,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateResultDto.html":{},"classes/CreateSpecialtyDto.html":{},"classes/CreateTestDto.html":{},"classes/CreateUserDto.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Result.html":{},"controllers/ResultController.html":{},"modules/ResultModule.html":{},"injectables/ResultService.html":{},"controllers/SpecialtiesController.html":{},"modules/SpecialtiesModule.html":{},"injectables/SpecialtiesService.html":{},"classes/Specialty.html":{},"classes/Test.html":{},"controllers/TestController.html":{},"modules/TestModule.html":{},"injectables/TestService.html":{},"classes/UpdateResultDto.html":{},"classes/UpdateSpecialtyDto.html":{},"classes/UpdateTestDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":618,"title":{},"body":{"modules/PrismaModule.html":{}}}],["express",{"_index":44,"title":{},"body":{"controllers/AppController.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"dependencies.html":{}}}],["expressed",{"_index":1625,"title":{},"body":{"license.html":{}}}],["extends",{"_index":241,"title":{},"body":{"classes/ChangePasswordDto.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"classes/UpdateResultDto.html":{},"classes/UpdateSpecialtyDto.html":{},"classes/UpdateTestDto.html":{},"classes/UpdateUserDto.html":{}}}],["extent",{"_index":1351,"title":{},"body":{"license.html":{}}}],["extractjwt",{"_index":589,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":596,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["factual",{"_index":1533,"title":{},"body":{"license.html":{}}}],["fail",{"_index":1575,"title":{},"body":{"license.html":{}}}],["fails",{"_index":1585,"title":{},"body":{"license.html":{}}}],["failure",{"_index":1662,"title":{},"body":{"license.html":{}}}],["fair",{"_index":1486,"title":{},"body":{"license.html":{}}}],["false",{"_index":598,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}}}],["features",{"_index":399,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["fee",{"_index":1538,"title":{},"body":{"license.html":{}}}],["feedbacks",{"_index":447,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["felipe",{"_index":1272,"title":{},"body":{"index.html":{},"todo.html":{}}}],["feliz",{"_index":509,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["fifty",{"_index":1409,"title":{},"body":{"license.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateResultDto.html":{},"classes/CreateSpecialtyDto.html":{},"classes/CreateTestDto.html":{},"classes/CreateUserDto.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Result.html":{},"controllers/ResultController.html":{},"modules/ResultModule.html":{},"injectables/ResultService.html":{},"controllers/SpecialtiesController.html":{},"modules/SpecialtiesModule.html":{},"injectables/SpecialtiesService.html":{},"classes/Specialty.html":{},"classes/Test.html":{},"controllers/TestController.html":{},"modules/TestModule.html":{},"injectables/TestService.html":{},"classes/UpdateResultDto.html":{},"classes/UpdateSpecialtyDto.html":{},"classes/UpdateTestDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"license.html":{}}}],["fileinterceptor",{"_index":971,"title":{},"body":{"controllers/UserController.html":{}}}],["files",{"_index":1342,"title":{},"body":{"license.html":{}}}],["finally",{"_index":1582,"title":{},"body":{"license.html":{}}}],["find",{"_index":666,"title":{},"body":{"controllers/ResultController.html":{},"controllers/SpecialtiesController.html":{}}}],["findall",{"_index":653,"title":{},"body":{"controllers/ResultController.html":{},"injectables/ResultService.html":{},"controllers/SpecialtiesController.html":{},"injectables/SpecialtiesService.html":{},"controllers/TestController.html":{},"injectables/TestService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findall(@loggeduser",{"_index":688,"title":{},"body":{"controllers/ResultController.html":{},"controllers/SpecialtiesController.html":{},"controllers/TestController.html":{},"controllers/UserController.html":{}}}],["findall(user",{"_index":661,"title":{},"body":{"controllers/ResultController.html":{},"injectables/ResultService.html":{},"controllers/SpecialtiesController.html":{},"injectables/SpecialtiesService.html":{},"controllers/TestController.html":{},"injectables/TestService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findone",{"_index":654,"title":{},"body":{"controllers/ResultController.html":{},"injectables/ResultService.html":{},"controllers/SpecialtiesController.html":{},"injectables/SpecialtiesService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findone(@param('email",{"_index":987,"title":{},"body":{"controllers/UserController.html":{}}}],["findone(@param('id",{"_index":691,"title":{},"body":{"controllers/ResultController.html":{},"controllers/SpecialtiesController.html":{}}}],["findone(email",{"_index":936,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findone(id",{"_index":664,"title":{},"body":{"controllers/ResultController.html":{},"injectables/ResultService.html":{},"controllers/SpecialtiesController.html":{},"injectables/SpecialtiesService.html":{}}}],["findunique",{"_index":798,"title":{},"body":{"injectables/SpecialtiesService.html":{},"injectables/UserService.html":{}}}],["first",{"_index":1210,"title":{},"body":{"index.html":{},"license.html":{}}}],["fit",{"_index":1630,"title":{},"body":{"license.html":{}}}],["flow",{"_index":465,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["flows",{"_index":473,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["foi",{"_index":453,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["following",{"_index":1240,"title":{},"body":{"index.html":{},"license.html":{}}}],["fora",{"_index":354,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["form",{"_index":1312,"title":{},"body":{"license.html":{}}}],["foto",{"_index":956,"title":{},"body":{"controllers/UserController.html":{}}}],["found",{"_index":1065,"title":{},"body":{"injectables/UserService.html":{}}}],["foundation",{"_index":1711,"title":{},"body":{"license.html":{}}}],["fraca",{"_index":245,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["fraca'})@isnotempty()@apiproperty({description",{"_index":218,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateUserDto.html":{}}}],["fraca'})@isoptional()@apiproperty({description",{"_index":902,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["free",{"_index":1420,"title":{},"body":{"license.html":{}}}],["function",{"_index":1055,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["functions",{"_index":1188,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["fundamentals",{"_index":262,"title":{},"body":{"classes/CreateResultDto.html":{}}}],["fundamentos",{"_index":332,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["função",{"_index":1751,"title":{},"body":{"todo.html":{}}}],["further",{"_index":1522,"title":{},"body":{"license.html":{}}}],["futuras",{"_index":423,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["garantindo",{"_index":479,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["general",{"_index":1380,"title":{},"body":{"license.html":{}}}],["generated",{"_index":609,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["gerencia",{"_index":458,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["gestores",{"_index":1203,"title":{},"body":{"index.html":{}}}],["get('/alltests",{"_index":858,"title":{},"body":{"controllers/TestController.html":{}}}],["get('/alltests')@apioperation({summary",{"_index":841,"title":{},"body":{"controllers/TestController.html":{}}}],["get(':email",{"_index":986,"title":{},"body":{"controllers/UserController.html":{}}}],["get(':id",{"_index":690,"title":{},"body":{"controllers/ResultController.html":{},"controllers/SpecialtiesController.html":{}}}],["get(':id')@apioperation({summary",{"_index":665,"title":{},"body":{"controllers/ResultController.html":{},"controllers/SpecialtiesController.html":{}}}],["get('send/:email",{"_index":979,"title":{},"body":{"controllers/UserController.html":{}}}],["get('send/:email')@apioperation({summary",{"_index":945,"title":{},"body":{"controllers/UserController.html":{}}}],["get('verify/:id",{"_index":976,"title":{},"body":{"controllers/UserController.html":{}}}],["get('verify/:id')@apioperation({summary",{"_index":963,"title":{},"body":{"controllers/UserController.html":{}}}],["get()@apioperation({summary",{"_index":109,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ResultController.html":{},"controllers/SpecialtiesController.html":{}}}],["getappstatus",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":1193,"title":{"index.html":{},"license.html":{},"todo.html":{}},"body":{"index.html":{}}}],["gh",{"_index":1234,"title":{},"body":{"index.html":{}}}],["giovanne",{"_index":1261,"title":{},"body":{"index.html":{}}}],["git",{"_index":466,"title":{},"body":{"classes/CreateTestDto.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["github",{"_index":1230,"title":{},"body":{"index.html":{}}}],["given",{"_index":1715,"title":{},"body":{"license.html":{}}}],["gmail",{"_index":1042,"title":{},"body":{"injectables/UserService.html":{}}}],["gnu",{"_index":1379,"title":{},"body":{"license.html":{}}}],["goodwill",{"_index":1659,"title":{},"body":{"license.html":{}}}],["governed",{"_index":1502,"title":{},"body":{"license.html":{}}}],["grant",{"_index":1349,"title":{},"body":{"license.html":{}}}],["granted",{"_index":1440,"title":{},"body":{"license.html":{}}}],["grants",{"_index":1414,"title":{},"body":{"license.html":{}}}],["guiando",{"_index":489,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["handleerror",{"_index":711,"title":{},"body":{"injectables/ResultService.html":{},"injectables/SpecialtiesService.html":{},"injectables/TestService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"todo.html":{}}}],["handleerror(error",{"_index":1192,"title":{},"body":{"miscellaneous/functions.html":{}}}],["hashedpassword",{"_index":1102,"title":{},"body":{"injectables/UserService.html":{}}}],["having",{"_index":1347,"title":{},"body":{"license.html":{}}}],["held",{"_index":1701,"title":{},"body":{"license.html":{}}}],["hereby",{"_index":1416,"title":{},"body":{"license.html":{}}}],["hereof",{"_index":1699,"title":{},"body":{"license.html":{}}}],["homepage",{"_index":622,"title":{},"body":{"injectables/PrismaService.html":{}}}],["host",{"_index":1037,"title":{},"body":{"injectables/UserService.html":{}}}],["html",{"_index":1051,"title":{},"body":{"injectables/UserService.html":{}}}],["http://localhost:3000",{"_index":1219,"title":{},"body":{"index.html":{}}}],["http://localhost:3000/change/${tokentourl}/${user.id",{"_index":1080,"title":{},"body":{"injectables/UserService.html":{}}}],["http://localhost:3333/api",{"_index":86,"title":{},"body":{"injectables/AppService.html":{}}}],["http://mozilla.org/mpl/2.0",{"_index":1731,"title":{},"body":{"license.html":{}}}],["httpcode",{"_index":120,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpcode(httpstatus.ok",{"_index":138,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpexception",{"_index":876,"title":{},"body":{"injectables/TestService.html":{},"injectables/UserService.html":{}}}],["httpexception('teste",{"_index":885,"title":{},"body":{"injectables/TestService.html":{}}}],["httpexception('usuário",{"_index":1128,"title":{},"body":{"injectables/UserService.html":{}}}],["https://github.com/brunabbomfim",{"_index":1271,"title":{},"body":{"index.html":{}}}],["https://github.com/felipe360flp",{"_index":1275,"title":{},"body":{"index.html":{}}}],["https://github.com/hethus",{"_index":1263,"title":{},"body":{"index.html":{}}}],["https://github.com/jcvalgas",{"_index":1267,"title":{},"body":{"index.html":{}}}],["https://github.com/pedroasdoliveira",{"_index":1260,"title":{},"body":{"index.html":{}}}],["https://github.com/pedroasdoliveira/petlove",{"_index":1227,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":121,"title":{},"body":{"controllers/AuthController.html":{}}}],["id",{"_index":197,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"classes/Result.html":{},"controllers/ResultController.html":{},"injectables/ResultService.html":{},"controllers/SpecialtiesController.html":{},"injectables/SpecialtiesService.html":{},"classes/Specialty.html":{},"classes/Test.html":{},"controllers/TestController.html":{},"injectables/TestService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["id:${user.id",{"_index":1079,"title":{},"body":{"injectables/UserService.html":{}}}],["id:string,@loggeduser",{"_index":863,"title":{},"body":{"controllers/TestController.html":{}}}],["id?:string",{"_index":825,"title":{},"body":{"classes/Test.html":{}}}],["identifier",{"_index":1131,"title":{},"body":{"coverage.html":{}}}],["ignoreexpiration",{"_index":597,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["iguais",{"_index":1028,"title":{},"body":{"injectables/UserService.html":{}}}],["ii",{"_index":1460,"title":{},"body":{"license.html":{}}}],["impactar",{"_index":370,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["impacto",{"_index":511,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["impactos",{"_index":484,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["implementa",{"_index":405,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["implementar",{"_index":398,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["implements",{"_index":632,"title":{},"body":{"injectables/PrismaService.html":{}}}],["implied",{"_index":1449,"title":{},"body":{"license.html":{}}}],["import",{"_index":30,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateResultDto.html":{},"classes/CreateSpecialtyDto.html":{},"classes/CreateTestDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ResultController.html":{},"modules/ResultModule.html":{},"injectables/ResultService.html":{},"controllers/SpecialtiesController.html":{},"modules/SpecialtiesModule.html":{},"injectables/SpecialtiesService.html":{},"controllers/TestController.html":{},"modules/TestModule.html":{},"injectables/TestService.html":{},"classes/UpdateResultDto.html":{},"classes/UpdateSpecialtyDto.html":{},"classes/UpdateTestDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"license.html":{}}}],["imports",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ResultModule.html":{},"modules/SpecialtiesModule.html":{},"modules/TestModule.html":{},"modules/UserModule.html":{}}}],["importância",{"_index":373,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["impossible",{"_index":1557,"title":{},"body":{"license.html":{}}}],["inability",{"_index":1553,"title":{},"body":{"license.html":{}}}],["inaccuracies",{"_index":1534,"title":{},"body":{"license.html":{}}}],["incidental",{"_index":1652,"title":{},"body":{"license.html":{}}}],["include",{"_index":1551,"title":{},"body":{"license.html":{}}}],["included",{"_index":1564,"title":{},"body":{"license.html":{}}}],["includes",{"_index":1393,"title":{},"body":{"license.html":{}}}],["including",{"_index":1321,"title":{},"body":{"license.html":{}}}],["incluir",{"_index":1750,"title":{},"body":{"todo.html":{}}}],["incompatible",{"_index":1325,"title":{},"body":{"license.html":{}}}],["incurred",{"_index":1550,"title":{},"body":{"license.html":{}}}],["indemnify",{"_index":1549,"title":{},"body":{"license.html":{}}}],["indemnity",{"_index":1540,"title":{},"body":{"license.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateResultDto.html":{},"classes/CreateSpecialtyDto.html":{},"classes/CreateTestDto.html":{},"classes/CreateUserDto.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"injectables/PrismaService.html":{},"classes/Result.html":{},"controllers/ResultController.html":{},"injectables/ResultService.html":{},"controllers/SpecialtiesController.html":{},"injectables/SpecialtiesService.html":{},"classes/Specialty.html":{},"classes/Test.html":{},"controllers/TestController.html":{},"injectables/TestService.html":{},"classes/UpdateResultDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["indirect",{"_index":1402,"title":{},"body":{"license.html":{}}}],["indirectly",{"_index":1612,"title":{},"body":{"license.html":{}}}],["individuais",{"_index":1209,"title":{},"body":{"index.html":{}}}],["individual",{"_index":1292,"title":{},"body":{"license.html":{}}}],["inestapplication",{"_index":626,"title":{},"body":{"injectables/PrismaService.html":{}}}],["influence",{"_index":280,"title":{},"body":{"classes/CreateSpecialtyDto.html":{},"classes/Result.html":{},"injectables/ResultService.html":{},"classes/Specialty.html":{},"classes/UpdateResultDto.html":{},"miscellaneous/variables.html":{}}}],["influencediff",{"_index":738,"title":{},"body":{"injectables/ResultService.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateResultDto.html":{},"classes/CreateSpecialtyDto.html":{},"classes/CreateTestDto.html":{},"classes/CreateUserDto.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Result.html":{},"controllers/ResultController.html":{},"modules/ResultModule.html":{},"injectables/ResultService.html":{},"controllers/SpecialtiesController.html":{},"modules/SpecialtiesModule.html":{},"injectables/SpecialtiesService.html":{},"classes/Specialty.html":{},"classes/Test.html":{},"controllers/TestController.html":{},"modules/TestModule.html":{},"injectables/TestService.html":{},"classes/UpdateResultDto.html":{},"classes/UpdateSpecialtyDto.html":{},"classes/UpdateTestDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["inform",{"_index":1500,"title":{},"body":{"license.html":{}}}],["informadas",{"_index":1027,"title":{},"body":{"injectables/UserService.html":{}}}],["information",{"_index":761,"title":{},"body":{"controllers/SpecialtiesController.html":{},"controllers/UserController.html":{}}}],["informed",{"_index":1668,"title":{},"body":{"license.html":{}}}],["infringed",{"_index":1371,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":1602,"title":{},"body":{"license.html":{}}}],["infringements",{"_index":1456,"title":{},"body":{"license.html":{}}}],["infringes",{"_index":1613,"title":{},"body":{"license.html":{}}}],["infringing",{"_index":1632,"title":{},"body":{"license.html":{}}}],["initial",{"_index":1313,"title":{},"body":{"license.html":{}}}],["initiate",{"_index":1598,"title":{},"body":{"license.html":{}}}],["injectable",{"_index":77,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/ResultService.html":{},"injectables/SpecialtiesService.html":{},"injectables/TestService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/ResultService.html":{},"injectables/SpecialtiesService.html":{},"injectables/TestService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":78,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/ResultService.html":{},"injectables/SpecialtiesService.html":{},"injectables/TestService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["injury",{"_index":1673,"title":{},"body":{"license.html":{}}}],["inserir",{"_index":1783,"title":{},"body":{"miscellaneous/variables.html":{}}}],["instalação",{"_index":1242,"title":{},"body":{"index.html":{}}}],["install",{"_index":1243,"title":{},"body":{"index.html":{}}}],["integração",{"_index":513,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["intellectual",{"_index":1423,"title":{},"body":{"license.html":{}}}],["intended",{"_index":1487,"title":{},"body":{"license.html":{}}}],["interface",{"_index":576,"title":{"interfaces/JwtPayload.html":{}},"body":{"interfaces/JwtPayload.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":578,"title":{},"body":{"interfaces/JwtPayload.html":{}}}],["intermedeia",{"_index":448,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["ipsum",{"_index":289,"title":{},"body":{"classes/CreateSpecialtyDto.html":{}}}],["isadmin",{"_index":713,"title":{},"body":{"injectables/ResultService.html":{},"injectables/SpecialtiesService.html":{},"injectables/TestService.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"todo.html":{}}}],["isadmin(user",{"_index":789,"title":{},"body":{"injectables/SpecialtiesService.html":{},"injectables/TestService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["isarray",{"_index":391,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["isemail",{"_index":573,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{}}}],["ishashvalid",{"_index":192,"title":{},"body":{"injectables/AuthService.html":{}}}],["isnotempty",{"_index":234,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/UpdateUserDto.html":{}}}],["isnotempty()@isemail()@apiproperty({description",{"_index":564,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isnumber",{"_index":275,"title":{},"body":{"classes/CreateResultDto.html":{},"classes/CreateSpecialtyDto.html":{},"classes/UpdateResultDto.html":{}}}],["isnumber()@apiproperty({description",{"_index":258,"title":{},"body":{"classes/CreateResultDto.html":{}}}],["isnumber({maxdecimalplaces",{"_index":297,"title":{},"body":{"classes/CreateSpecialtyDto.html":{},"classes/UpdateResultDto.html":{}}}],["isoptional",{"_index":235,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/UpdateResultDto.html":{},"classes/UpdateUserDto.html":{}}}],["isso",{"_index":550,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["isstring",{"_index":232,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateSpecialtyDto.html":{},"classes/CreateTestDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/UpdateResultDto.html":{},"classes/UpdateUserDto.html":{}}}],["isstring()@apiproperty({description",{"_index":286,"title":{},"body":{"classes/CreateSpecialtyDto.html":{},"classes/CreateTestDto.html":{},"classes/UpdateResultDto.html":{}}}],["isstring()@isnotempty()@apiproperty({description",{"_index":605,"title":{},"body":{"classes/LoginDto.html":{}}}],["isstring()@isnotempty()@apiproperty({example",{"_index":210,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateUserDto.html":{}}}],["isstring()@isnotempty()@isemail()@apiproperty({description",{"_index":603,"title":{},"body":{"classes/LoginDto.html":{}}}],["isstring({each",{"_index":324,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["isvalided",{"_index":637,"title":{},"body":{"classes/Result.html":{},"classes/UpdateResultDto.html":{}}}],["isverified",{"_index":905,"title":{},"body":{"classes/User.html":{},"injectables/UserService.html":{}}}],["j",{"_index":452,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["javascript",{"_index":1254,"title":{},"body":{"index.html":{}}}],["jira",{"_index":467,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["joão",{"_index":1264,"title":{},"body":{"index.html":{}}}],["js",{"_index":1022,"title":{},"body":{"injectables/UserService.html":{},"dependencies.html":{}}}],["judgment",{"_index":1606,"title":{},"body":{"license.html":{}}}],["judicial",{"_index":1558,"title":{},"body":{"license.html":{}}}],["junior",{"_index":304,"title":{},"body":{"classes/CreateSpecialtyDto.html":{},"classes/UpdateResultDto.html":{}}}],["jurisdiction",{"_index":1552,"title":{},"body":{"license.html":{}}}],["jurisdictions",{"_index":1677,"title":{},"body":{"license.html":{}}}],["jwt",{"_index":159,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"classes/LoginResponseDto.html":{},"modules/ResultModule.html":{},"modules/SpecialtiesModule.html":{},"modules/TestModule.html":{},"modules/UserModule.html":{},"dependencies.html":{}}}],["jwt.strategy",{"_index":156,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtfromrequest",{"_index":595,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":153,"title":{},"body":{"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["jwtmodule.register",{"_index":160,"title":{},"body":{"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["jwtpayload",{"_index":577,"title":{"interfaces/JwtPayload.html":{}},"body":{"interfaces/JwtPayload.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["jwtservice",{"_index":171,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["jwtstrategy",{"_index":149,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["jwtverify",{"_index":1094,"title":{},"body":{"injectables/UserService.html":{}}}],["jwtverify.id",{"_index":1099,"title":{},"body":{"injectables/UserService.html":{}}}],["kind",{"_index":1624,"title":{},"body":{"license.html":{}}}],["known",{"_index":1532,"title":{},"body":{"license.html":{}}}],["language",{"_index":1706,"title":{},"body":{"license.html":{}}}],["larger",{"_index":1338,"title":{},"body":{"license.html":{}}}],["later",{"_index":1385,"title":{},"body":{"license.html":{}}}],["law",{"_index":1675,"title":{},"body":{"license.html":{}}}],["laws",{"_index":1688,"title":{},"body":{"license.html":{}}}],["lead",{"_index":309,"title":{},"body":{"classes/CreateSpecialtyDto.html":{}}}],["learn",{"_index":1232,"title":{},"body":{"index.html":{}}}],["legal",{"_index":1293,"title":{},"body":{"license.html":{}}}],["length",{"_index":574,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["length(15",{"_index":567,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["lesser",{"_index":1381,"title":{},"body":{"license.html":{}}}],["letras",{"_index":220,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["level",{"_index":302,"title":{},"body":{"classes/CreateSpecialtyDto.html":{}}}],["liability",{"_index":1527,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1650,"title":{},"body":{"license.html":{}}}],["licensable",{"_index":1346,"title":{},"body":{"license.html":{}}}],["license",{"_index":1281,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["license(s",{"_index":1520,"title":{},"body":{"license.html":{}}}],["license.1.6",{"_index":1335,"title":{},"body":{"license.html":{}}}],["license.md",{"_index":1286,"title":{},"body":{"index.html":{}}}],["licenses",{"_index":1327,"title":{},"body":{"license.html":{}}}],["licensing",{"_index":1451,"title":{},"body":{"license.html":{}}}],["licença",{"_index":1276,"title":{},"body":{"index.html":{}}}],["lidera",{"_index":425,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["limit",{"_index":1488,"title":{},"body":{"license.html":{}}}],["limitation",{"_index":1368,"title":{},"body":{"license.html":{}}}],["limitations",{"_index":1446,"title":{},"body":{"license.html":{}}}],["limpo",{"_index":388,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["link",{"_index":537,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["list",{"_index":662,"title":{},"body":{"controllers/ResultController.html":{},"controllers/SpecialtiesController.html":{},"controllers/TestController.html":{},"controllers/UserController.html":{}}}],["literal",{"_index":584,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["litigation",{"_index":1599,"title":{},"body":{"license.html":{}}}],["local",{"_index":1176,"title":{},"body":{"dependencies.html":{}}}],["location",{"_index":1734,"title":{},"body":{"license.html":{}}}],["logado",{"_index":795,"title":{},"body":{"injectables/SpecialtiesService.html":{},"injectables/TestService.html":{}}}],["logged",{"_index":134,"title":{},"body":{"controllers/AuthController.html":{}}}],["loggeduser",{"_index":133,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ResultController.html":{},"controllers/SpecialtiesController.html":{},"controllers/TestController.html":{},"controllers/UserController.html":{},"coverage.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["login",{"_index":93,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginResponseDto.html":{},"injectables/UserService.html":{}}}],["login(@body",{"_index":140,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(logindto",{"_index":95,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["logindto",{"_index":96,"title":{"classes/LoginDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginDto.html":{},"coverage.html":{}}}],["loginresponsedto",{"_index":131,"title":{"classes/LoginResponseDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginResponseDto.html":{},"coverage.html":{}}}],["logos",{"_index":1466,"title":{},"body":{"license.html":{}}}],["look",{"_index":1239,"title":{},"body":{"index.html":{},"license.html":{}}}],["lorem",{"_index":288,"title":{},"body":{"classes/CreateSpecialtyDto.html":{}}}],["loss",{"_index":1658,"title":{},"body":{"license.html":{}}}],["losses",{"_index":1665,"title":{},"body":{"license.html":{}}}],["lost",{"_index":1656,"title":{},"body":{"license.html":{}}}],["love",{"_index":1048,"title":{},"body":{"injectables/UserService.html":{}}}],["made",{"_index":1330,"title":{},"body":{"license.html":{}}}],["maildata",{"_index":1046,"title":{},"body":{"injectables/UserService.html":{}}}],["maintains",{"_index":1684,"title":{},"body":{"license.html":{}}}],["mais",{"_index":435,"title":{},"body":{"classes/CreateTestDto.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["maiúsculas",{"_index":221,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["make",{"_index":847,"title":{},"body":{"controllers/TestController.html":{},"license.html":{}}}],["makes",{"_index":1473,"title":{},"body":{"license.html":{}}}],["making",{"_index":1372,"title":{},"body":{"license.html":{}}}],["malfunction",{"_index":1663,"title":{},"body":{"license.html":{}}}],["management",{"_index":1405,"title":{},"body":{"license.html":{}}}],["manager",{"_index":524,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["manner",{"_index":1510,"title":{},"body":{"license.html":{}}}],["manualmente",{"_index":499,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["maquina",{"_index":1224,"title":{},"body":{"index.html":{}}}],["marks",{"_index":1465,"title":{},"body":{"license.html":{}}}],["matches",{"_index":233,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["matches(/((?=.*\\d)|(?=.*\\w+))(?![.\\n])(?=.*[a",{"_index":244,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["matching",{"_index":48,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateResultDto.html":{},"classes/CreateSpecialtyDto.html":{},"classes/CreateTestDto.html":{},"classes/CreateUserDto.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Result.html":{},"controllers/ResultController.html":{},"modules/ResultModule.html":{},"injectables/ResultService.html":{},"controllers/SpecialtiesController.html":{},"modules/SpecialtiesModule.html":{},"injectables/SpecialtiesService.html":{},"classes/Specialty.html":{},"classes/Test.html":{},"controllers/TestController.html":{},"modules/TestModule.html":{},"injectables/TestService.html":{},"classes/UpdateResultDto.html":{},"classes/UpdateSpecialtyDto.html":{},"classes/UpdateTestDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["material",{"_index":1340,"title":{},"body":{"license.html":{}}}],["math.abs(influencediff",{"_index":744,"title":{},"body":{"injectables/ResultService.html":{}}}],["math.abs(persondiff",{"_index":741,"title":{},"body":{"injectables/ResultService.html":{}}}],["math.abs(processdiff",{"_index":743,"title":{},"body":{"injectables/ResultService.html":{}}}],["math.abs(systemdiff",{"_index":740,"title":{},"body":{"injectables/ResultService.html":{}}}],["math.abs(technologydiff",{"_index":742,"title":{},"body":{"injectables/ResultService.html":{}}}],["matter",{"_index":1698,"title":{},"body":{"license.html":{}}}],["maturidade",{"_index":492,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["maxdecimalplaces",{"_index":318,"title":{},"body":{"classes/CreateSpecialtyDto.html":{},"classes/UpdateResultDto.html":{}}}],["maximum",{"_index":1350,"title":{},"body":{"license.html":{}}}],["means",{"_index":1291,"title":{},"body":{"license.html":{}}}],["melhor",{"_index":529,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["melhorar",{"_index":336,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["menos",{"_index":525,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["mentora",{"_index":450,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["merchantable",{"_index":1629,"title":{},"body":{"license.html":{}}}],["message",{"_index":114,"title":{},"body":{"controllers/AuthController.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateUserDto.html":{},"injectables/SpecialtiesService.html":{},"controllers/TestController.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["message:`${user.name",{"_index":144,"title":{},"body":{"controllers/AuthController.html":{}}}],["metadata",{"_index":1179,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":1369,"title":{},"body":{"license.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/ResultController.html":{},"injectables/ResultService.html":{},"controllers/SpecialtiesController.html":{},"injectables/SpecialtiesService.html":{},"controllers/TestController.html":{},"injectables/TestService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["minlength",{"_index":231,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["minlength(6",{"_index":243,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["minlength(6)@isstring()@matches(/((?=.*\\d)|(?=.*\\w+))(?![.\\n])(?=.*[a",{"_index":213,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["minúsculas",{"_index":222,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["miscellaneous",{"_index":1187,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["modification",{"_index":1360,"title":{},"body":{"license.html":{}}}],["modifications",{"_index":1319,"title":{},"body":{"license.html":{}}}],["modified",{"_index":1720,"title":{},"body":{"license.html":{}}}],["modify",{"_index":1428,"title":{},"body":{"license.html":{}}}],["modulares",{"_index":544,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["module",{"_index":49,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/ResultModule.html":{},"modules/SpecialtiesModule.html":{},"modules/TestModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/ResultModule.html":{},"modules/SpecialtiesModule.html":{},"modules/TestModule.html":{},"modules/UserModule.html":{},"todo.html":{}}}],["modules",{"_index":51,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/ResultModule.html":{},"modules/SpecialtiesModule.html":{},"modules/TestModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["monitora",{"_index":417,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["monitorar",{"_index":516,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["more",{"_index":1233,"title":{},"body":{"index.html":{},"license.html":{}}}],["moreover",{"_index":1592,"title":{},"body":{"license.html":{}}}],["mozilla",{"_index":1279,"title":{},"body":{"index.html":{},"license.html":{}}}],["mpl",{"_index":1729,"title":{},"body":{"license.html":{}}}],["mudanças",{"_index":471,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["muito",{"_index":217,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["multermodule",{"_index":1004,"title":{},"body":{"modules/UserModule.html":{}}}],["multermodule.register({dest:'./upload",{"_index":1005,"title":{},"body":{"modules/UserModule.html":{}}}],["multis",{"_index":559,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["multithreading",{"_index":555,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["média",{"_index":407,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["múltiplos",{"_index":561,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["n",{"_index":83,"title":{},"body":{"injectables/AppService.html":{}}}],["na",{"_index":455,"title":{},"body":{"classes/CreateTestDto.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["name",{"_index":103,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/ResultController.html":{},"injectables/ResultService.html":{},"controllers/SpecialtiesController.html":{},"injectables/SpecialtiesService.html":{},"controllers/TestController.html":{},"injectables/TestService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["near",{"_index":745,"title":{},"body":{"injectables/ResultService.html":{}}}],["necessary",{"_index":1467,"title":{},"body":{"license.html":{}}}],["necessário",{"_index":437,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["negligence",{"_index":1648,"title":{},"body":{"license.html":{}}}],["nessa",{"_index":342,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["nesses",{"_index":378,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["nest.js",{"_index":1256,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":31,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ResultController.html":{},"modules/ResultModule.html":{},"injectables/ResultService.html":{},"controllers/SpecialtiesController.html":{},"modules/SpecialtiesModule.html":{},"injectables/SpecialtiesService.html":{},"controllers/TestController.html":{},"modules/TestModule.html":{},"injectables/TestService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":1165,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":154,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":124,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"controllers/ResultController.html":{},"modules/ResultModule.html":{},"controllers/SpecialtiesController.html":{},"modules/SpecialtiesModule.html":{},"controllers/TestController.html":{},"modules/TestModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":972,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":33,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateResultDto.html":{},"classes/CreateSpecialtyDto.html":{},"classes/CreateTestDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"controllers/ResultController.html":{},"controllers/SpecialtiesController.html":{},"controllers/TestController.html":{},"classes/UpdateResultDto.html":{},"classes/UpdateSpecialtyDto.html":{},"classes/UpdateTestDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"dependencies.html":{}}}],["new",{"_index":186,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/ResultService.html":{},"injectables/SpecialtiesService.html":{},"injectables/TestService.html":{},"injectables/UserService.html":{},"coverage.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["newpassword",{"_index":247,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/UpdateUserDto.html":{},"injectables/UserService.html":{}}}],["next.js",{"_index":1237,"title":{},"body":{"index.html":{}}}],["nextrole",{"_index":638,"title":{},"body":{"classes/Result.html":{},"classes/UpdateResultDto.html":{}}}],["nextrolevalue",{"_index":723,"title":{},"body":{"injectables/ResultService.html":{}}}],["nodemailer",{"_index":1019,"title":{},"body":{"injectables/UserService.html":{},"dependencies.html":{}}}],["nodemailer.createtransport",{"_index":1036,"title":{},"body":{"injectables/UserService.html":{}}}],["nome",{"_index":569,"title":{},"body":{"classes/CreateUserDto.html":{},"miscellaneous/variables.html":{}}}],["non",{"_index":1421,"title":{},"body":{"license.html":{}}}],["nos",{"_index":472,"title":{},"body":{"classes/CreateTestDto.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["nossos",{"_index":540,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["notacceptableexception",{"_index":1018,"title":{},"body":{"injectables/UserService.html":{}}}],["notacceptableexception('email",{"_index":1059,"title":{},"body":{"injectables/UserService.html":{}}}],["note",{"_index":1724,"title":{},"body":{"license.html":{}}}],["notfoundexception",{"_index":710,"title":{},"body":{"injectables/ResultService.html":{},"injectables/TestService.html":{},"injectables/UserService.html":{}}}],["notfoundexception('não",{"_index":728,"title":{},"body":{"injectables/ResultService.html":{},"injectables/UserService.html":{}}}],["notfoundexception(`email",{"_index":1064,"title":{},"body":{"injectables/UserService.html":{}}}],["notfoundexception(`email:${email",{"_index":1127,"title":{},"body":{"injectables/UserService.html":{}}}],["notfoundexception(`id:${id",{"_index":881,"title":{},"body":{"injectables/TestService.html":{}}}],["notfoundexception(`registro",{"_index":1110,"title":{},"body":{"injectables/UserService.html":{}}}],["notfoundexception(`user",{"_index":1083,"title":{},"body":{"injectables/UserService.html":{}}}],["nothing",{"_index":1692,"title":{},"body":{"license.html":{}}}],["notice",{"_index":1315,"title":{},"body":{"license.html":{}}}],["notices",{"_index":1523,"title":{},"body":{"license.html":{}}}],["notifies",{"_index":1593,"title":{},"body":{"license.html":{}}}],["notify",{"_index":1586,"title":{},"body":{"license.html":{}}}],["notwithstanding",{"_index":1452,"title":{},"body":{"license.html":{}}}],["nova",{"_index":1101,"title":{},"body":{"injectables/UserService.html":{}}}],["novas",{"_index":1124,"title":{},"body":{"injectables/UserService.html":{}}}],["npm",{"_index":1213,"title":{},"body":{"index.html":{}}}],["null",{"_index":201,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["number",{"_index":257,"title":{},"body":{"classes/CreateResultDto.html":{},"classes/CreateSpecialtyDto.html":{},"classes/Result.html":{},"classes/Specialty.html":{},"classes/UpdateResultDto.html":{},"license.html":{}}}],["não",{"_index":794,"title":{},"body":{"injectables/SpecialtiesService.html":{},"injectables/TestService.html":{},"classes/UpdateResultDto.html":{},"injectables/UserService.html":{}}}],["níveis",{"_index":379,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["nível",{"_index":358,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["números",{"_index":223,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["o",{"_index":464,"title":{},"body":{"classes/CreateTestDto.html":{},"classes/UpdateResultDto.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["obj",{"_index":1779,"title":{},"body":{"miscellaneous/variables.html":{}}}],["obj.email",{"_index":1791,"title":{},"body":{"miscellaneous/variables.html":{}}}],["obj.performance",{"_index":1782,"title":{},"body":{"miscellaneous/variables.html":{}}}],["obj.title",{"_index":1788,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.entries",{"_index":1775,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.values(specialties",{"_index":1780,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.values(test",{"_index":1786,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.values(users",{"_index":1789,"title":{},"body":{"miscellaneous/variables.html":{}}}],["objeto",{"_index":20,"title":{},"body":{"controllers/AppController.html":{}}}],["obligation",{"_index":1545,"title":{},"body":{"license.html":{}}}],["obligations",{"_index":1541,"title":{},"body":{"license.html":{}}}],["obtain",{"_index":1503,"title":{},"body":{"license.html":{}}}],["offer",{"_index":1437,"title":{},"body":{"license.html":{}}}],["offered",{"_index":1546,"title":{},"body":{"license.html":{}}}],["offering",{"_index":1375,"title":{},"body":{"license.html":{}}}],["oi1",{"_index":1052,"title":{},"body":{"injectables/UserService.html":{}}}],["oi2",{"_index":1053,"title":{},"body":{"injectables/UserService.html":{}}}],["olhando",{"_index":418,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["oliveira",{"_index":1259,"title":{},"body":{"index.html":{}}}],["onde",{"_index":1202,"title":{},"body":{"index.html":{}}}],["one",{"_index":1517,"title":{},"body":{"license.html":{}}}],["ongoing",{"_index":1584,"title":{},"body":{"license.html":{}}}],["onmoduleinit",{"_index":624,"title":{},"body":{"injectables/PrismaService.html":{}}}],["open",{"_index":1218,"title":{},"body":{"index.html":{}}}],["option",{"_index":1521,"title":{},"body":{"license.html":{}}}],["optional",{"_index":105,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"classes/Result.html":{},"controllers/ResultController.html":{},"injectables/ResultService.html":{},"controllers/SpecialtiesController.html":{},"injectables/SpecialtiesService.html":{},"classes/Specialty.html":{},"classes/Test.html":{},"controllers/TestController.html":{},"injectables/TestService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["order",{"_index":1559,"title":{},"body":{"license.html":{}}}],["ordinary",{"_index":1569,"title":{},"body":{"license.html":{}}}],["organiza",{"_index":444,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["original",{"_index":1482,"title":{},"body":{"license.html":{}}}],["originally",{"_index":1718,"title":{},"body":{"license.html":{}}}],["os",{"_index":331,"title":{},"body":{"classes/CreateTestDto.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["others",{"_index":1304,"title":{},"body":{"license.html":{}}}],["otherwise",{"_index":1407,"title":{},"body":{"license.html":{}}}],["ou",{"_index":224,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateTestDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateResultDto.html":{},"classes/UpdateUserDto.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["out",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/ResultModule.html":{},"modules/SpecialtiesModule.html":{},"modules/TestModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["outro",{"_index":521,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["outros",{"_index":352,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["outstanding",{"_index":1411,"title":{},"body":{"license.html":{}}}],["overview",{"_index":1741,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["ownership",{"_index":1408,"title":{},"body":{"license.html":{}}}],["owns",{"_index":1298,"title":{},"body":{"license.html":{}}}],["p1l2u3s",{"_index":1073,"title":{},"body":{"injectables/UserService.html":{}}}],["package",{"_index":1163,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padrões",{"_index":533,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["page",{"_index":1063,"title":{},"body":{"injectables/UserService.html":{}}}],["para",{"_index":419,"title":{},"body":{"classes/CreateTestDto.html":{},"classes/UpdateResultDto.html":{},"injectables/UserService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["param",{"_index":41,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ResultController.html":{},"controllers/SpecialtiesController.html":{},"controllers/TestController.html":{},"controllers/UserController.html":{}}}],["param('email",{"_index":990,"title":{},"body":{"controllers/UserController.html":{}}}],["param('id",{"_index":772,"title":{},"body":{"controllers/SpecialtiesController.html":{},"controllers/UserController.html":{}}}],["param('resettoken",{"_index":983,"title":{},"body":{"controllers/UserController.html":{}}}],["parameters",{"_index":102,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/ResultController.html":{},"injectables/ResultService.html":{},"controllers/SpecialtiesController.html":{},"injectables/SpecialtiesService.html":{},"controllers/TestController.html":{},"injectables/TestService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["part",{"_index":1435,"title":{},"body":{"license.html":{}}}],["partial",{"_index":799,"title":{},"body":{"injectables/SpecialtiesService.html":{}}}],["partialtype",{"_index":230,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/UpdateResultDto.html":{},"classes/UpdateSpecialtyDto.html":{},"classes/UpdateTestDto.html":{},"classes/UpdateUserDto.html":{}}}],["partialtype(createresultdto",{"_index":897,"title":{},"body":{"classes/UpdateResultDto.html":{}}}],["partialtype(createspecialtydto",{"_index":899,"title":{},"body":{"classes/UpdateSpecialtyDto.html":{}}}],["partialtype(createtestdto",{"_index":901,"title":{},"body":{"classes/UpdateTestDto.html":{}}}],["partialtype(createuserdto",{"_index":242,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/UpdateUserDto.html":{}}}],["particular",{"_index":1306,"title":{},"body":{"license.html":{}}}],["party",{"_index":1667,"title":{},"body":{"license.html":{}}}],["party's",{"_index":1459,"title":{},"body":{"license.html":{}}}],["pass",{"_index":1044,"title":{},"body":{"injectables/UserService.html":{}}}],["passou",{"_index":892,"title":{},"body":{"classes/UpdateResultDto.html":{}}}],["passport",{"_index":591,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":155,"title":{},"body":{"modules/AuthModule.html":{},"modules/ResultModule.html":{},"modules/SpecialtiesModule.html":{},"modules/TestModule.html":{},"modules/UserModule.html":{}}}],["passportmodule.register",{"_index":157,"title":{},"body":{"modules/AuthModule.html":{},"modules/ResultModule.html":{},"modules/SpecialtiesModule.html":{},"modules/TestModule.html":{},"modules/UserModule.html":{}}}],["passportstrategy",{"_index":588,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":593,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":181,"title":{},"body":{"injectables/AuthService.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["patch",{"_index":677,"title":{},"body":{"controllers/ResultController.html":{},"controllers/SpecialtiesController.html":{},"controllers/TestController.html":{},"controllers/UserController.html":{}}}],["patch(':email",{"_index":989,"title":{},"body":{"controllers/UserController.html":{}}}],["patch(':id",{"_index":693,"title":{},"body":{"controllers/ResultController.html":{},"controllers/SpecialtiesController.html":{},"controllers/TestController.html":{}}}],["patch(':id')@apioperation({summary",{"_index":673,"title":{},"body":{"controllers/ResultController.html":{},"controllers/SpecialtiesController.html":{},"controllers/TestController.html":{}}}],["patch('change/password/:resettoken/:id",{"_index":982,"title":{},"body":{"controllers/UserController.html":{}}}],["patch('change/password/:resettoken/:id')@apioperation({summary",{"_index":927,"title":{},"body":{"controllers/UserController.html":{}}}],["patent",{"_index":1364,"title":{},"body":{"license.html":{}}}],["pattern",{"_index":522,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["payload",{"_index":586,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}}}],["payload.email",{"_index":600,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["pdi",{"_index":457,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["pedro",{"_index":1258,"title":{},"body":{"index.html":{}}}],["pedroasdoliveira/petlove",{"_index":1236,"title":{},"body":{"index.html":{}}}],["pelo",{"_index":362,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["pequenos",{"_index":402,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["percent",{"_index":1410,"title":{},"body":{"license.html":{}}}],["perfil",{"_index":958,"title":{},"body":{"controllers/UserController.html":{}}}],["perform",{"_index":1430,"title":{},"body":{"license.html":{}}}],["performance",{"_index":281,"title":{},"body":{"classes/CreateSpecialtyDto.html":{},"injectables/ResultService.html":{},"classes/Specialty.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["performances",{"_index":461,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["performed",{"_index":675,"title":{},"body":{"controllers/ResultController.html":{}}}],["permissão",{"_index":1113,"title":{},"body":{"injectables/UserService.html":{}}}],["permita",{"_index":514,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["permits",{"_index":1518,"title":{},"body":{"license.html":{}}}],["permitted",{"_index":1476,"title":{},"body":{"license.html":{}}}],["person",{"_index":253,"title":{},"body":{"classes/CreateResultDto.html":{},"classes/CreateSpecialtyDto.html":{},"classes/CreateTestDto.html":{},"classes/Result.html":{},"injectables/ResultService.html":{},"classes/Specialty.html":{},"classes/Test.html":{},"injectables/TestService.html":{},"classes/UpdateResultDto.html":{},"miscellaneous/variables.html":{}}}],["person:string",{"_index":828,"title":{},"body":{"classes/Test.html":{}}}],["personal",{"_index":1672,"title":{},"body":{"license.html":{}}}],["persondiff",{"_index":735,"title":{},"body":{"injectables/ResultService.html":{}}}],["persons",{"_index":311,"title":{},"body":{"classes/CreateSpecialtyDto.html":{}}}],["pessoa",{"_index":327,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["pessoas",{"_index":439,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["pet",{"_index":1047,"title":{},"body":{"injectables/UserService.html":{}}}],["petlove",{"_index":570,"title":{},"body":{"classes/CreateUserDto.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["petlove@123",{"_index":211,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/UpdateUserDto.html":{},"miscellaneous/variables.html":{}}}],["petlove@bootcamp.com",{"_index":1794,"title":{},"body":{"miscellaneous/variables.html":{}}}],["petlove@gmail.com",{"_index":565,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{}}}],["place",{"_index":1686,"title":{},"body":{"license.html":{}}}],["placed",{"_index":1562,"title":{},"body":{"license.html":{}}}],["planos",{"_index":429,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["please",{"_index":84,"title":{},"body":{"injectables/AppService.html":{}}}],["pleno",{"_index":305,"title":{},"body":{"classes/CreateSpecialtyDto.html":{}}}],["pode",{"_index":1120,"title":{},"body":{"injectables/UserService.html":{}}}],["por",{"_index":486,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["port",{"_index":1039,"title":{},"body":{"injectables/UserService.html":{}}}],["portions",{"_index":1322,"title":{},"body":{"license.html":{}}}],["possam",{"_index":1204,"title":{},"body":{"index.html":{}}}],["possibility",{"_index":1669,"title":{},"body":{"license.html":{}}}],["possible",{"_index":1352,"title":{},"body":{"license.html":{}}}],["post",{"_index":119,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ResultController.html":{},"controllers/SpecialtiesController.html":{},"controllers/TestController.html":{},"controllers/UserController.html":{}}}],["post('/create",{"_index":855,"title":{},"body":{"controllers/TestController.html":{},"controllers/UserController.html":{}}}],["post('/create')@apioperation({summary",{"_index":838,"title":{},"body":{"controllers/TestController.html":{},"controllers/UserController.html":{}}}],["post('upload",{"_index":995,"title":{},"body":{"controllers/UserController.html":{}}}],["post()@apioperation({summary",{"_index":659,"title":{},"body":{"controllers/ResultController.html":{},"controllers/SpecialtiesController.html":{}}}],["post()@httpcode(httpstatus.ok)@apioperation({summary",{"_index":97,"title":{},"body":{"controllers/AuthController.html":{}}}],["power",{"_index":1400,"title":{},"body":{"license.html":{}}}],["preferred",{"_index":1389,"title":{},"body":{"license.html":{}}}],["prefix",{"_index":91,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ResultController.html":{},"controllers/SpecialtiesController.html":{},"controllers/TestController.html":{},"controllers/UserController.html":{}}}],["prev.totaldiff",{"_index":748,"title":{},"body":{"injectables/ResultService.html":{}}}],["prevent",{"_index":1693,"title":{},"body":{"license.html":{}}}],["principal",{"_index":1685,"title":{},"body":{"license.html":{}}}],["princípios",{"_index":346,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["prior",{"_index":1588,"title":{},"body":{"license.html":{}}}],["prisma",{"_index":173,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/ResultService.html":{},"injectables/SpecialtiesService.html":{},"injectables/TestService.html":{},"injectables/UserService.html":{},"coverage.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["prisma.service",{"_index":619,"title":{},"body":{"modules/PrismaModule.html":{}}}],["prisma.specialtie.upsert",{"_index":1781,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prisma.specialtiecreateinput",{"_index":790,"title":{},"body":{"injectables/SpecialtiesService.html":{},"miscellaneous/variables.html":{}}}],["prisma.test.upsert",{"_index":1787,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prisma.testcreateinput",{"_index":877,"title":{},"body":{"injectables/TestService.html":{},"miscellaneous/variables.html":{}}}],["prisma.testupdateinput",{"_index":883,"title":{},"body":{"injectables/TestService.html":{}}}],["prisma.user.upsert",{"_index":1790,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prisma.usercreateinput",{"_index":1029,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["prisma.userupdateinput",{"_index":1061,"title":{},"body":{"injectables/UserService.html":{}}}],["prisma/client",{"_index":631,"title":{},"body":{"injectables/PrismaService.html":{},"injectables/ResultService.html":{},"injectables/SpecialtiesService.html":{},"injectables/TestService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["prisma/prisma.module",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["prisma/prisma.service",{"_index":176,"title":{},"body":{"injectables/AuthService.html":{}}}],["prismaclient",{"_index":621,"title":{},"body":{"injectables/PrismaService.html":{},"miscellaneous/variables.html":{}}}],["prismamodule",{"_index":57,"title":{"modules/PrismaModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/ResultModule.html":{},"modules/SpecialtiesModule.html":{},"modules/TestModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["prismaservice",{"_index":170,"title":{"injectables/PrismaService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"injectables/ResultService.html":{},"injectables/SpecialtiesService.html":{},"injectables/TestService.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["private",{"_index":178,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["problema",{"_index":530,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["process",{"_index":254,"title":{},"body":{"classes/CreateResultDto.html":{},"classes/CreateSpecialtyDto.html":{},"classes/CreateTestDto.html":{},"classes/Result.html":{},"injectables/ResultService.html":{},"classes/Specialty.html":{},"classes/Test.html":{},"injectables/TestService.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["process.env.jwt_change_password_secret",{"_index":1069,"title":{},"body":{"injectables/UserService.html":{}}}],["process.env.jwt_secret",{"_index":162,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"modules/UserModule.html":{}}}],["process:string",{"_index":832,"title":{},"body":{"classes/Test.html":{}}}],["processdiff",{"_index":737,"title":{},"body":{"injectables/ResultService.html":{}}}],["processos",{"_index":360,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["procurando",{"_index":475,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["produto",{"_index":502,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["produção",{"_index":415,"title":{},"body":{"classes/CreateTestDto.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["professional",{"_index":301,"title":{},"body":{"classes/CreateSpecialtyDto.html":{}}}],["proficiência",{"_index":392,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["profile",{"_index":94,"title":{},"body":{"controllers/AuthController.html":{}}}],["profile(@loggeduser",{"_index":143,"title":{},"body":{"controllers/AuthController.html":{}}}],["profile(user",{"_index":107,"title":{},"body":{"controllers/AuthController.html":{}}}],["profits",{"_index":1657,"title":{},"body":{"license.html":{}}}],["progress",{"_index":1757,"title":{},"body":{"todo.html":{}}}],["prohibited",{"_index":1566,"title":{},"body":{"license.html":{}}}],["prohibits",{"_index":1676,"title":{},"body":{"license.html":{}}}],["project",{"_index":1228,"title":{},"body":{"index.html":{}}}],["projeto",{"_index":1197,"title":{},"body":{"index.html":{}}}],["projetopetlover@gmail.com",{"_index":1043,"title":{},"body":{"injectables/UserService.html":{}}}],["projetos",{"_index":534,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["promise",{"_index":106,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["promove",{"_index":446,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["properties",{"_index":208,"title":{"properties.html":{}},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateResultDto.html":{},"classes/CreateSpecialtyDto.html":{},"classes/CreateTestDto.html":{},"classes/CreateUserDto.html":{},"interfaces/JwtPayload.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"injectables/PrismaService.html":{},"classes/Result.html":{},"classes/Specialty.html":{},"classes/Test.html":{},"classes/UpdateResultDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"properties.html":{}}}],["property",{"_index":1424,"title":{},"body":{"license.html":{}}}],["prove",{"_index":1636,"title":{},"body":{"license.html":{}}}],["provided",{"_index":1516,"title":{},"body":{"license.html":{}}}],["providers",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/ResultModule.html":{},"modules/SpecialtiesModule.html":{},"modules/TestModule.html":{},"modules/UserModule.html":{}}}],["provides",{"_index":1705,"title":{},"body":{"license.html":{}}}],["provision",{"_index":1700,"title":{},"body":{"license.html":{}}}],["provisionally",{"_index":1578,"title":{},"body":{"license.html":{}}}],["provisions",{"_index":1691,"title":{},"body":{"license.html":{}}}],["prs",{"_index":551,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["public",{"_index":1280,"title":{},"body":{"index.html":{},"license.html":{}}}],["publish",{"_index":1714,"title":{},"body":{"license.html":{}}}],["published",{"_index":1719,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":1631,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":1398,"title":{},"body":{"license.html":{}}}],["put",{"_index":1733,"title":{},"body":{"license.html":{}}}],["qual",{"_index":528,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["qualidade",{"_index":337,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["qualidades",{"_index":1208,"title":{},"body":{"index.html":{}}}],["quality",{"_index":1635,"title":{},"body":{"license.html":{}}}],["quando",{"_index":436,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["que",{"_index":480,"title":{},"body":{"classes/CreateTestDto.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["questionarios",{"_index":1206,"title":{},"body":{"index.html":{}}}],["rea",{"_index":547,"title":{},"body":{"classes/CreateTestDto.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["readme",{"_index":1754,"title":{},"body":{"todo.html":{}}}],["readonly",{"_index":40,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/ResultController.html":{},"injectables/ResultService.html":{},"controllers/SpecialtiesController.html":{},"injectables/SpecialtiesService.html":{},"controllers/TestController.html":{},"injectables/TestService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["reasonable",{"_index":1508,"title":{},"body":{"license.html":{}}}],["reavaliar",{"_index":478,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["recebe",{"_index":14,"title":{},"body":{"controllers/AppController.html":{}}}],["receipt",{"_index":1596,"title":{},"body":{"license.html":{}}}],["received",{"_index":1594,"title":{},"body":{"license.html":{}}}],["receiving",{"_index":98,"title":{},"body":{"controllers/AuthController.html":{}}}],["recipient",{"_index":1513,"title":{},"body":{"license.html":{}}}],["recipients",{"_index":1501,"title":{},"body":{"license.html":{}}}],["record",{"_index":1109,"title":{},"body":{"injectables/UserService.html":{}}}],["recover",{"_index":928,"title":{},"body":{"controllers/UserController.html":{}}}],["reduzindo",{"_index":410,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["reference",{"_index":1689,"title":{},"body":{"license.html":{}}}],["references",{"_index":1723,"title":{},"body":{"license.html":{}}}],["referente",{"_index":1201,"title":{},"body":{"index.html":{}}}],["reflect",{"_index":1178,"title":{},"body":{"dependencies.html":{}}}],["reformed",{"_index":1703,"title":{},"body":{"license.html":{}}}],["regulation",{"_index":1556,"title":{},"body":{"license.html":{}}}],["reinstated",{"_index":1577,"title":{},"body":{"license.html":{}}}],["relacionamento",{"_index":351,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["relating",{"_index":1680,"title":{},"body":{"license.html":{}}}],["relevant",{"_index":1735,"title":{},"body":{"license.html":{}}}],["remedy",{"_index":1531,"title":{},"body":{"license.html":{}}}],["remove",{"_index":655,"title":{},"body":{"controllers/ResultController.html":{},"injectables/ResultService.html":{},"controllers/SpecialtiesController.html":{},"injectables/SpecialtiesService.html":{},"controllers/TestController.html":{},"injectables/TestService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"license.html":{}}}],["remove(@param('email",{"_index":993,"title":{},"body":{"controllers/UserController.html":{}}}],["remove(@param('id",{"_index":696,"title":{},"body":{"controllers/ResultController.html":{},"controllers/SpecialtiesController.html":{},"controllers/TestController.html":{}}}],["remove(email",{"_index":940,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["remove(id",{"_index":668,"title":{},"body":{"controllers/ResultController.html":{},"injectables/ResultService.html":{},"controllers/SpecialtiesController.html":{},"injectables/SpecialtiesService.html":{},"controllers/TestController.html":{},"injectables/TestService.html":{}}}],["removed",{"_index":1455,"title":{},"body":{"license.html":{}}}],["rename",{"_index":1722,"title":{},"body":{"license.html":{}}}],["repair",{"_index":1640,"title":{},"body":{"license.html":{}}}],["replace(/=/g",{"_index":1076,"title":{},"body":{"injectables/UserService.html":{}}}],["replace(/\\+/g",{"_index":1072,"title":{},"body":{"injectables/UserService.html":{}}}],["replace(/\\//g",{"_index":1074,"title":{},"body":{"injectables/UserService.html":{}}}],["replace(/e1q2u3a4l/g",{"_index":1090,"title":{},"body":{"injectables/UserService.html":{}}}],["replace(/p1l2u3s/g",{"_index":1088,"title":{},"body":{"injectables/UserService.html":{}}}],["replace(/s1l2a3s4h/g",{"_index":1089,"title":{},"body":{"injectables/UserService.html":{}}}],["repo",{"_index":1235,"title":{},"body":{"index.html":{}}}],["representation",{"_index":1479,"title":{},"body":{"license.html":{}}}],["represents",{"_index":1480,"title":{},"body":{"license.html":{}}}],["reproduce",{"_index":1427,"title":{},"body":{"license.html":{}}}],["req",{"_index":42,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/TestController.html":{},"controllers/UserController.html":{}}}],["requer",{"_index":219,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["request",{"_index":43,"title":{},"body":{"controllers/AppController.html":{},"miscellaneous/variables.html":{}}}],["request.user",{"_index":1774,"title":{},"body":{"miscellaneous/variables.html":{}}}],["require('./seed/01",{"_index":1776,"title":{},"body":{"miscellaneous/variables.html":{}}}],["require('./seed/02",{"_index":1777,"title":{},"body":{"miscellaneous/variables.html":{}}}],["require('./seed/03",{"_index":1778,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":1530,"title":{},"body":{"license.html":{}}}],["requirements",{"_index":1469,"title":{},"body":{"license.html":{}}}],["requisitos",{"_index":1217,"title":{},"body":{"index.html":{}}}],["requisição",{"_index":16,"title":{},"body":{"controllers/AppController.html":{}}}],["resellers",{"_index":1620,"title":{},"body":{"license.html":{}}}],["reset",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/ResultModule.html":{},"modules/SpecialtiesModule.html":{},"modules/TestModule.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["resettoken",{"_index":200,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["resettokendecrypted",{"_index":1091,"title":{},"body":{"injectables/UserService.html":{}}}],["resettokentotext",{"_index":1087,"title":{},"body":{"injectables/UserService.html":{}}}],["resolver",{"_index":401,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["resources",{"_index":1241,"title":{},"body":{"index.html":{}}}],["respect",{"_index":1442,"title":{},"body":{"license.html":{}}}],["responsibilities",{"_index":1498,"title":{},"body":{"license.html":{}}}],["responsável",{"_index":485,"title":{},"body":{"classes/CreateTestDto.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["restrict",{"_index":1507,"title":{},"body":{"license.html":{}}}],["result",{"_index":259,"title":{"classes/Result.html":{}},"body":{"classes/CreateResultDto.html":{},"classes/Result.html":{},"controllers/ResultController.html":{},"injectables/ResultService.html":{},"classes/UpdateResultDto.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["result.controller",{"_index":702,"title":{},"body":{"modules/ResultModule.html":{}}}],["result.dto",{"_index":681,"title":{},"body":{"controllers/ResultController.html":{},"injectables/ResultService.html":{},"classes/UpdateResultDto.html":{}}}],["result.dto.ts",{"_index":250,"title":{},"body":{"classes/CreateResultDto.html":{},"classes/UpdateResultDto.html":{},"coverage.html":{}}}],["result.dto.ts:10",{"_index":271,"title":{},"body":{"classes/CreateResultDto.html":{}}}],["result.dto.ts:11",{"_index":896,"title":{},"body":{"classes/UpdateResultDto.html":{}}}],["result.dto.ts:17",{"_index":268,"title":{},"body":{"classes/CreateResultDto.html":{}}}],["result.dto.ts:18",{"_index":894,"title":{},"body":{"classes/UpdateResultDto.html":{}}}],["result.dto.ts:24",{"_index":272,"title":{},"body":{"classes/CreateResultDto.html":{}}}],["result.dto.ts:28",{"_index":889,"title":{},"body":{"classes/UpdateResultDto.html":{}}}],["result.dto.ts:31",{"_index":270,"title":{},"body":{"classes/CreateResultDto.html":{}}}],["result.dto.ts:38",{"_index":266,"title":{},"body":{"classes/CreateResultDto.html":{},"classes/UpdateResultDto.html":{}}}],["result.dto.ts:45",{"_index":274,"title":{},"body":{"classes/CreateResultDto.html":{}}}],["result.dto.ts:52",{"_index":264,"title":{},"body":{"classes/CreateResultDto.html":{}}}],["result.reduce((prev",{"_index":746,"title":{},"body":{"injectables/ResultService.html":{}}}],["result.service",{"_index":679,"title":{},"body":{"controllers/ResultController.html":{},"modules/ResultModule.html":{}}}],["result/result.module",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["resultcontroller",{"_index":651,"title":{"controllers/ResultController.html":{}},"body":{"controllers/ResultController.html":{},"modules/ResultModule.html":{},"coverage.html":{}}}],["resulting",{"_index":1674,"title":{},"body":{"license.html":{}}}],["resultmodule",{"_index":58,"title":{"modules/ResultModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ResultModule.html":{},"modules.html":{},"overview.html":{}}}],["results",{"_index":47,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateResultDto.html":{},"classes/CreateSpecialtyDto.html":{},"classes/CreateTestDto.html":{},"classes/CreateUserDto.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Result.html":{},"controllers/ResultController.html":{},"modules/ResultModule.html":{},"injectables/ResultService.html":{},"controllers/SpecialtiesController.html":{},"modules/SpecialtiesModule.html":{},"injectables/SpecialtiesService.html":{},"classes/Specialty.html":{},"classes/Test.html":{},"controllers/TestController.html":{},"modules/TestModule.html":{},"injectables/TestService.html":{},"classes/UpdateResultDto.html":{},"classes/UpdateSpecialtyDto.html":{},"classes/UpdateTestDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["resultservice",{"_index":678,"title":{"injectables/ResultService.html":{}},"body":{"controllers/ResultController.html":{},"modules/ResultModule.html":{},"injectables/ResultService.html":{},"coverage.html":{},"overview.html":{}}}],["retorna",{"_index":18,"title":{},"body":{"controllers/AppController.html":{}}}],["return",{"_index":45,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/ResultController.html":{},"injectables/ResultService.html":{},"controllers/SpecialtiesController.html":{},"injectables/SpecialtiesService.html":{},"controllers/TestController.html":{},"injectables/TestService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/ResultController.html":{},"injectables/ResultService.html":{},"controllers/SpecialtiesController.html":{},"injectables/SpecialtiesService.html":{},"controllers/TestController.html":{},"injectables/TestService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["revisa",{"_index":552,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["right",{"_index":1348,"title":{},"body":{"license.html":{}}}],["rights",{"_index":1355,"title":{},"body":{"license.html":{}}}],["rimraf",{"_index":1181,"title":{},"body":{"dependencies.html":{}}}],["risk",{"_index":1634,"title":{},"body":{"license.html":{}}}],["roda",{"_index":1247,"title":{},"body":{"index.html":{}}}],["rodando",{"_index":1246,"title":{},"body":{"index.html":{}}}],["role",{"_index":906,"title":{},"body":{"classes/User.html":{},"injectables/UserService.html":{}}}],["royalty",{"_index":1419,"title":{},"body":{"license.html":{}}}],["run",{"_index":1211,"title":{},"body":{"index.html":{}}}],["running",{"_index":82,"title":{},"body":{"injectables/AppService.html":{}}}],["rxjs",{"_index":1183,"title":{},"body":{"dependencies.html":{}}}],["s.o.l.i.d",{"_index":519,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["s1l2a3s4h",{"_index":1075,"title":{},"body":{"injectables/UserService.html":{}}}],["sale",{"_index":1376,"title":{},"body":{"license.html":{}}}],["santos",{"_index":1273,"title":{},"body":{"index.html":{}}}],["schema",{"_index":1760,"title":{},"body":{"todo.html":{}}}],["scope",{"_index":1447,"title":{},"body":{"license.html":{}}}],["score",{"_index":299,"title":{},"body":{"classes/CreateSpecialtyDto.html":{}}}],["se",{"_index":891,"title":{},"body":{"classes/UpdateResultDto.html":{}}}],["secondary",{"_index":1326,"title":{},"body":{"license.html":{}}}],["secret",{"_index":161,"title":{},"body":{"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["secretorkey",{"_index":599,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["section",{"_index":1441,"title":{},"body":{"license.html":{}}}],["sections",{"_index":1495,"title":{},"body":{"license.html":{}}}],["see",{"_index":1221,"title":{},"body":{"index.html":{},"license.html":{}}}],["seeds",{"_index":1147,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["segue",{"_index":462,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["seguindo",{"_index":539,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["select",{"_index":879,"title":{},"body":{"injectables/TestService.html":{},"injectables/UserService.html":{}}}],["sell",{"_index":1436,"title":{},"body":{"license.html":{}}}],["selling",{"_index":1374,"title":{},"body":{"license.html":{}}}],["sempre",{"_index":432,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["send",{"_index":946,"title":{},"body":{"controllers/UserController.html":{}}}],["sendemailforgotpassword",{"_index":923,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["sendemailforgotpassword(@param('email",{"_index":980,"title":{},"body":{"controllers/UserController.html":{}}}],["sendemailforgotpassword(email",{"_index":944,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["sending",{"_index":1082,"title":{},"body":{"injectables/UserService.html":{}}}],["senha",{"_index":216,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"injectables/UserService.html":{}}}],["senhas",{"_index":1026,"title":{},"body":{"injectables/UserService.html":{}}}],["senior",{"_index":306,"title":{},"body":{"classes/CreateSpecialtyDto.html":{}}}],["sent",{"_index":948,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["separate",{"_index":1341,"title":{},"body":{"license.html":{}}}],["ser",{"_index":1121,"title":{},"body":{"injectables/UserService.html":{}}}],["server",{"_index":81,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["service",{"_index":1041,"title":{},"body":{"injectables/UserService.html":{},"license.html":{},"todo.html":{}}}],["servicing",{"_index":1639,"title":{},"body":{"license.html":{}}}],["seu",{"_index":440,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["seus",{"_index":442,"title":{},"body":{"classes/CreateTestDto.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["shall",{"_index":1615,"title":{},"body":{"license.html":{}}}],["shares",{"_index":1412,"title":{},"body":{"license.html":{}}}],["signoptions",{"_index":163,"title":{},"body":{"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["sim",{"_index":893,"title":{},"body":{"classes/UpdateResultDto.html":{}}}],["simples",{"_index":400,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["simula",{"_index":503,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["sistema",{"_index":558,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["sistemas",{"_index":371,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["sistêmica",{"_index":560,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["sistêmico",{"_index":367,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["sit",{"_index":291,"title":{},"body":{"classes/CreateSpecialtyDto.html":{}}}],["skbfwjaibimleyou",{"_index":1045,"title":{},"body":{"injectables/UserService.html":{}}}],["skill",{"_index":1570,"title":{},"body":{"license.html":{}}}],["slas",{"_index":420,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["smtp.gmail.com",{"_index":1038,"title":{},"body":{"injectables/UserService.html":{}}}],["sob",{"_index":1278,"title":{},"body":{"index.html":{}}}],["software",{"_index":1300,"title":{},"body":{"license.html":{}}}],["software.1.11",{"_index":1363,"title":{},"body":{"license.html":{}}}],["solução",{"_index":498,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["soluções",{"_index":406,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateResultDto.html":{},"classes/CreateSpecialtyDto.html":{},"classes/CreateTestDto.html":{},"classes/CreateUserDto.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Result.html":{},"controllers/ResultController.html":{},"modules/ResultModule.html":{},"injectables/ResultService.html":{},"controllers/SpecialtiesController.html":{},"modules/SpecialtiesModule.html":{},"injectables/SpecialtiesService.html":{},"classes/Specialty.html":{},"classes/Test.html":{},"controllers/TestController.html":{},"modules/TestModule.html":{},"injectables/TestService.html":{},"classes/UpdateResultDto.html":{},"classes/UpdateSpecialtyDto.html":{},"classes/UpdateTestDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"license.html":{}}}],["special",{"_index":1651,"title":{},"body":{"license.html":{}}}],["specialtie",{"_index":1154,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["specialties",{"_index":753,"title":{},"body":{"controllers/SpecialtiesController.html":{},"coverage.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["specialties.controller",{"_index":779,"title":{},"body":{"modules/SpecialtiesModule.html":{}}}],["specialties.service",{"_index":764,"title":{},"body":{"controllers/SpecialtiesController.html":{},"modules/SpecialtiesModule.html":{}}}],["specialties.ts",{"_index":1153,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["specialties/specialties.module",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["specialtiescontroller",{"_index":749,"title":{"controllers/SpecialtiesController.html":{}},"body":{"controllers/SpecialtiesController.html":{},"modules/SpecialtiesModule.html":{},"coverage.html":{}}}],["specialtiesmodule",{"_index":59,"title":{"modules/SpecialtiesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SpecialtiesModule.html":{},"modules.html":{},"overview.html":{}}}],["specialtiesservice",{"_index":763,"title":{"injectables/SpecialtiesService.html":{}},"body":{"controllers/SpecialtiesController.html":{},"modules/SpecialtiesModule.html":{},"injectables/SpecialtiesService.html":{},"coverage.html":{},"overview.html":{}}}],["specialty",{"_index":287,"title":{"classes/Specialty.html":{}},"body":{"classes/CreateSpecialtyDto.html":{},"controllers/SpecialtiesController.html":{},"injectables/SpecialtiesService.html":{},"classes/Specialty.html":{},"coverage.html":{}}}],["specialty.dto",{"_index":765,"title":{},"body":{"controllers/SpecialtiesController.html":{},"injectables/SpecialtiesService.html":{},"classes/UpdateSpecialtyDto.html":{}}}],["specialty.dto.ts",{"_index":278,"title":{},"body":{"classes/CreateSpecialtyDto.html":{},"classes/UpdateSpecialtyDto.html":{},"coverage.html":{}}}],["specialty.dto.ts:11",{"_index":310,"title":{},"body":{"classes/CreateSpecialtyDto.html":{}}}],["specialty.dto.ts:18",{"_index":296,"title":{},"body":{"classes/CreateSpecialtyDto.html":{}}}],["specialty.dto.ts:27",{"_index":315,"title":{},"body":{"classes/CreateSpecialtyDto.html":{}}}],["specialty.dto.ts:36",{"_index":312,"title":{},"body":{"classes/CreateSpecialtyDto.html":{}}}],["specialty.dto.ts:45",{"_index":316,"title":{},"body":{"classes/CreateSpecialtyDto.html":{}}}],["specialty.dto.ts:54",{"_index":313,"title":{},"body":{"classes/CreateSpecialtyDto.html":{}}}],["specialty.dto.ts:63",{"_index":300,"title":{},"body":{"classes/CreateSpecialtyDto.html":{}}}],["specialty.dto.ts:65",{"_index":285,"title":{},"body":{"classes/CreateSpecialtyDto.html":{}}}],["specialty.dto.ts:66",{"_index":317,"title":{},"body":{"classes/CreateSpecialtyDto.html":{}}}],["specialtys",{"_index":724,"title":{},"body":{"injectables/ResultService.html":{}}}],["specialtys.length",{"_index":726,"title":{},"body":{"injectables/ResultService.html":{}}}],["specialtys.map((specialy",{"_index":732,"title":{},"body":{"injectables/ResultService.html":{}}}],["specialy",{"_index":733,"title":{},"body":{"injectables/ResultService.html":{}}}],["specific",{"_index":755,"title":{},"body":{"controllers/SpecialtiesController.html":{},"license.html":{}}}],["squad",{"_index":356,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["src/.../01",{"_index":1767,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../02",{"_index":1766,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../03",{"_index":1765,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../handleerror.utils.ts",{"_index":1190,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../isadmin.utils.ts",{"_index":1191,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../logged",{"_index":1763,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1189,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../seed.ts",{"_index":1764,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:17",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":79,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":80,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":90,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:32",{"_index":101,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:46",{"_index":113,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":150,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":166,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:15",{"_index":174,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:9",{"_index":172,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/dto/login.dto.ts",{"_index":602,"title":{},"body":{"classes/LoginDto.html":{},"coverage.html":{}}}],["src/auth/dto/login.dto.ts:13",{"_index":604,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/dto/login.dto.ts:21",{"_index":606,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/dto/login.response.dto.ts",{"_index":607,"title":{},"body":{"classes/LoginResponseDto.html":{},"coverage.html":{}}}],["src/auth/dto/login.response.dto.ts:10",{"_index":611,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["src/auth/dto/login.response.dto.ts:15",{"_index":612,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["src/auth/jwt.strategy.ts",{"_index":580,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts:16",{"_index":585,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/jwt.strategy.ts:7",{"_index":582,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/logged",{"_index":683,"title":{},"body":{"controllers/ResultController.html":{},"controllers/SpecialtiesController.html":{},"controllers/TestController.html":{},"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/main.ts",{"_index":1143,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/prisma/prisma.module",{"_index":152,"title":{},"body":{"modules/AuthModule.html":{},"modules/ResultModule.html":{},"modules/SpecialtiesModule.html":{},"modules/TestModule.html":{},"modules/UserModule.html":{}}}],["src/prisma/prisma.module.ts",{"_index":617,"title":{},"body":{"modules/PrismaModule.html":{}}}],["src/prisma/prisma.service",{"_index":592,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/ResultService.html":{},"injectables/SpecialtiesService.html":{},"injectables/TestService.html":{},"injectables/UserService.html":{}}}],["src/prisma/prisma.service.ts",{"_index":620,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["src/prisma/prisma.service.ts:11",{"_index":627,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/prisma.service.ts:6",{"_index":630,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/prisma.service.ts:7",{"_index":629,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/seed.ts",{"_index":1146,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/prisma/seed/01",{"_index":1148,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/prisma/seed/02",{"_index":1150,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/prisma/seed/03",{"_index":1152,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/result/dto/create",{"_index":249,"title":{},"body":{"classes/CreateResultDto.html":{},"coverage.html":{}}}],["src/result/dto/update",{"_index":887,"title":{},"body":{"classes/UpdateResultDto.html":{},"coverage.html":{}}}],["src/result/entities/result.entity.ts",{"_index":636,"title":{},"body":{"classes/Result.html":{},"coverage.html":{}}}],["src/result/entities/result.entity.ts:10",{"_index":650,"title":{},"body":{"classes/Result.html":{}}}],["src/result/entities/result.entity.ts:11",{"_index":640,"title":{},"body":{"classes/Result.html":{}}}],["src/result/entities/result.entity.ts:12",{"_index":649,"title":{},"body":{"classes/Result.html":{}}}],["src/result/entities/result.entity.ts:2",{"_index":641,"title":{},"body":{"classes/Result.html":{}}}],["src/result/entities/result.entity.ts:3",{"_index":644,"title":{},"body":{"classes/Result.html":{}}}],["src/result/entities/result.entity.ts:4",{"_index":647,"title":{},"body":{"classes/Result.html":{}}}],["src/result/entities/result.entity.ts:5",{"_index":645,"title":{},"body":{"classes/Result.html":{}}}],["src/result/entities/result.entity.ts:6",{"_index":646,"title":{},"body":{"classes/Result.html":{}}}],["src/result/entities/result.entity.ts:7",{"_index":648,"title":{},"body":{"classes/Result.html":{}}}],["src/result/entities/result.entity.ts:8",{"_index":642,"title":{},"body":{"classes/Result.html":{}}}],["src/result/entities/result.entity.ts:9",{"_index":643,"title":{},"body":{"classes/Result.html":{}}}],["src/result/result.controller.ts",{"_index":652,"title":{},"body":{"controllers/ResultController.html":{},"coverage.html":{}}}],["src/result/result.controller.ts:28",{"_index":660,"title":{},"body":{"controllers/ResultController.html":{}}}],["src/result/result.controller.ts:34",{"_index":663,"title":{},"body":{"controllers/ResultController.html":{}}}],["src/result/result.controller.ts:40",{"_index":667,"title":{},"body":{"controllers/ResultController.html":{}}}],["src/result/result.controller.ts:46",{"_index":676,"title":{},"body":{"controllers/ResultController.html":{}}}],["src/result/result.controller.ts:51",{"_index":670,"title":{},"body":{"controllers/ResultController.html":{}}}],["src/result/result.module.ts",{"_index":701,"title":{},"body":{"modules/ResultModule.html":{}}}],["src/result/result.service.ts",{"_index":703,"title":{},"body":{"injectables/ResultService.html":{},"coverage.html":{}}}],["src/result/result.service.ts:104",{"_index":707,"title":{},"body":{"injectables/ResultService.html":{}}}],["src/result/result.service.ts:11",{"_index":704,"title":{},"body":{"injectables/ResultService.html":{}}}],["src/result/result.service.ts:123",{"_index":709,"title":{},"body":{"injectables/ResultService.html":{}}}],["src/result/result.service.ts:13",{"_index":705,"title":{},"body":{"injectables/ResultService.html":{}}}],["src/result/result.service.ts:172",{"_index":708,"title":{},"body":{"injectables/ResultService.html":{}}}],["src/result/result.service.ts:82",{"_index":706,"title":{},"body":{"injectables/ResultService.html":{}}}],["src/specialties/dto/create",{"_index":277,"title":{},"body":{"classes/CreateSpecialtyDto.html":{},"coverage.html":{}}}],["src/specialties/dto/update",{"_index":898,"title":{},"body":{"classes/UpdateSpecialtyDto.html":{},"coverage.html":{}}}],["src/specialties/entities/specialty.entity.ts",{"_index":802,"title":{},"body":{"classes/Specialty.html":{},"coverage.html":{}}}],["src/specialties/entities/specialty.entity.ts:10",{"_index":803,"title":{},"body":{"classes/Specialty.html":{}}}],["src/specialties/entities/specialty.entity.ts:11",{"_index":812,"title":{},"body":{"classes/Specialty.html":{}}}],["src/specialties/entities/specialty.entity.ts:2",{"_index":805,"title":{},"body":{"classes/Specialty.html":{}}}],["src/specialties/entities/specialty.entity.ts:3",{"_index":807,"title":{},"body":{"classes/Specialty.html":{}}}],["src/specialties/entities/specialty.entity.ts:4",{"_index":804,"title":{},"body":{"classes/Specialty.html":{}}}],["src/specialties/entities/specialty.entity.ts:5",{"_index":810,"title":{},"body":{"classes/Specialty.html":{}}}],["src/specialties/entities/specialty.entity.ts:6",{"_index":808,"title":{},"body":{"classes/Specialty.html":{}}}],["src/specialties/entities/specialty.entity.ts:7",{"_index":811,"title":{},"body":{"classes/Specialty.html":{}}}],["src/specialties/entities/specialty.entity.ts:8",{"_index":809,"title":{},"body":{"classes/Specialty.html":{}}}],["src/specialties/entities/specialty.entity.ts:9",{"_index":806,"title":{},"body":{"classes/Specialty.html":{}}}],["src/specialties/specialties.controller.ts",{"_index":750,"title":{},"body":{"controllers/SpecialtiesController.html":{},"coverage.html":{}}}],["src/specialties/specialties.controller.ts:28",{"_index":752,"title":{},"body":{"controllers/SpecialtiesController.html":{}}}],["src/specialties/specialties.controller.ts:34",{"_index":754,"title":{},"body":{"controllers/SpecialtiesController.html":{}}}],["src/specialties/specialties.controller.ts:40",{"_index":757,"title":{},"body":{"controllers/SpecialtiesController.html":{}}}],["src/specialties/specialties.controller.ts:46",{"_index":762,"title":{},"body":{"controllers/SpecialtiesController.html":{}}}],["src/specialties/specialties.controller.ts:56",{"_index":759,"title":{},"body":{"controllers/SpecialtiesController.html":{}}}],["src/specialties/specialties.module.ts",{"_index":778,"title":{},"body":{"modules/SpecialtiesModule.html":{}}}],["src/specialties/specialties.service.ts",{"_index":780,"title":{},"body":{"injectables/SpecialtiesService.html":{},"coverage.html":{}}}],["src/specialties/specialties.service.ts:12",{"_index":781,"title":{},"body":{"injectables/SpecialtiesService.html":{}}}],["src/specialties/specialties.service.ts:15",{"_index":782,"title":{},"body":{"injectables/SpecialtiesService.html":{}}}],["src/specialties/specialties.service.ts:21",{"_index":783,"title":{},"body":{"injectables/SpecialtiesService.html":{}}}],["src/specialties/specialties.service.ts:29",{"_index":784,"title":{},"body":{"injectables/SpecialtiesService.html":{}}}],["src/specialties/specialties.service.ts:39",{"_index":786,"title":{},"body":{"injectables/SpecialtiesService.html":{}}}],["src/specialties/specialties.service.ts:50",{"_index":785,"title":{},"body":{"injectables/SpecialtiesService.html":{}}}],["src/test",{"_index":320,"title":{},"body":{"classes/CreateTestDto.html":{},"classes/Test.html":{},"controllers/TestController.html":{},"modules/TestModule.html":{},"injectables/TestService.html":{},"classes/UpdateTestDto.html":{},"coverage.html":{}}}],["src/user/dto/create",{"_index":562,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/user/dto/update",{"_index":206,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/user/entities/jwtchangepassword.entity.ts",{"_index":579,"title":{},"body":{"interfaces/JwtPayload.html":{},"coverage.html":{}}}],["src/user/entities/user.entity",{"_index":127,"title":{},"body":{"controllers/AuthController.html":{},"classes/LoginResponseDto.html":{},"controllers/ResultController.html":{},"injectables/ResultService.html":{},"controllers/SpecialtiesController.html":{},"injectables/SpecialtiesService.html":{},"controllers/TestController.html":{},"injectables/TestService.html":{}}}],["src/user/entities/user.entity.ts",{"_index":904,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/user/entities/user.entity.ts:10",{"_index":914,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:11",{"_index":909,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:12",{"_index":919,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:2",{"_index":911,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:3",{"_index":915,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:4",{"_index":910,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:5",{"_index":916,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:6",{"_index":918,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:7",{"_index":908,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:8",{"_index":917,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:9",{"_index":913,"title":{},"body":{"classes/User.html":{}}}],["src/user/user.controller.ts",{"_index":921,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/user/user.controller.ts:109",{"_index":952,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:125",{"_index":943,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:137",{"_index":960,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:33",{"_index":932,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:45",{"_index":965,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:57",{"_index":947,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:69",{"_index":929,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:85",{"_index":935,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:97",{"_index":939,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.module.ts",{"_index":1002,"title":{},"body":{"modules/UserModule.html":{}}}],["src/user/user.service.ts",{"_index":1007,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/user/user.service.ts:111",{"_index":1014,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:177",{"_index":1009,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:23",{"_index":1008,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:271",{"_index":1011,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:29",{"_index":1010,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:293",{"_index":1012,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:322",{"_index":1015,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:379",{"_index":1013,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:87",{"_index":1016,"title":{},"body":{"injectables/UserService.html":{}}}],["src/utils/handleerror.utils",{"_index":712,"title":{},"body":{"injectables/ResultService.html":{},"injectables/SpecialtiesService.html":{},"injectables/TestService.html":{},"injectables/UserService.html":{}}}],["src/utils/handleerror.utils.ts",{"_index":1159,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/utils/isadmin.utils",{"_index":714,"title":{},"body":{"injectables/ResultService.html":{},"injectables/SpecialtiesService.html":{},"injectables/TestService.html":{},"injectables/UserService.html":{}}}],["src/utils/isadmin.utils.ts",{"_index":1160,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["start",{"_index":1252,"title":{},"body":{"index.html":{}}}],["started",{"_index":1194,"title":{"index.html":{},"license.html":{},"todo.html":{}},"body":{"index.html":{}}}],["statements",{"_index":1132,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":22,"title":{},"body":{"controllers/AppController.html":{}}}],["statute",{"_index":1555,"title":{},"body":{"license.html":{}}}],["statutory",{"_index":1626,"title":{},"body":{"license.html":{}}}],["steward",{"_index":1712,"title":{},"body":{"license.html":{}}}],["stoppage",{"_index":1660,"title":{},"body":{"license.html":{}}}],["strategy",{"_index":590,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["string",{"_index":29,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateSpecialtyDto.html":{},"classes/CreateTestDto.html":{},"classes/CreateUserDto.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Result.html":{},"controllers/ResultController.html":{},"injectables/ResultService.html":{},"controllers/SpecialtiesController.html":{},"injectables/SpecialtiesService.html":{},"classes/Specialty.html":{},"classes/Test.html":{},"controllers/TestController.html":{},"injectables/TestService.html":{},"classes/UpdateResultDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["sua",{"_index":355,"title":{},"body":{"classes/CreateTestDto.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["subir",{"_index":413,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["subject",{"_index":1050,"title":{},"body":{"injectables/UserService.html":{},"license.html":{}}}],["sublicense",{"_index":1514,"title":{},"body":{"license.html":{}}}],["subsequent",{"_index":1472,"title":{},"body":{"license.html":{}}}],["subsequently",{"_index":1354,"title":{},"body":{"license.html":{}}}],["substance",{"_index":1524,"title":{},"body":{"license.html":{}}}],["successfully",{"_index":145,"title":{},"body":{"controllers/AuthController.html":{},"injectables/SpecialtiesService.html":{}}}],["sucesso",{"_index":117,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateTestDto.html":{},"controllers/TestController.html":{},"injectables/TestService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["such",{"_index":1318,"title":{},"body":{"license.html":{}}}],["sufficient",{"_index":1484,"title":{},"body":{"license.html":{}}}],["sufficiently",{"_index":1567,"title":{},"body":{"license.html":{}}}],["sugere",{"_index":470,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["summary",{"_index":139,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ResultController.html":{},"controllers/SpecialtiesController.html":{},"controllers/TestController.html":{},"controllers/UserController.html":{}}}],["super",{"_index":594,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["support",{"_index":1539,"title":{},"body":{"license.html":{},"modules.html":{}}}],["survive",{"_index":1622,"title":{},"body":{"license.html":{}}}],["svg",{"_index":1739,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":87,"title":{},"body":{"injectables/AppService.html":{},"dependencies.html":{},"todo.html":{}}}],["system",{"_index":255,"title":{},"body":{"classes/CreateResultDto.html":{},"classes/CreateSpecialtyDto.html":{},"classes/CreateTestDto.html":{},"classes/Result.html":{},"injectables/ResultService.html":{},"classes/Specialty.html":{},"classes/Test.html":{},"injectables/TestService.html":{},"miscellaneous/variables.html":{}}}],["system:string",{"_index":827,"title":{},"body":{"classes/Test.html":{}}}],["systemdiff",{"_index":734,"title":{},"body":{"injectables/ResultService.html":{}}}],["systems",{"_index":314,"title":{},"body":{"classes/CreateSpecialtyDto.html":{}}}],["são",{"_index":339,"title":{},"body":{"classes/CreateTestDto.html":{},"injectables/UserService.html":{}}}],["table",{"_index":1162,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1161,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":1238,"title":{},"body":{"index.html":{}}}],["também",{"_index":416,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["team",{"_index":907,"title":{},"body":{"classes/User.html":{},"injectables/UserService.html":{}}}],["tech",{"_index":308,"title":{},"body":{"classes/CreateSpecialtyDto.html":{}}}],["technology",{"_index":282,"title":{},"body":{"classes/CreateSpecialtyDto.html":{},"classes/Result.html":{},"injectables/ResultService.html":{},"classes/Specialty.html":{},"classes/UpdateResultDto.html":{},"miscellaneous/variables.html":{}}}],["technologydiff",{"_index":736,"title":{},"body":{"injectables/ResultService.html":{}}}],["tecnologia",{"_index":364,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["tem",{"_index":1112,"title":{},"body":{"injectables/UserService.html":{}}}],["temas",{"_index":385,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["terem",{"_index":441,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["terminate",{"_index":1574,"title":{},"body":{"license.html":{}}}],["terminates",{"_index":1583,"title":{},"body":{"license.html":{}}}],["termination",{"_index":1572,"title":{},"body":{"license.html":{}}}],["terms",{"_index":1333,"title":{},"body":{"license.html":{}}}],["test",{"_index":73,"title":{"classes/Test.html":{}},"body":{"modules/AppModule.html":{},"classes/CreateResultDto.html":{},"classes/CreateTestDto.html":{},"controllers/ResultController.html":{},"classes/Test.html":{},"controllers/TestController.html":{},"injectables/TestService.html":{},"classes/UpdateResultDto.html":{},"coverage.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["test.controller",{"_index":869,"title":{},"body":{"modules/TestModule.html":{}}}],["test.dto",{"_index":852,"title":{},"body":{"controllers/TestController.html":{},"injectables/TestService.html":{},"classes/UpdateTestDto.html":{}}}],["test.dto.ts",{"_index":322,"title":{},"body":{"classes/CreateTestDto.html":{},"classes/UpdateTestDto.html":{},"coverage.html":{}}}],["test.dto.ts:10",{"_index":383,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["test.dto.ts:112",{"_index":344,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["test.dto.ts:26",{"_index":372,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["test.dto.ts:42",{"_index":357,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["test.dto.ts:58",{"_index":365,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["test.dto.ts:72",{"_index":380,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["test.dto.ts:85",{"_index":349,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["test.dto.ts:98",{"_index":389,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["test.service",{"_index":851,"title":{},"body":{"controllers/TestController.html":{},"modules/TestModule.html":{}}}],["test:string",{"_index":829,"title":{},"body":{"classes/Test.html":{}}}],["testa",{"_index":497,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["testar",{"_index":1755,"title":{},"body":{"todo.html":{}}}],["testcontroller",{"_index":836,"title":{"controllers/TestController.html":{}},"body":{"controllers/TestController.html":{},"modules/TestModule.html":{},"coverage.html":{}}}],["teste",{"_index":382,"title":{},"body":{"classes/CreateTestDto.html":{},"controllers/TestController.html":{},"miscellaneous/variables.html":{}}}],["testes",{"_index":374,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["testmodule",{"_index":60,"title":{"modules/TestModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TestModule.html":{},"modules.html":{},"overview.html":{}}}],["tests",{"_index":842,"title":{},"body":{"controllers/TestController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["testservice",{"_index":850,"title":{"injectables/TestService.html":{}},"body":{"controllers/TestController.html":{},"modules/TestModule.html":{},"injectables/TestService.html":{},"coverage.html":{},"overview.html":{}}}],["text",{"_index":1563,"title":{},"body":{"license.html":{}}}],["then((user",{"_index":1034,"title":{},"body":{"injectables/UserService.html":{}}}],["theory",{"_index":1646,"title":{},"body":{"license.html":{}}}],["thereof",{"_index":1323,"title":{},"body":{"license.html":{}}}],["third",{"_index":1458,"title":{},"body":{"license.html":{}}}],["this.$connect",{"_index":633,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$on('beforeexit",{"_index":634,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.appservice.getappstatus",{"_index":46,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.login(logindto",{"_index":141,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.jwtservice.sign",{"_index":202,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.sign(payload",{"_index":1066,"title":{},"body":{"injectables/UserService.html":{}}}],["this.jwtservice.verify(user.resettoken",{"_index":1096,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.specialtie",{"_index":797,"title":{},"body":{"injectables/SpecialtiesService.html":{}}}],["this.prisma.specialtie.create",{"_index":791,"title":{},"body":{"injectables/SpecialtiesService.html":{}}}],["this.prisma.specialtie.delete",{"_index":800,"title":{},"body":{"injectables/SpecialtiesService.html":{}}}],["this.prisma.specialtie.findmany",{"_index":725,"title":{},"body":{"injectables/ResultService.html":{}}}],["this.prisma.specialtie.findmany().catch(handleerror",{"_index":796,"title":{},"body":{"injectables/SpecialtiesService.html":{}}}],["this.prisma.test",{"_index":878,"title":{},"body":{"injectables/TestService.html":{}}}],["this.prisma.test.delete",{"_index":884,"title":{},"body":{"injectables/TestService.html":{}}}],["this.prisma.test.findmany().catch(handleerror",{"_index":880,"title":{},"body":{"injectables/TestService.html":{}}}],["this.prisma.user",{"_index":1033,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.user.findmany",{"_index":1105,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.user.findunique",{"_index":184,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}}}],["this.prisma.user.update",{"_index":196,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["this.resultservice.create(user",{"_index":687,"title":{},"body":{"controllers/ResultController.html":{}}}],["this.resultservice.findall(user",{"_index":689,"title":{},"body":{"controllers/ResultController.html":{}}}],["this.resultservice.findone(id",{"_index":692,"title":{},"body":{"controllers/ResultController.html":{}}}],["this.resultservice.remove(id",{"_index":697,"title":{},"body":{"controllers/ResultController.html":{}}}],["this.resultservice.update(id",{"_index":695,"title":{},"body":{"controllers/ResultController.html":{}}}],["this.specialty.create(dto",{"_index":769,"title":{},"body":{"controllers/SpecialtiesController.html":{}}}],["this.specialty.findall(user",{"_index":770,"title":{},"body":{"controllers/SpecialtiesController.html":{}}}],["this.specialty.findone(id",{"_index":771,"title":{},"body":{"controllers/SpecialtiesController.html":{}}}],["this.specialty.remove(id",{"_index":774,"title":{},"body":{"controllers/SpecialtiesController.html":{}}}],["this.specialty.update(id",{"_index":773,"title":{},"body":{"controllers/SpecialtiesController.html":{}}}],["this.testservice.create(dto,user",{"_index":857,"title":{},"body":{"controllers/TestController.html":{}}}],["this.testservice.findall(user",{"_index":860,"title":{},"body":{"controllers/TestController.html":{}}}],["this.testservice.remove(id,user",{"_index":864,"title":{},"body":{"controllers/TestController.html":{}}}],["this.testservice.update(id,dto,user",{"_index":862,"title":{},"body":{"controllers/TestController.html":{}}}],["this.userservice.changepassword(id",{"_index":984,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.create(createuserdto",{"_index":975,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findall(user",{"_index":985,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findone(email",{"_index":988,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.remove(email",{"_index":994,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.sendemailforgotpassword(email",{"_index":981,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.update(email",{"_index":991,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.verifyuseremail(id",{"_index":978,"title":{},"body":{"controllers/UserController.html":{}}}],["those",{"_index":1387,"title":{},"body":{"license.html":{}}}],["through",{"_index":756,"title":{},"body":{"controllers/SpecialtiesController.html":{}}}],["throw",{"_index":185,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/ResultService.html":{},"injectables/SpecialtiesService.html":{},"injectables/TestService.html":{},"injectables/UserService.html":{}}}],["time",{"_index":363,"title":{},"body":{"classes/CreateTestDto.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["timely",{"_index":1509,"title":{},"body":{"license.html":{}}}],["times",{"_index":445,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["times/produtos",{"_index":535,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["tipos",{"_index":375,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["title",{"_index":323,"title":{},"body":{"classes/CreateTestDto.html":{},"classes/Test.html":{},"miscellaneous/variables.html":{}}}],["title:'proeficiencia",{"_index":1785,"title":{},"body":{"miscellaneous/variables.html":{}}}],["title?:string",{"_index":826,"title":{},"body":{"classes/Test.html":{}}}],["todo",{"_index":463,"title":{"todo.html":{}},"body":{"classes/CreateTestDto.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["todos",{"_index":481,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["token",{"_index":99,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginResponseDto.html":{},"injectables/UserService.html":{}}}],["token:${tokentourl",{"_index":1078,"title":{},"body":{"injectables/UserService.html":{}}}],["tokencrypt",{"_index":1067,"title":{},"body":{"injectables/UserService.html":{}}}],["tokentourl",{"_index":1071,"title":{},"body":{"injectables/UserService.html":{}}}],["tooling",{"_index":273,"title":{},"body":{"classes/CreateResultDto.html":{}}}],["toolshop",{"_index":256,"title":{},"body":{"classes/CreateResultDto.html":{},"classes/CreateTestDto.html":{},"classes/Test.html":{},"injectables/TestService.html":{},"miscellaneous/variables.html":{}}}],["toolshop:string",{"_index":831,"title":{},"body":{"classes/Test.html":{}}}],["tort",{"_index":1647,"title":{},"body":{"license.html":{}}}],["tostring",{"_index":1070,"title":{},"body":{"injectables/UserService.html":{}}}],["tostring(crypto.enc.utf8",{"_index":1093,"title":{},"body":{"injectables/UserService.html":{}}}],["totaldiff",{"_index":739,"title":{},"body":{"injectables/ResultService.html":{}}}],["trademark",{"_index":1425,"title":{},"body":{"license.html":{}}}],["trademarks",{"_index":1464,"title":{},"body":{"license.html":{}}}],["trainee",{"_index":303,"title":{},"body":{"classes/CreateSpecialtyDto.html":{}}}],["transfer",{"_index":1377,"title":{},"body":{"license.html":{}}}],["transformer",{"_index":1169,"title":{},"body":{"dependencies.html":{}}}],["transporter",{"_index":1035,"title":{},"body":{"injectables/UserService.html":{}}}],["transporter.sendmail(maildata",{"_index":1054,"title":{},"body":{"injectables/UserService.html":{}}}],["true",{"_index":394,"title":{},"body":{"classes/CreateTestDto.html":{},"injectables/TestService.html":{},"injectables/UserService.html":{}}}],["true})@isarray()@arrayminsize(3)@apiproperty({description",{"_index":325,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["true})@isarray()@arrayminsize(5)@apiproperty({description",{"_index":350,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["try",{"_index":1095,"title":{},"body":{"injectables/UserService.html":{}}}],["type",{"_index":104,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateResultDto.html":{},"classes/CreateSpecialtyDto.html":{},"classes/CreateTestDto.html":{},"classes/CreateUserDto.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"injectables/PrismaService.html":{},"classes/Result.html":{},"controllers/ResultController.html":{},"injectables/ResultService.html":{},"controllers/SpecialtiesController.html":{},"injectables/SpecialtiesService.html":{},"classes/Specialty.html":{},"classes/Test.html":{},"controllers/TestController.html":{},"injectables/TestService.html":{},"classes/UpdateResultDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["typescript",{"_index":1255,"title":{},"body":{"index.html":{}}}],["técnicas",{"_index":426,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["técnicos",{"_index":412,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["título",{"_index":381,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["ui",{"_index":1185,"title":{},"body":{"dependencies.html":{}}}],["um",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateTestDto.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["uma",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateTestDto.html":{},"controllers/UserController.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["unauthorizedexception",{"_index":175,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}}}],["unauthorizedexception('invalid",{"_index":187,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["unauthorizedexception('user",{"_index":190,"title":{},"body":{"injectables/AuthService.html":{}}}],["undefined",{"_index":203,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateTestDto.html":{},"injectables/ResultService.html":{},"miscellaneous/functions.html":{}}}],["under",{"_index":1332,"title":{},"body":{"license.html":{}}}],["understand",{"_index":1571,"title":{},"body":{"license.html":{}}}],["unenforceable",{"_index":1702,"title":{},"body":{"license.html":{}}}],["unitário",{"_index":496,"title":{},"body":{"classes/CreateTestDto.html":{},"miscellaneous/variables.html":{}}}],["unknown",{"_index":587,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/ResultService.html":{},"injectables/SpecialtiesService.html":{},"injectables/TestService.html":{},"injectables/UserService.html":{}}}],["unless",{"_index":1579,"title":{},"body":{"license.html":{}}}],["unlicensed",{"_index":1747,"title":{},"body":{"properties.html":{}}}],["unmodified",{"_index":1433,"title":{},"body":{"license.html":{}}}],["unprocessableentityexception",{"_index":787,"title":{},"body":{"injectables/SpecialtiesService.html":{},"injectables/TestService.html":{}}}],["unprocessableentityexception('usuário",{"_index":793,"title":{},"body":{"injectables/SpecialtiesService.html":{},"injectables/TestService.html":{}}}],["until",{"_index":1580,"title":{},"body":{"license.html":{}}}],["update",{"_index":656,"title":{},"body":{"controllers/ResultController.html":{},"injectables/ResultService.html":{},"controllers/SpecialtiesController.html":{},"injectables/SpecialtiesService.html":{},"controllers/TestController.html":{},"injectables/TestService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["update(@param('id",{"_index":694,"title":{},"body":{"controllers/ResultController.html":{},"controllers/TestController.html":{}}}],["update(email",{"_index":949,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["update(id",{"_index":671,"title":{},"body":{"controllers/ResultController.html":{},"injectables/ResultService.html":{},"controllers/SpecialtiesController.html":{},"injectables/SpecialtiesService.html":{},"controllers/TestController.html":{},"injectables/TestService.html":{}}}],["updatedat",{"_index":283,"title":{},"body":{"classes/CreateSpecialtyDto.html":{},"classes/Result.html":{},"classes/Specialty.html":{},"classes/Test.html":{},"injectables/TestService.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["updatedat:date",{"_index":835,"title":{},"body":{"classes/Test.html":{}}}],["updateresultdto",{"_index":672,"title":{"classes/UpdateResultDto.html":{}},"body":{"controllers/ResultController.html":{},"injectables/ResultService.html":{},"classes/UpdateResultDto.html":{},"coverage.html":{}}}],["updatespecialtydto",{"_index":760,"title":{"classes/UpdateSpecialtyDto.html":{}},"body":{"controllers/SpecialtiesController.html":{},"injectables/SpecialtiesService.html":{},"classes/UpdateSpecialtyDto.html":{},"coverage.html":{}}}],["updatetestdto",{"_index":846,"title":{"classes/UpdateTestDto.html":{}},"body":{"controllers/TestController.html":{},"injectables/TestService.html":{},"classes/UpdateTestDto.html":{},"coverage.html":{}}}],["updatetestdto,@loggeduser",{"_index":861,"title":{},"body":{"controllers/TestController.html":{}}}],["updateuserdto",{"_index":240,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/ChangePasswordDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["updateuserdto.confirmpassword",{"_index":1123,"title":{},"body":{"injectables/UserService.html":{}}}],["updateuserdto.newpassword",{"_index":1116,"title":{},"body":{"injectables/UserService.html":{}}}],["updateuserdto.password",{"_index":1117,"title":{},"body":{"injectables/UserService.html":{}}}],["uploadedfiles",{"_index":966,"title":{},"body":{"controllers/UserController.html":{}}}],["uploadfile",{"_index":924,"title":{},"body":{"controllers/UserController.html":{}}}],["uploadfile(@uploadedfiles",{"_index":997,"title":{},"body":{"controllers/UserController.html":{}}}],["uploadfile(file",{"_index":953,"title":{},"body":{"controllers/UserController.html":{}}}],["url",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"injectables/UserService.html":{}}}],["use",{"_index":1426,"title":{},"body":{"license.html":{}}}],["used",{"_index":1305,"title":{},"body":{"license.html":{}}}],["useguards",{"_index":122,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ResultController.html":{},"controllers/SpecialtiesController.html":{},"controllers/TestController.html":{},"controllers/UserController.html":{}}}],["useguards(authguard",{"_index":142,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ResultController.html":{},"controllers/SpecialtiesController.html":{},"controllers/TestController.html":{},"controllers/UserController.html":{}}}],["useguards(undefined)@apibearerauth()@delete(':email')@apioperation({summary",{"_index":941,"title":{},"body":{"controllers/UserController.html":{}}}],["useguards(undefined)@apibearerauth()@get(':email')@apioperation({summary",{"_index":937,"title":{},"body":{"controllers/UserController.html":{}}}],["useguards(undefined)@apibearerauth()@get()@apioperation({summary",{"_index":933,"title":{},"body":{"controllers/UserController.html":{}}}],["useguards(undefined)@apibearerauth()@patch(':email')@apioperation({summary",{"_index":950,"title":{},"body":{"controllers/UserController.html":{}}}],["useguards(undefined)@apibearerauth()@post('upload')@apioperation({summary",{"_index":954,"title":{},"body":{"controllers/UserController.html":{}}}],["useinterceptors",{"_index":967,"title":{},"body":{"controllers/UserController.html":{}}}],["useinterceptors(fileinterceptor('file",{"_index":996,"title":{},"body":{"controllers/UserController.html":{}}}],["user",{"_index":108,"title":{"classes/User.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"controllers/ResultController.html":{},"injectables/ResultService.html":{},"controllers/SpecialtiesController.html":{},"injectables/SpecialtiesService.html":{},"controllers/TestController.html":{},"injectables/TestService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["user'})@useguards(undefined)@apibearerauth",{"_index":112,"title":{},"body":{"controllers/AuthController.html":{}}}],["user.controller",{"_index":1003,"title":{},"body":{"modules/UserModule.html":{}}}],["user.decorator",{"_index":135,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ResultController.html":{},"controllers/SpecialtiesController.html":{},"controllers/TestController.html":{},"controllers/UserController.html":{}}}],["user.decorator.ts",{"_index":1141,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.dto",{"_index":239,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["user.dto.ts",{"_index":207,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:19",{"_index":571,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:23",{"_index":903,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:27",{"_index":566,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:38",{"_index":228,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["user.dto.ts:40",{"_index":572,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:45",{"_index":212,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["user.dto.ts:47",{"_index":563,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.email",{"_index":1049,"title":{},"body":{"injectables/UserService.html":{}}}],["user.id",{"_index":198,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["user.isadmin",{"_index":1111,"title":{},"body":{"injectables/UserService.html":{}}}],["user.isverified",{"_index":189,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["user.password",{"_index":194,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"miscellaneous/variables.html":{}}}],["user.resettoken",{"_index":1084,"title":{},"body":{"injectables/UserService.html":{}}}],["user.service",{"_index":969,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["user.ts",{"_index":1149,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user/user.module",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["user:user",{"_index":613,"title":{},"body":{"classes/LoginResponseDto.html":{},"controllers/TestController.html":{}}}],["usercontroller",{"_index":920,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userid",{"_index":639,"title":{},"body":{"classes/Result.html":{}}}],["usermodule",{"_index":61,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["users",{"_index":934,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userservice",{"_index":968,"title":{"injectables/UserService.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["using",{"_index":1373,"title":{},"body":{"license.html":{}}}],["usuário",{"_index":115,"title":{},"body":{"controllers/AuthController.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateResultDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{}}}],["usuário'})@useinterceptors(undefined",{"_index":959,"title":{},"body":{"controllers/UserController.html":{}}}],["usuários",{"_index":1107,"title":{},"body":{"injectables/UserService.html":{}}}],["utilizando",{"_index":1225,"title":{},"body":{"index.html":{}}}],["utilize",{"_index":1249,"title":{},"body":{"index.html":{}}}],["v",{"_index":1728,"title":{},"body":{"license.html":{}}}],["validate",{"_index":581,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":583,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validator",{"_index":236,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateResultDto.html":{},"classes/CreateSpecialtyDto.html":{},"classes/CreateTestDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/UpdateResultDto.html":{},"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["validly",{"_index":1621,"title":{},"body":{"license.html":{}}}],["value",{"_index":1769,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":1142,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1762,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vazia",{"_index":1122,"title":{},"body":{"injectables/UserService.html":{}}}],["veja",{"_index":1284,"title":{},"body":{"index.html":{}}}],["vercel",{"_index":1245,"title":{},"body":{"index.html":{}}}],["verified",{"_index":191,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["verify",{"_index":964,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["verifyuseremail",{"_index":925,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["verifyuseremail(@param('id",{"_index":977,"title":{},"body":{"controllers/UserController.html":{}}}],["verifyuseremail(id",{"_index":962,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["version",{"_index":1282,"title":{},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["versions",{"_index":1386,"title":{},"body":{"license.html":{}}}],["vertente",{"_index":343,"title":{},"body":{"classes/CreateTestDto.html":{}}}],["view",{"_index":938,"title":{},"body":{"controllers/UserController.html":{}}}],["vitor",{"_index":1265,"title":{},"body":{"index.html":{}}}],["voc",{"_index":396,"title":{},"body":{"classes/CreateTestDto.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["void",{"_index":961,"title":{},"body":{"controllers/UserController.html":{}}}],["want",{"_index":1721,"title":{},"body":{"license.html":{}}}],["warranties",{"_index":1627,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1526,"title":{},"body":{"license.html":{}}}],["whether",{"_index":1353,"title":{},"body":{"license.html":{}}}],["wide",{"_index":1418,"title":{},"body":{"license.html":{}}}],["within",{"_index":1529,"title":{},"body":{"license.html":{}}}],["without",{"_index":1367,"title":{},"body":{"license.html":{}}}],["work",{"_index":1336,"title":{},"body":{"license.html":{}}}],["world",{"_index":1417,"title":{},"body":{"license.html":{}}}],["yarn",{"_index":1215,"title":{},"body":{"index.html":{}}}],["z",{"_index":215,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["z])(?=.*[a",{"_index":214,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["zoom",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/ResultModule.html":{},"modules/SpecialtiesModule.html":{},"modules/TestModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAppStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAppStatus\n                        \n                    \n                \n            \n            \n                \ngetAppStatus()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:17\n                \n            \n\n\n            \n                \n                    Recebe uma requisição GET e retorna um objeto de status\nda aplicação com a URL de documentação\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        Objeto de status da aplicação\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport { AppService } from './app.service';\n\n@ApiTags('Status')\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  /**\n\t * Recebe uma requisição GET e retorna um objeto de status\n\t * da aplicação com a URL de documentação\n\t * @param req Objeto de Request do Express\n\t * @returns Objeto de status da aplicação\n\t */\n  @Get()\n  getAppStatus(): string {\n    return this.appService.getAppStatus();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nResultModule\n\nResultModule\n\nAppModule -->\n\nResultModule->AppModule\n\n\n\n\n\nSpecialtiesModule\n\nSpecialtiesModule\n\nAppModule -->\n\nSpecialtiesModule->AppModule\n\n\n\n\n\nTestModule\n\nTestModule\n\nAppModule -->\n\nTestModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            PrismaModule\n                        \n                        \n                            ResultModule\n                        \n                        \n                            SpecialtiesModule\n                        \n                        \n                            TestModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { AuthModule } from './auth/auth.module';\nimport { PrismaModule } from './prisma/prisma.module';\nimport { UserModule } from './user/user.module';\nimport { SpecialtiesModule } from './specialties/specialties.module';\nimport { TestModule } from './Test-crud/test.module';\nimport { ResultModule } from './result/result.module';\n\n@Module({\n  imports: [PrismaModule, UserModule, AuthModule,TestModule,SpecialtiesModule, ResultModule],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAppStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAppStatus\n                        \n                    \n                \n            \n            \n                \ngetAppStatus()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getAppStatus(): string {\n    return 'Server is running! 🚀\\n Please check http://localhost:3333/api for Swagger docs...';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                            \n                                profile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(loginDto: LoginDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@HttpCode(HttpStatus.OK)@ApiOperation({summary: 'Login receiving a token for authentication'})\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loginDto\n                                    \n                                                LoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        Token\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profile\n                        \n                    \n                \n            \n            \n                \nprofile(user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Returns the currently authenticated user'})@UseGuards(undefined)@ApiBearerAuth()\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { message: string; }\n\n                    \n                    \n                        message: Usuário autenticado com sucesso!\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Post,\n  HttpCode,\n  HttpStatus,\n  Get,\n  UseGuards,\n} from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { ApiBearerAuth, ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { User } from 'src/user/entities/user.entity';\nimport { AuthService } from './auth.service';\nimport { LoginDto } from './dto/login.dto';\nimport { LoginResponseDto } from './dto/login.response.dto';\nimport { LoggedUser } from './logged-user.decorator';\n\n@ApiTags('Auth')\n@Controller('auth')\nexport class AuthController {\n  constructor(private readonly authService: AuthService) {}\n\n  /**\n\t * @param req\n\t * @returns Token\n\t */\n  @Post()\n  @HttpCode(HttpStatus.OK)\n  @ApiOperation({\n    summary: 'Login receiving a token for authentication',\n  })\n  login(@Body() loginDto: LoginDto): Promise {\n    return this.authService.login(loginDto);\n  }\n\n  /**\n\t * @param req\n\t * @returns message: Usuário autenticado com sucesso!\n\t */\n  @Get()\n  @ApiOperation({\n    summary: 'Returns the currently authenticated user'\n  })\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth()\n  profile(@LoggedUser() user: User) {\n    return {message:`${user.name} successfully logged in!`};;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nPrismaModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { AuthController } from './auth.controller';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { JwtModule } from '@nestjs/jwt';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtStrategy } from './jwt.strategy';\n\n@Module({\n  imports: [\n    PrismaModule,\n    PassportModule.register({ defaultStrategy: 'jwt'}),\n    JwtModule.register({\n      secret: process.env.JWT_SECRET,\n      signOptions: { expiresIn: '24h' }\n    })],\n  controllers: [AuthController],\n  providers: [AuthService, JwtStrategy]\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(loginDto: LoginDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loginDto\n                                    \n                                                LoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { PrismaService } from '../prisma/prisma.service';\nimport { LoginDto } from './dto/login.dto';\nimport { LoginResponseDto } from './dto/login.response.dto';\nimport * as bcrypt from 'bcrypt';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private readonly prisma: PrismaService,\n    private readonly jwtService: JwtService,\n  ) {}\n\n  async login(loginDto: LoginDto): Promise {\n    const { email, password } = loginDto;\n    console.log(`dto.. ${email} - ${password}`);\n\n    const user = await this.prisma.user.findUnique({ where: { email } });\n\n    if (!user) {\n      throw new UnauthorizedException('Invalid email and/or password');\n    }\n\n    if (!user.isVerified) {\n      throw new UnauthorizedException('User not verified');\n    }\n\n    const isHashValid = await bcrypt.compare(password, user.password);\n    if (!isHashValid) {\n      throw new UnauthorizedException('Invalid email and/or password');\n    }\n\n    delete user.password;\n\n    await this.prisma.user.update({\n      where: { id: user.id },\n      data: { resetToken: null },\n    });\n\n    return {\n      token: this.jwtService.sign({ email }),\n      user: undefined,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ChangePasswordDto.html":{"url":"classes/ChangePasswordDto.html","title":"class - ChangePasswordDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ChangePasswordDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/update-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                confirmPassword\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        confirmPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty({example: 'Petlove@123'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/update-user.dto.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @MinLength(6)@IsString()@Matches(/((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/, {message: 'senha muito fraca'})@IsNotEmpty()@ApiProperty({description: 'Senha do usuário. Requer letras maiúsculas e minúsculas, números ou caracteres especiais', example: 'Petlove@123'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/update-user.dto.ts:38\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport {\n  MinLength,\n  IsString,\n  Matches,\n  IsNotEmpty,\n  IsOptional,\n} from 'class-validator';\nimport { CreateUserDto } from './create-user.dto';\n\nexport class UpdateUserDto extends PartialType(CreateUserDto) {\n  @MinLength(6)\n  @IsString()\n  @Matches(/((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/, {\n    message: 'senha muito fraca',\n  })\n  @IsOptional()\n  @ApiProperty({\n    description:\n      'Senha do usuário. Requer letras maiúsculas e minúsculas, números ou caracteres especiais',\n    example: 'Petlove@123',\n  })\n  newPassword: string;\n}\n\nexport class ChangePasswordDto {\n  @MinLength(6)\n  @IsString()\n  @Matches(/((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/, {\n    message: 'senha muito fraca',\n  })\n  @IsNotEmpty()\n  @ApiProperty({\n    description:\n      'Senha do usuário. Requer letras maiúsculas e minúsculas, números ou caracteres especiais',\n    example: 'Petlove@123',\n  })\n  password: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({\n    example: 'Petlove@123',\n  })\n  confirmPassword: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateResultDto.html":{"url":"classes/CreateResultDto.html","title":"class - CreateResultDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateResultDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/result/dto/create-result.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                computationalFundamentals\n                            \n                            \n                                design\n                            \n                            \n                                person\n                            \n                            \n                                process\n                            \n                            \n                                system\n                            \n                            \n                                test\n                            \n                            \n                                toolshop\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        computationalFundamentals\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@ApiProperty({description: 'Result for the category Computational Fundamentals', example: 4})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/result/dto/create-result.dto.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        design\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@ApiProperty({description: 'result for the design category', example: 2})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/result/dto/create-result.dto.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        person\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@ApiProperty({description: 'Person test result', example: 3})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/result/dto/create-result.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        process\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@ApiProperty({description: 'Process test result', example: 5})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/result/dto/create-result.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        system\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@ApiProperty({description: 'System test result', example: 2})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/result/dto/create-result.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        test\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@ApiProperty({description: 'result for the test category', example: 4})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/result/dto/create-result.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toolshop\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@ApiProperty({description: 'result for the tooling category', example: 3})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/result/dto/create-result.dto.ts:45\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNumber } from 'class-validator';\n\nexport class CreateResultDto {\n  @IsNumber()\n  @ApiProperty({\n    description: 'System test result',\n    example: 2,\n  })\n  system: number;\n\n  @IsNumber()\n  @ApiProperty({\n    description: 'Person test result',\n    example: 3,\n  })\n  person: number;\n\n  @IsNumber()\n  @ApiProperty({\n    description: 'result for the test category',\n    example: 4,\n  })\n  test: number;\n\n  @IsNumber()\n  @ApiProperty({\n    description: 'Process test result',\n    example: 5,\n  })\n  process: number;\n\n  @IsNumber()\n  @ApiProperty({\n    description: 'result for the design category',\n    example: 2,\n  })\n  design: number;\n\n  @IsNumber()\n  @ApiProperty({\n    description: 'result for the tooling category',\n    example: 3,\n  })\n  toolshop: number;\n\n  @IsNumber()\n  @ApiProperty({\n    description: 'Result for the category Computational Fundamentals',\n    example: 4,\n  })\n  computationalFundamentals: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateSpecialtyDto.html":{"url":"classes/CreateSpecialtyDto.html","title":"class - CreateSpecialtyDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateSpecialtyDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/specialties/dto/create-specialty.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                description\n                            \n                            \n                                influence\n                            \n                            \n                                performance\n                            \n                            \n                                person\n                            \n                            \n                                process\n                            \n                            \n                                system\n                            \n                            \n                                technology\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/specialties/dto/create-specialty.dto.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'Description of the specialty', example: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit.'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/specialties/dto/create-specialty.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        influence\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber({maxDecimalPlaces: 2})@ApiProperty({description: 'Influence score', example: 2})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/specialties/dto/create-specialty.dto.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        performance\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'Professional level (Trainee, Junior, Pleno, Senior, Especialista, Tech-lead)', example: 'Junior'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/specialties/dto/create-specialty.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        person\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber({maxDecimalPlaces: 2})@ApiProperty({description: 'Persons score', example: 3})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/specialties/dto/create-specialty.dto.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        process\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber({maxDecimalPlaces: 2})@ApiProperty({description: 'Process score', example: 5})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/specialties/dto/create-specialty.dto.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        system\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber({maxDecimalPlaces: 2})@ApiProperty({description: 'Systems score', example: 2})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/specialties/dto/create-specialty.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        technology\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber({maxDecimalPlaces: 2})@ApiProperty({description: 'technology score', example: 4})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/specialties/dto/create-specialty.dto.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/specialties/dto/create-specialty.dto.ts:66\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNumber, IsString } from 'class-validator';\n\nexport class CreateSpecialtyDto {\n  @IsString()\n  @ApiProperty({\n    description:\n      'Professional level (Trainee, Junior, Pleno, Senior, Especialista, Tech-lead)',\n    example: 'Junior',\n  })\n  performance: string;\n\n  @IsString()\n  @ApiProperty({\n    description: 'Description of the specialty',\n    example: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit.',\n  })\n  description: string;\n\n  @IsNumber({\n    maxDecimalPlaces: 2,\n  })\n  @ApiProperty({\n    description: 'Systems score',\n    example: 2,\n  })\n  system: number;\n\n  @IsNumber({\n    maxDecimalPlaces: 2,\n  })\n  @ApiProperty({\n    description: 'Persons score',\n    example: 3,\n  })\n  person: number;\n\n  @IsNumber({\n    maxDecimalPlaces: 2,\n  })\n  @ApiProperty({\n    description: 'technology score',\n    example: 4,\n  })\n  technology: number;\n\n  @IsNumber({\n    maxDecimalPlaces: 2,\n  })\n  @ApiProperty({\n    description: 'Process score',\n    example: 5,\n  })\n  process: number;\n\n  @IsNumber({\n    maxDecimalPlaces: 2,\n  })\n  @ApiProperty({\n    description: 'Influence score',\n    example: 2,\n  })\n  influence: number;\n\n  createdAt: Date;\n  updatedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTestDto.html":{"url":"classes/CreateTestDto.html","title":"class - CreateTestDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTestDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Test-crud/dto/create-test.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                computationalFundamentals\n                            \n                            \n                                design\n                            \n                            \n                                person\n                            \n                            \n                                process\n                            \n                            \n                                system\n                            \n                            \n                                test\n                            \n                            \n                                title\n                            \n                            \n                                toolshop\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        computationalFundamentals\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString({each: true})@IsArray()@ArrayMinSize(3)@ApiProperty({description: 'A capacidade da pessoa em estabelecer e difundir os fundamentos computacionais e, através deles, melhorar a qualidade do código são os atributos buscados nessa vertente.', example: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Test-crud/dto/create-test.dto.ts:112\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        design\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString({each: true})@IsArray()@ArrayMinSize(3)@ApiProperty({description: 'Abrangerá os princípios de Design de cada chapter.', example: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Test-crud/dto/create-test.dto.ts:85\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        person\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString({each: true})@IsArray()@ArrayMinSize(5)@ApiProperty({description: 'Relacionamento da pessoa com outros dentro e fora da sua squad.', example: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Test-crud/dto/create-test.dto.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        process\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString({each: true})@IsArray()@ArrayMinSize(5)@ApiProperty({description: 'Nível de engajamento da pessoa com os processos definidos pelo time de tecnologia.', example: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Test-crud/dto/create-test.dto.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        system\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString({each: true})@IsArray()@ArrayMinSize(5)@ApiProperty({description: 'Conhecimento sistêmico da empresa. A capacidade da pessoa em conhecer e impactar os sistemas de tecnologia.', example: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Test-crud/dto/create-test.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        test\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString({each: true})@IsArray()@ArrayMinSize(3)@ApiProperty({description: 'A importância de testes e os tipos de testes são as coisas buscadas nesses níveis.', example: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Test-crud/dto/create-test.dto.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'Título do teste', example: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Test-crud/dto/create-test.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toolshop\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString({each: true})@IsArray()@ArrayMinSize(3)@ApiProperty({description: 'Abordará temas como CI/CD e Código Limpo.', example: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Test-crud/dto/create-test.dto.ts:98\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { ArrayMinSize, IsArray, IsString } from 'class-validator';\n\nexport class CreateTestDto {\n  @IsString()\n  @ApiProperty({\n    description: 'Título do teste',\n    example: ['Teste de Proficiência'],\n  })\n  title: string;\n\n  @IsString({ each: true })\n  @IsArray()\n  @ArrayMinSize(5)\n  @ApiProperty({\n    description:\n      'Conhecimento sistêmico da empresa. A capacidade da pessoa em conhecer e impactar os sistemas de tecnologia.',\n    example: [\n      'Você é capaz de implementar features simples e resolver pequenos bugs dentro da sua squad?',\n      'Você desenha e implementa soluções de média e alta complexidade reduzindo débitos técnicos do time?',\n      'Você é capaz de subir e controlar sistemas em produção e também monitora a qualidade olhando para SLAs?',\n      'Você desenvolve arquitetura para futuras soluções e define SLAs?',\n      'Você lidera as soluções técnicas com excelência e cria planos de contingências?',\n    ],\n  })\n  system: string[];\n\n  @IsString({ each: true })\n  @IsArray()\n  @ArrayMinSize(5)\n  @ApiProperty({\n    description:\n      'Relacionamento da pessoa com outros dentro e fora da sua squad.',\n    example: [\n      'Você está sempre aprendendo com os outros e estuda mais quando necessário?',\n      'Você sempre ajuda as pessoas do seu time a terem sucesso em seus desafios',\n      'Você organiza times, promove feedbacks e intermedeia discussões',\n      'Você mentora outros em seu desenvolvimento e já foi coach na construção de PDI',\n      'Você gerencia carreiras, expectativas, performances e nível de engajamento do seu time',\n    ],\n  })\n  person: string[];\n\n  @IsString({ each: true })\n  @IsArray()\n  @ArrayMinSize(5)\n  @ApiProperty({\n    description:\n      'Nível de engajamento da pessoa com os processos definidos pelo time de tecnologia.',\n    example: [\n      'Você segue todo o flow (git, CI/CD, Jira..) de desenvolvimento entregando features consistentes em produção?',\n      'Você sugere mudanças nos flows com consistência, sempre procurando caminhos para melhorar',\n      'Você sempre chama o time para reavaliar os flows, garantindo que todos entendam os benefícios e impactos',\n      'Você é o responsável por ajustar os flows do time, escutando feedbacks e guiando através das mudanças',\n      'Você define os flows baseado na maturidade, agilidade e disciplina do time',\n    ],\n  })\n  process: string[];\n\n  @IsString({ each: true })\n  @IsArray()\n  @ArrayMinSize(3)\n  @ApiProperty({\n    description:\n      'A importância de testes e os tipos de testes são as coisas buscadas nesses níveis.',\n    example: [\n      'Você implementa teste unitário e também testa a sua solução manualmente considerando as definições do produto?',\n      'Você simula comportamentos dos clientes no seu desenvolvimento, testa além do caminho feliz e analisa o impacto das mudanças',\n      'Você implementa teste e2e, de integração que permita avaliar e monitorar o produto',\n    ],\n  })\n  test: string;\n\n  @IsString({ each: true })\n  @IsArray()\n  @ArrayMinSize(3)\n  @ApiProperty({\n    description: 'Abrangerá os princípios de Design de cada chapter.',\n    example: [\n      'Você conhece e aplica os princípios do S.O.L.I.D (Ou algum outro pattern definido pelo seu chapter Manager) no seu código?',\n      'Você conhece e aplica pelo menos outros 3 princípios de pattern no seu código e ajuda seus colegas de time a escolherem qual o melhor para a solução do problema',\n      'Você já ajudou a definir padrões de projetos de times/produtos fora do seu time',\n    ],\n  })\n  design: string[];\n\n  @IsString({ each: true })\n  @IsArray()\n  @ArrayMinSize(3)\n  @ApiProperty({\n    description: 'Abordará temas como CI/CD e Código Limpo.',\n    example: [\n      'Você conhece o conceito de código limpo (link)? Aplica o conceito em pelo menos 50% do seu código? Conhece e desenvolve seguindo os nossos processos de CI/CD?https://petlove.atlassian.net/wiki/spaces/TEC/pages/351666200/Playbook',\n      'Você Constrói códigos modulares e segue os conceitos de código limpo em 80% do seu código?',\n      'Você ajuda a definir processos de CI/CD do seu time e da sua área? Ensina seus colegas a importância de um código limpo e cobra isso nos PRs que revisa?',\n    ],\n  })\n  toolshop: string[];\n\n  @IsString({ each: true })\n  @IsArray()\n  @ArrayMinSize(3)\n  @ApiProperty({\n    description:\n      'A capacidade da pessoa em estabelecer e difundir os fundamentos computacionais e, através deles, melhorar a qualidade do código são os atributos buscados nessa vertente.',\n    example: [\n      'Você Conhece e aplica estruturas de dados e multithreading?',\n      'Você consegue desenhar a arquitetura de um sistema de complexidade média a alta',\n      'Você consegue desenhar uma arquitetura multis sistêmica e para múltiplos times',\n    ],\n  })\n  computationalFundamentals: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                confirmPassword\n                            \n                            \n                                email\n                            \n                            \n                                name\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        confirmPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty({example: 'Petlove@123'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsEmail()@ApiProperty({description: 'Email do usuário', example: 'PetLove@gmail.com'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Length(15, 40)@IsString()@IsNotEmpty()@ApiProperty({description: 'Nome do usuário', example: 'Petlove'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @MinLength(6)@IsString()@Matches(/((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/, {message: 'senha muito fraca'})@IsNotEmpty()@ApiProperty({description: 'Senha do usuário. Requer letras maiúsculas e minúsculas, números ou caracteres especiais', example: 'Petlove@123'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:40\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {\n  IsEmail,\n  IsNotEmpty,\n  IsString,\n  Length,\n  Matches,\n  MinLength,\n} from 'class-validator';\n\nexport class CreateUserDto {\n  @Length(15, 40)\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({\n    description: 'Nome do usuário',\n    example: 'Petlove',\n  })\n  name: string;\n\n  @IsNotEmpty()\n  @IsEmail()\n  @ApiProperty({\n    description: 'Email do usuário',\n    example: 'PetLove@gmail.com',\n  })\n  email: string;\n\n  @MinLength(6)\n  @IsString()\n  @Matches(/((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/, {\n    message: 'senha muito fraca',\n  })\n  @IsNotEmpty()\n  @ApiProperty({\n    description:\n      'Senha do usuário. Requer letras maiúsculas e minúsculas, números ou caracteres especiais',\n    example: 'Petlove@123',\n  })\n  password: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({\n    example: 'Petlove@123',\n  })\n  confirmPassword: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JwtPayload.html":{"url":"interfaces/JwtPayload.html","title":"interface - JwtPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  JwtPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/entities/jwtChangePassword.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface JwtPayload {\n  id?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt.strategy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/jwt.strategy.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PrismaService } from 'src/prisma/prisma.service';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(private readonly prisma: PrismaService) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: process.env.JWT_SECRET,\n    });\n  }\n\n  async validate(payload: { email: string }) {\n    const user = await this.prisma.user.findUnique({\n      where: { email: payload.email },\n    });\n\n    if (!user) {\n      throw new UnauthorizedException(\n        'User does not exist or is not authenticated',\n      );\n    }\n\n    delete user.password;\n\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginDto.html":{"url":"classes/LoginDto.html","title":"class - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/login.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@IsEmail()@ApiProperty({description: 'User email', example: 'PetLove@gmail.com'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty({description: 'User password', example: 'Petlove@123'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login.dto.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { IsString, IsNotEmpty, IsEmail} from \"class-validator\";\n\nexport class LoginDto {\n\n  @IsString()\n  @IsNotEmpty()\n  @IsEmail()\n  @ApiProperty({\n    description: \"User email\",\n    example: \"PetLove@gmail.com\"\n  })\n  email: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({\n    description: \"User password\",\n    example: \"Petlove@123\"\n  })\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginResponseDto.html":{"url":"classes/LoginResponseDto.html","title":"class - LoginResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/login.response.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                token\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'JWT generated by login', example: 'AUTOMATICALLY GENERATED TOKEN'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login.response.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Authenticated user data'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login.response.dto.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { User } from \"src/user/entities/user.entity\";\n\nexport class LoginResponseDto {\n\n  @ApiProperty({\n    description: \"JWT generated by login\",\n    example: \"AUTOMATICALLY GENERATED TOKEN\"\n  })\n  token: string;\n\n  @ApiProperty({\n    description: \"Authenticated user data\",\n  })\n  user:User;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PrismaModule.html":{"url":"modules/PrismaModule.html","title":"module - PrismaModule","body":"\n                   \n\n\n\n\n    Modules\n    PrismaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_providers\n\n\n\ncluster_PrismaModule_exports\n\n\n\n\nPrismaService \n\nPrismaService \n\n\n\nPrismaModule\n\nPrismaModule\n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/prisma/prisma.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PrismaService } from './prisma.service';\n\n@Module({\n  providers: [PrismaService],\n  exports: [PrismaService],\n})\nexport class PrismaModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prisma/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    PrismaClient\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                homepage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                enableShutdownHooks\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        enableShutdownHooks\n                        \n                    \n                \n            \n            \n                \n                    \n                    enableShutdownHooks(app: INestApplication)\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n                                    \n                                            INestApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        homepage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/prisma/prisma.service.ts:6\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { INestApplication, Injectable, OnModuleInit } from '@nestjs/common';\nimport { PrismaClient } from '@prisma/client';\n\n@Injectable()\nexport class PrismaService extends PrismaClient implements OnModuleInit {\n  homepage: any;\n  async onModuleInit() {\n    await this.$connect();\n  }\n\n  async enableShutdownHooks(app: INestApplication) {\n    this.$on('beforeExit', async () => {\n      await app.close();\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Result.html":{"url":"classes/Result.html","title":"class - Result","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Result\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/result/entities/result.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                    Optional\n                                influence\n                            \n                            \n                                    Optional\n                                isValided\n                            \n                            \n                                nextRole\n                            \n                            \n                                person\n                            \n                            \n                                process\n                            \n                            \n                                system\n                            \n                            \n                                    Optional\n                                technology\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                            \n                                    Optional\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/result/entities/result.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/result/entities/result.entity.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        influence\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/result/entities/result.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        isValided\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/result/entities/result.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nextRole\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/result/entities/result.entity.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        person\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/result/entities/result.entity.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        process\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/result/entities/result.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        system\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/result/entities/result.entity.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        technology\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/result/entities/result.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/result/entities/result.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/result/entities/result.entity.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Result {\n  id?: string;\n  nextRole: string;\n  system: number;\n  person: number;\n  process: number;\n  technology?: number;\n  influence?: number;\n  isValided?: string;\n  userId?: string;\n  createdAt?: Date;\n  updatedAt?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ResultController.html":{"url":"controllers/ResultController.html","title":"controller - ResultController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ResultController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/result/result.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                Result\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(user: User, dto: CreateResultDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Create test result'})\n                \n            \n\n            \n                \n                    Defined in src/result/result.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                CreateResultDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll(user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'List all results'})\n                \n            \n\n            \n                \n                    Defined in src/result/result.controller.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOperation({summary: 'To find a test result by id'})\n                \n            \n\n            \n                \n                    Defined in src/result/result.controller.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/result/result.controller.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, dto: UpdateResultDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiOperation({summary: 'To change data from a test performed'})\n                \n            \n\n            \n                \n                    Defined in src/result/result.controller.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                UpdateResultDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  UseGuards,\n} from '@nestjs/common';\nimport { ResultService } from './result.service';\nimport { CreateResultDto } from './dto/create-result.dto';\nimport { UpdateResultDto } from './dto/update-result.dto';\nimport { ApiBearerAuth, ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { LoggedUser } from 'src/auth/logged-user.decorator';\nimport { User } from 'src/user/entities/user.entity';\nimport { AuthGuard } from '@nestjs/passport';\n\n@ApiTags('Result')\n@UseGuards(AuthGuard())\n@ApiBearerAuth()\n@Controller('Result')\nexport class ResultController {\n  constructor(private readonly resultService: ResultService) {}\n\n  @Post()\n  @ApiOperation({ summary: 'Create test result' })\n  create(@LoggedUser() user: User, @Body() dto: CreateResultDto) {\n    return this.resultService.create(user, dto);\n  }\n\n  @Get()\n  @ApiOperation({ summary: 'List all results' })\n  findAll(@LoggedUser() user: User) {\n    return this.resultService.findAll(user);\n  }\n\n  @Get(':id')\n  @ApiOperation({ summary: 'To find a test result by id' })\n  findOne(@Param('id') id: string) {\n    return this.resultService.findOne(id);\n  }\n\n  @Patch(':id')\n  @ApiOperation({ summary: 'To change data from a test performed' })\n  update(@Param('id') id: string, @Body() dto: UpdateResultDto) {\n    return this.resultService.update(id, dto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.resultService.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ResultModule.html":{"url":"modules/ResultModule.html","title":"module - ResultModule","body":"\n                   \n\n\n\n\n    Modules\n    ResultModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ResultModule\n\n\n\ncluster_ResultModule_providers\n\n\n\ncluster_ResultModule_imports\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nResultModule\n\nResultModule\n\nResultModule -->\n\nPrismaModule->ResultModule\n\n\n\n\n\nResultService\n\nResultService\n\nResultModule -->\n\nResultService->ResultModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/result/result.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ResultService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ResultController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ResultService } from './result.service';\nimport { ResultController } from './result.controller';\nimport { PassportModule } from '@nestjs/passport';\nimport { PrismaModule } from 'src/prisma/prisma.module';\n\n@Module({\n  imports: [PrismaModule, PassportModule.register({ defaultStrategy: 'jwt' })],\n  controllers: [ResultController],\n  providers: [ResultService]\n})\nexport class ResultModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ResultService.html":{"url":"injectables/ResultService.html","title":"injectable - ResultService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ResultService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/result/result.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/result/result.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(user: User, dto: CreateResultDto)\n                \n            \n\n\n            \n                \n                    Defined in src/result/result.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                CreateResultDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/result/result.service.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/result/result.service.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/result/result.service.ts:172\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, dto: UpdateResultDto)\n                \n            \n\n\n            \n                \n                    Defined in src/result/result.service.ts:123\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                UpdateResultDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { Prisma } from '@prisma/client';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { User } from 'src/user/entities/user.entity';\nimport { handleError } from 'src/utils/handleError.utils';\nimport { isAdmin } from 'src/utils/isAdmin.utils';\nimport { CreateResultDto } from './dto/create-result.dto';\nimport { UpdateResultDto } from './dto/update-result.dto';\n\n@Injectable()\nexport class ResultService {\n  constructor(private readonly prisma: PrismaService) {}\n  async create(user: User, dto: CreateResultDto) {\n    const technology =\n      (dto.toolshop + dto.design + dto.test + dto.computationalFundamentals) *\n      (5 / 12);\n    const influence = (dto.system + dto.process + 2 * dto.person) / 4;\n\n    let nextRoleValue = undefined;\n\n    const specialtys = await this.prisma.specialtie.findMany();\n\n    if (specialtys.length === 0) {\n      throw new NotFoundException('Não existem especialidades cadastradas.');\n    }\n\n    const result = specialtys.map((specialy) => {\n      const { performance, system, person, technology, process, influence } =\n        specialy;\n      const systemDiff = system - dto.system;\n      const personDiff = person - dto.person;\n      const technologyDiff = technology - technology;\n      const processDiff = process - dto.process;\n      const influenceDiff = influence - influence;\n\n      const totalDiff =\n        Math.abs(systemDiff) +\n        Math.abs(personDiff) +\n        Math.abs(technologyDiff) +\n        Math.abs(processDiff) +\n        Math.abs(influenceDiff);\n      return { performance, totalDiff };\n    });\n\n    const near = result.reduce((prev, current) =>\n      prev.totalDiff \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SpecialtiesController.html":{"url":"controllers/SpecialtiesController.html","title":"controller - SpecialtiesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SpecialtiesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/specialties/specialties.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                Specialty\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(dto: CreateSpecialtyDto, user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'create a specialty'})\n                \n            \n\n            \n                \n                    Defined in src/specialties/specialties.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateSpecialtyDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll(user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'List all specialties'})\n                \n            \n\n            \n                \n                    Defined in src/specialties/specialties.controller.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string, user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOperation({summary: 'Find a specific specialty through the id'})\n                \n            \n\n            \n                \n                    Defined in src/specialties/specialties.controller.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string, user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ApiOperation({summary: 'delete a specialty'})\n                \n            \n\n            \n                \n                    Defined in src/specialties/specialties.controller.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, dto: UpdateSpecialtyDto, user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiOperation({summary: 'Change or update information about a specialty'})\n                \n            \n\n            \n                \n                    Defined in src/specialties/specialties.controller.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                UpdateSpecialtyDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  UseGuards,\n} from '@nestjs/common';\nimport { SpecialtiesService } from './specialties.service';\nimport { CreateSpecialtyDto } from './dto/create-specialty.dto';\nimport { UpdateSpecialtyDto } from './dto/update-specialty.dto';\nimport { User } from 'src/user/entities/user.entity';\nimport { LoggedUser } from 'src/auth/logged-user.decorator';\nimport { AuthGuard } from '@nestjs/passport';\nimport { ApiBearerAuth, ApiOperation, ApiTags } from '@nestjs/swagger';\n\n@UseGuards(AuthGuard())\n@ApiBearerAuth()\n@ApiTags('Specialtie')\n@Controller('Specialty')\nexport class SpecialtiesController {\n  constructor(private readonly specialty: SpecialtiesService) {}\n\n  @Post()\n  @ApiOperation({ summary: 'create a specialty' })\n  create(@Body() dto: CreateSpecialtyDto, @LoggedUser() user: User) {\n    return this.specialty.create(dto, user);\n  }\n\n  @Get()\n  @ApiOperation({ summary: 'List all specialties' })\n  findAll(@LoggedUser() user: User) {\n    return this.specialty.findAll(user);\n  }\n\n  @Get(':id')\n  @ApiOperation({ summary: 'Find a specific specialty through the id' })\n  findOne(@Param('id') id: string, @LoggedUser() user: User) {\n    return this.specialty.findOne(id, user);\n  }\n\n  @Patch(':id')\n  @ApiOperation({ summary: 'Change or update information about a specialty' })\n  update(\n    @Param('id') id: string,\n    @Body() dto: UpdateSpecialtyDto,\n    @LoggedUser() user: User,\n  ) {\n    return this.specialty.update(id, dto, user);\n  }\n\n  @Delete(':id')\n  @ApiOperation({ summary: 'delete a specialty' })\n  remove(@Param('id') id: string, @LoggedUser() user: User) {\n    return this.specialty.remove(id, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SpecialtiesModule.html":{"url":"modules/SpecialtiesModule.html","title":"module - SpecialtiesModule","body":"\n                   \n\n\n\n\n    Modules\n    SpecialtiesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_SpecialtiesModule\n\n\n\ncluster_SpecialtiesModule_providers\n\n\n\ncluster_SpecialtiesModule_imports\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nSpecialtiesModule\n\nSpecialtiesModule\n\nSpecialtiesModule -->\n\nPrismaModule->SpecialtiesModule\n\n\n\n\n\nSpecialtiesService\n\nSpecialtiesService\n\nSpecialtiesModule -->\n\nSpecialtiesService->SpecialtiesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/specialties/specialties.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SpecialtiesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            SpecialtiesController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { SpecialtiesService } from './specialties.service';\nimport { SpecialtiesController } from './specialties.controller';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { PassportModule } from '@nestjs/passport';\n\n@Module({\n  imports: [PrismaModule, PassportModule.register({ defaultStrategy: 'jwt' })],\n  controllers: [SpecialtiesController],\n  providers: [SpecialtiesService],\n})\nexport class SpecialtiesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SpecialtiesService.html":{"url":"injectables/SpecialtiesService.html","title":"injectable - SpecialtiesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SpecialtiesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/specialties/specialties.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/specialties/specialties.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(dto: CreateSpecialtyDto, user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/specialties/specialties.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateSpecialtyDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/specialties/specialties.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string, user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/specialties/specialties.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string, user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/specialties/specialties.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, dto: UpdateSpecialtyDto, user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/specialties/specialties.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                UpdateSpecialtyDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnprocessableEntityException } from '@nestjs/common';\nimport { Prisma } from '@prisma/client';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { User } from 'src/user/entities/user.entity';\nimport { handleError } from 'src/utils/handleError.utils';\nimport { isAdmin } from 'src/utils/isAdmin.utils';\nimport { CreateSpecialtyDto } from './dto/create-specialty.dto';\nimport { UpdateSpecialtyDto } from './dto/update-specialty.dto';\nimport { Specialty } from './entities/specialty.entity';\n\n@Injectable()\nexport class SpecialtiesService {\n  constructor(private readonly prisma: PrismaService) {}\n\n  async create(dto: CreateSpecialtyDto, user: User) {\n    isAdmin(user);\n    const data: Prisma.SpecialtieCreateInput = { ...dto };\n    return await this.prisma.specialtie.create({ data }).catch(handleError);\n  }\n\n  async findAll(user: User) {\n    if (!user) {\n      throw new UnprocessableEntityException('Usuário não está logado');\n    }\n\n    return await this.prisma.specialtie.findMany().catch(handleError);\n  }\n\n  async findOne(id: string, user: User) {\n    if (!user) {\n      throw new UnprocessableEntityException('Usuário não está logado');\n    }\n\n    return await this.prisma.specialtie\n      .findUnique({ where: { id } })\n      .catch(handleError);\n  }\n\n  async update(id: string, dto: UpdateSpecialtyDto, user: User) {\n    isAdmin(user);\n    const data: Partial = { ...dto };\n    return await this.prisma.specialtie\n      .update({\n        where: { id },\n        data,\n      })\n      .catch(handleError);\n  }\n\n  async remove(id: string, user: User) {\n    isAdmin(user);\n    await this.prisma.specialtie.delete({ where: { id } }).catch(handleError);\n    return { message: 'specialty deleted successfully' };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Specialty.html":{"url":"classes/Specialty.html","title":"class - Specialty","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Specialty\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/specialties/entities/specialty.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                description\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                influence\n                            \n                            \n                                performance\n                            \n                            \n                                person\n                            \n                            \n                                process\n                            \n                            \n                                system\n                            \n                            \n                                technology\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/specialties/entities/specialty.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/specialties/entities/specialty.entity.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/specialties/entities/specialty.entity.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        influence\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/specialties/entities/specialty.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        performance\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/specialties/entities/specialty.entity.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        person\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/specialties/entities/specialty.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        process\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/specialties/entities/specialty.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        system\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/specialties/entities/specialty.entity.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        technology\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/specialties/entities/specialty.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/specialties/entities/specialty.entity.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Specialty {\n  id?: string;\n  performance: string;\n  description: string;\n  system: number;\n  person: number;\n  technology: number;\n  process: number;\n  influence: number;\n  createdAt?: Date;\n  updatedAt?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Test.html":{"url":"classes/Test.html","title":"class - Test","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Test\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Test-crud/entities/test.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                computationalFundamentals\n                            \n                            \n                                createdAt\n                            \n                            \n                                design\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                person\n                            \n                            \n                                process\n                            \n                            \n                                system\n                            \n                            \n                                test\n                            \n                            \n                                    Optional\n                                title\n                            \n                            \n                                toolshop\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        computationalFundamentals\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/Test-crud/entities/test.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/Test-crud/entities/test.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        design\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/Test-crud/entities/test.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/Test-crud/entities/test.entity.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        person\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/Test-crud/entities/test.entity.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        process\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/Test-crud/entities/test.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        system\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/Test-crud/entities/test.entity.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        test\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/Test-crud/entities/test.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/Test-crud/entities/test.entity.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toolshop\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/Test-crud/entities/test.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/Test-crud/entities/test.entity.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Test {\nid?:string;\ntitle?:string\nsystem:string[];\nperson:string[];\ntest:string[];\ndesign:string[];\ntoolshop:string[];\nprocess:string[];\ncomputationalFundamentals:string[];\ncreatedAt:Date;\nupdatedAt:Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TestController.html":{"url":"controllers/TestController.html","title":"controller - TestController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TestController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Test-crud/test.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                Test\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(dto: CreateTestDto, user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/create')@ApiOperation({summary: 'Create a complete test'})\n                \n            \n\n            \n                \n                    Defined in src/Test-crud/test.controller.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateTestDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Test\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll(user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/allTests')@ApiOperation({summary: To list all tests})\n                \n            \n\n            \n                \n                    Defined in src/Test-crud/test.controller.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Tests\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string, user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ApiOperation({summary: To delete a test})\n                \n            \n\n            \n                \n                    Defined in src/Test-crud/test.controller.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Message: 'Teste deletado com sucesso!'\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, dto: UpdateTestDto, user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiOperation({summary: To make changes to a test})\n                \n            \n\n            \n                \n                    Defined in src/Test-crud/test.controller.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                UpdateTestDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Test\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, UseGuards } from '@nestjs/common';\nimport { TestService } from './test.service';\nimport { CreateTestDto } from './dto/create-test.dto';\nimport { UpdateTestDto } from './dto/update-test.dto';\nimport { ApiBearerAuth, ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { LoggedUser } from 'src/auth/logged-user.decorator';\nimport { User } from 'src/user/entities/user.entity';\nimport { AuthGuard } from '@nestjs/passport';\n\n\n@ApiTags('Test')\n@UseGuards(AuthGuard())\n@ApiBearerAuth()\n@Controller('Test')\nexport class TestController {\n  constructor(private readonly testService: TestService) {}\n\n\n   /**\n\t * @param req\n\t * @returns Test\n\t */\n  @Post('/create')\n  @ApiOperation({ summary: 'Create a complete test' })\n  create(@Body() dto: CreateTestDto,@LoggedUser() user:User) {\n    return this.testService.create(dto,user);\n  }\n\n  /**\n\t * @param req\n\t * @returns Tests\n\t */\n  @Get('/allTests')\n  @ApiOperation({summary: `To list all tests`})\n  findAll(@LoggedUser() user:User) {\n    return this.testService.findAll(user);\n  }\n\n    /**\n\t * @param req\n\t * @returns Test\n\t */\n  @Patch(':id')\n  @ApiOperation({summary: `To make changes to a test`})\n  update(@Param('id') id: string, @Body() dto: UpdateTestDto,@LoggedUser() user:User) {\n    return this.testService.update(id,dto,user);\n  }\n\n    /**\n\t * @param req\n\t * @returns Message: 'Teste deletado com sucesso!'\n\t */\n  @Delete(':id')\n  @ApiOperation({summary: `To delete a test`})\n  remove(@Param('id') id:string,@LoggedUser() user:User) {\n    return this.testService.remove(id,user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TestModule.html":{"url":"modules/TestModule.html","title":"module - TestModule","body":"\n                   \n\n\n\n\n    Modules\n    TestModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_TestModule\n\n\n\ncluster_TestModule_imports\n\n\n\ncluster_TestModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nTestModule\n\nTestModule\n\nTestModule -->\n\nPrismaModule->TestModule\n\n\n\n\n\nTestService\n\nTestService\n\nTestModule -->\n\nTestService->TestModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/Test-crud/test.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TestService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TestController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TestService } from './test.service';\nimport { TestController } from './test.controller';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { PassportModule } from '@nestjs/passport';\n\n@Module({\n  imports: [PrismaModule, PassportModule.register({ defaultStrategy: 'jwt' })],\n  controllers: [TestController],\n  providers: [TestService]\n})\nexport class TestModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TestService.html":{"url":"injectables/TestService.html","title":"injectable - TestService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TestService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Test-crud/test.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/Test-crud/test.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(dto: CreateTestDto, user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/Test-crud/test.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateTestDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/Test-crud/test.service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string, user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/Test-crud/test.service.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, dto: UpdateTestDto, user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/Test-crud/test.service.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                UpdateTestDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  HttpException,\n  Injectable,\n  NotFoundException,\n  UnprocessableEntityException,\n} from '@nestjs/common';\nimport { Prisma } from '@prisma/client';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { User } from 'src/user/entities/user.entity';\nimport { handleError } from 'src/utils/handleError.utils';\nimport { isAdmin } from 'src/utils/isAdmin.utils';\nimport { CreateTestDto } from './dto/create-test.dto';\nimport { UpdateTestDto } from './dto/update-test.dto';\n\n@Injectable()\nexport class TestService {\n  constructor(private readonly prisma: PrismaService) {}\n\n  async create(dto: CreateTestDto, user: User) {\n    isAdmin(user);\n\n    const data: Prisma.TestCreateInput = {\n      person: dto.person,\n      process: dto.process,\n      system: dto.system,\n      test: dto.test,\n      toolshop: dto.toolshop,\n      design: dto.design,\n      computationalFundamentals: dto.computationalFundamentals,\n    };\n\n    return this.prisma.test\n      .create({\n        data,\n        select: {\n          person: true,\n          process: true,\n          system: true,\n          test: true,\n          toolshop: true,\n          design: true,\n          computationalFundamentals: true,\n          createdAt: true,\n        },\n      })\n      .catch(handleError);\n  }\n\n  async findAll(user: User) {\n    if (!user) {\n      throw new UnprocessableEntityException('Usuário não está logado');\n    }\n\n    return await this.prisma.test.findMany().catch(handleError);\n  }\n\n  async update(id: string, dto: UpdateTestDto, user: User) {\n    isAdmin(user);\n\n    if (!id) {\n      throw new NotFoundException(`id:${id} não encontrado`);\n    }\n\n    const data: Prisma.TestUpdateInput = {\n      person: dto.person,\n      process: dto.process,\n      system: dto.system,\n      test: dto.test,\n      toolshop: dto.toolshop,\n      design: dto.design,\n      computationalFundamentals: dto.computationalFundamentals,\n    };\n\n    return this.prisma.test\n      .update({\n        data,\n        where: { id: id },\n        select: {\n          person: true,\n          process: true,\n          system: true,\n          test: true,\n          toolshop: true,\n          design: true,\n          updatedAt: true,\n        },\n      })\n      .catch(handleError);\n  }\n\n  async remove(id: string, user: User) {\n    isAdmin(user);\n\n    if (!id) {\n      throw new NotFoundException(`id:${id} não encontrado`);\n    } else {\n      await this.prisma.test.delete({ where: { id: id } });\n      throw new HttpException('Teste deletado com sucesso!', 200);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateResultDto.html":{"url":"classes/UpdateResultDto.html","title":"class - UpdateResultDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateResultDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/result/dto/update-result.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                influence\n                            \n                            \n                                isValided\n                            \n                            \n                                nextRole\n                            \n                            \n                                technology\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        influence\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber({maxDecimalPlaces: 2})@IsOptional()@ApiProperty({description: 'Person test result', example: 3})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/result/dto/update-result.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isValided\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'Para escolher se o usuário é passou ou não', example: 'Sim'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/result/dto/update-result.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nextRole\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'Para escolher a categoria do usuário', example: 'Junior'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/result/dto/update-result.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        technology\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber({maxDecimalPlaces: 2})@IsOptional()@ApiProperty({description: 'Person test result', example: 3})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/result/dto/update-result.dto.ts:38\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { IsNumber, IsOptional, IsString } from 'class-validator';\nimport { CreateResultDto } from './create-result.dto';\n\nexport class UpdateResultDto extends PartialType(CreateResultDto) {\n  @IsString()\n  @ApiProperty({\n    description: 'Para escolher a categoria do usuário',\n    example: 'Junior',\n  })\n  nextRole: string;\n\n  @IsString()\n  @ApiProperty({\n    description: 'Para escolher se o usuário é passou ou não',\n    example: 'Sim',\n  })\n  isValided: string;\n\n  @IsNumber({\n    maxDecimalPlaces: 2,\n  })\n  @IsOptional()\n  @ApiProperty({\n    description: 'Person test result',\n    example: 3,\n  })\n  influence: number;\n\n  @IsNumber({\n    maxDecimalPlaces: 2,\n  })\n  @IsOptional()\n  @ApiProperty({\n    description: 'Person test result',\n    example: 3,\n  })\n  technology: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateSpecialtyDto.html":{"url":"classes/UpdateSpecialtyDto.html","title":"class - UpdateSpecialtyDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateSpecialtyDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/specialties/dto/update-specialty.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateSpecialtyDto } from './create-specialty.dto';\n\nexport class UpdateSpecialtyDto extends PartialType(CreateSpecialtyDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateTestDto.html":{"url":"classes/UpdateTestDto.html","title":"class - UpdateTestDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateTestDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Test-crud/dto/update-test.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateTestDto } from './create-test.dto';\n\nexport class UpdateTestDto extends PartialType(CreateTestDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/update-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                newPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        newPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @MinLength(6)@IsString()@Matches(/((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/, {message: 'senha muito fraca'})@IsOptional()@ApiProperty({description: 'Senha do usuário. Requer letras maiúsculas e minúsculas, números ou caracteres especiais', example: 'Petlove@123'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/update-user.dto.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport {\n  MinLength,\n  IsString,\n  Matches,\n  IsNotEmpty,\n  IsOptional,\n} from 'class-validator';\nimport { CreateUserDto } from './create-user.dto';\n\nexport class UpdateUserDto extends PartialType(CreateUserDto) {\n  @MinLength(6)\n  @IsString()\n  @Matches(/((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/, {\n    message: 'senha muito fraca',\n  })\n  @IsOptional()\n  @ApiProperty({\n    description:\n      'Senha do usuário. Requer letras maiúsculas e minúsculas, números ou caracteres especiais',\n    example: 'Petlove@123',\n  })\n  newPassword: string;\n}\n\nexport class ChangePasswordDto {\n  @MinLength(6)\n  @IsString()\n  @Matches(/((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/, {\n    message: 'senha muito fraca',\n  })\n  @IsNotEmpty()\n  @ApiProperty({\n    description:\n      'Senha do usuário. Requer letras maiúsculas e minúsculas, números ou caracteres especiais',\n    example: 'Petlove@123',\n  })\n  password: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({\n    example: 'Petlove@123',\n  })\n  confirmPassword: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/entities/user.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                chapter\n                            \n                            \n                                createdAt\n                            \n                            \n                                email\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                    Optional\n                                isAdmin\n                            \n                            \n                                    Optional\n                                isVerified\n                            \n                            \n                                name\n                            \n                            \n                                password\n                            \n                            \n                                    Optional\n                                role\n                            \n                            \n                                    Optional\n                                team\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        chapter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        isAdmin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        isVerified\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        team\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {\n  id?: string;\n  name: string;\n  email: string;\n  password: string;\n  team?: string;\n  chapter?: string;\n  role?: string;\n  isAdmin?: boolean;\n  isVerified?: boolean;\n  createdAt: Date;\n  updatedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                User\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changePassword\n                            \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                sendEmailForgotPassword\n                            \n                            \n                                update\n                            \n                            \n                                uploadFile\n                            \n                            \n                                verifyUserEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changePassword\n                        \n                    \n                \n            \n            \n                \nchangePassword(id: string, resetToken: string, dto: ChangePasswordDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('change/password/:resetToken/:id')@ApiOperation({summary: 'Recover user password'})\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    resetToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                ChangePasswordDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        message: 'Password changed'\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/create')@ApiOperation({summary: 'create user'})\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        user\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll(user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(undefined)@ApiBearerAuth()@Get()@ApiOperation({summary: 'List all users'})\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        users\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(email: string, user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(undefined)@ApiBearerAuth()@Get(':email')@ApiOperation({summary: 'View a user by id.'})\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        users\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(email: string, user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(undefined)@ApiBearerAuth()@Delete(':email')@ApiOperation({summary: 'Delete a user (Adm)'})\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:125\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Message: Usuário deletado com sucesso!\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendEmailForgotPassword\n                        \n                    \n                \n            \n            \n                \nsendEmailForgotPassword(email: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('send/:email')@ApiOperation({summary: 'Send email to change password'})\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        Message: 'Email sent'!\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(email: string, updateUserDto: UpdateUserDto, user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(undefined)@ApiBearerAuth()@Patch(':email')@ApiOperation({summary: 'Edit User Information!'})\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        users\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uploadFile\n                        \n                    \n                \n            \n            \n                \nuploadFile(file)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(undefined)@ApiBearerAuth()@Post('upload')@ApiOperation({summary: 'Adiciona uma foto ao perfil do usuário'})@UseInterceptors(undefined)\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:137\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        verifyUserEmail\n                        \n                    \n                \n            \n            \n                \nverifyUserEmail(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('verify/:id')@ApiOperation({summary: 'Verify user email'})\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        user\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  UseGuards,\n  UploadedFiles,\n  UseInterceptors,\n} from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { ChangePasswordDto, UpdateUserDto } from './dto/update-user.dto';\nimport { User } from './entities/user.entity';\nimport { ApiBearerAuth, ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { AuthGuard } from '@nestjs/passport';\nimport { LoggedUser } from 'src/auth/logged-user.decorator';\nimport { FileInterceptor } from '@nestjs/platform-express';\n\n@ApiTags('User')\n@Controller('User')\nexport class UserController {\n  constructor(private readonly userService: UserService) {}\n\n  /**\n\t * @param req\n\t * @returns user\n\t */\n  @Post('/create')\n  @ApiOperation({ summary: 'create user' })\n  create(@Body() createUserDto: CreateUserDto) {\n    return this.userService.create(createUserDto);\n  }\n\n   /**\n\t * @param req\n\t * @returns user\n\t */\n  @Get('verify/:id')\n  @ApiOperation({\n    summary: 'Verify user email',\n  })\n  verifyUserEmail(@Param('id') id: string): Promise {\n    return this.userService.verifyUserEmail(id);\n  }\n\n  /**\n\t * @param req\n\t * @returns Message: 'Email sent'!\n\t */\n  @Get('send/:email')\n  @ApiOperation({\n    summary: 'Send email to change password',\n  })\n  sendEmailForgotPassword(@Param('email') email: string): Promise {\n    return this.userService.sendEmailForgotPassword(email);\n  }\n\n  /**\n\t * @param req\n\t * @returns message: 'Password changed'\n\t */\n  @Patch('change/password/:resetToken/:id')\n  @ApiOperation({\n    summary: 'Recover user password',\n  })\n  changePassword(\n    @Param('id') id: string,\n    @Param('resetToken') resetToken: string,\n    @Body() dto: ChangePasswordDto,\n  ): Promise {\n    return this.userService.changePassword(id, resetToken, dto);\n  }\n\n  /**\n\t * @param req\n\t * @returns users\n\t */\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth()\n  @Get()\n  @ApiOperation({ summary: 'List all users' })\n  findAll(@LoggedUser() user: User) {\n    return this.userService.findAll(user);\n  }\n\n  /**\n\t * @param req\n\t * @returns users\n\t */\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth()\n  @Get(':email')\n  @ApiOperation({ summary: 'View a user by id.' })\n  findOne(@Param('email') email: string, @LoggedUser() user: User) {\n    return this.userService.findOne(email, user);\n  }\n\n    /**\n\t * @param req\n\t * @returns users\n\t */\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth()\n  @Patch(':email')\n  @ApiOperation({ summary: 'Edit User Information!' })\n  update(\n    @Param('email') email: string,\n    @Body() updateUserDto: UpdateUserDto,\n    @LoggedUser() user: User,\n  ) {\n    return this.userService.update(email, updateUserDto, user);\n  }\n\n   /**\n\t * @param req\n\t * @returns Message: Usuário deletado com sucesso!\n\t */\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth()\n  @Delete(':email')\n  @ApiOperation({ summary: 'Delete a user (Adm)' })\n  remove(@Param('email') email: string, @LoggedUser() user: User) {\n    return this.userService.remove(email, user);\n  }\n\n     /**\n\t * @param req\n\t */\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth()\n  @Post('upload')\n  @ApiOperation({ summary: 'Adiciona uma foto ao perfil do usuário' })\n  @UseInterceptors(FileInterceptor('file'))\n  uploadFile(@UploadedFiles() file) {\n  console.log(file);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UserModule\n\n\n\ncluster_UserModule_imports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nPrismaModule->UserModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { UserController } from './user.controller';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { PassportModule } from '@nestjs/passport';\nimport { MulterModule } from '@nestjs/platform-express';\nimport { JwtModule } from '@nestjs/jwt';\n\n@Module({\n  imports: [\n    PrismaModule,\n    PassportModule.register({ defaultStrategy: 'jwt' }),\n    MulterModule.register({dest:'./upload',}),\n    JwtModule.register({\n      secret: process.env.JWT_SECRET,\n      signOptions: { expiresIn: '30m' },\n    }),\n  ],\n  controllers: [UserController],\n  providers: [UserService],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                changePassword\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                sendEmailForgotPassword\n                            \n                            \n                                    Async\n                                update\n                            \n                            \n                                    Async\n                                verifyUserEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/user/user.service.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        changePassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    changePassword(id: string, resetToken: string, dto: ChangePasswordDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:177\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    resetToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                ChangePasswordDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(dto: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:271\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(email: string, user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:293\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(email: string, user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:379\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        sendEmailForgotPassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendEmailForgotPassword(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(email: string, updateUserDto: UpdateUserDto, user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:322\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        verifyUserEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    verifyUserEmail(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  HttpException,\n  Injectable,\n  NotAcceptableException,\n  NotFoundException,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { ChangePasswordDto, UpdateUserDto } from './dto/update-user.dto';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport * as bcrypt from 'bcrypt';\nimport { handleError } from 'src/utils/handleError.utils';\nimport { Prisma } from '@prisma/client';\nimport { isAdmin } from 'src/utils/isAdmin.utils';\nimport { User } from './entities/user.entity';\nimport * as nodemailer from 'nodemailer';\nimport { JwtPayload } from './entities/jwtChangePassword.entity';\nimport { JwtService } from '@nestjs/jwt';\nimport * as crypto from 'crypto-js';\n\n@Injectable()\nexport class UserService {\n  constructor(\n    private readonly prisma: PrismaService,\n    private readonly jwtService: JwtService,\n  ) {}\n\n  async create(dto: CreateUserDto) {\n    if (dto.password != dto.confirmPassword) {\n      throw new BadRequestException('As senhas informadas não são iguais.');\n    }\n\n    delete dto.confirmPassword;\n\n    const data: Prisma.UserCreateInput = {\n      name: dto.name,\n      email: dto.email,\n      password: await bcrypt.hash(dto.password, 5),\n      isAdmin: false,\n    };\n\n    return this.prisma.user\n      .create({\n        data,\n        select: {\n          password: false,\n          id: true,\n          name: true,\n          email: true,\n          isAdmin: true,\n          createdAt: true,\n          updatedAt: true,\n        },\n      })\n      .then((user) => {\n        const transporter = nodemailer.createTransport({\n          host: 'smtp.gmail.com',\n          port: 587,\n          service: 'gmail',\n          auth: {\n            user: 'projetopetlover@gmail.com',\n            pass: 'skbfwjaibimleyou',\n          },\n        });\n\n        const mailData = {\n          from: 'Pet Love ',\n          to: user.email,\n          subject: 'Verify Email',\n          html: 'oi1 oi2',\n        };\n\n        transporter.sendMail(mailData, function (err, info) {\n          if (err) {\n            console.log(err);\n          } else {\n            console.log(info);\n          }\n        });\n\n        return user;\n      })\n      .catch(handleError);\n  }\n\n  async verifyUserEmail(id: string) {\n    const user: User = await this.prisma.user.findUnique({\n      where: { id },\n    });\n\n    if (user.isVerified) {\n      throw new NotAcceptableException('Email already verified');\n    }\n\n    const data: Prisma.UserUpdateInput = {\n      isVerified: true,\n    };\n\n    return this.prisma.user\n      .update({\n        where: { id },\n        data,\n      })\n      .then(() => {\n        return 'Email verified! You can close this page and login';\n      })\n      .catch(handleError);\n  }\n\n  async sendEmailForgotPassword(email: string): Promise {\n    const user = await this.prisma.user\n      .findUnique({\n        where: { email },\n        select: {\n          id: true,\n          email: true,\n        },\n      })\n      .catch(handleError);\n\n    if (!user) {\n      throw new NotFoundException(`Email '${email}' not found`);\n    }\n\n    const payload: JwtPayload = {\n      id: user.id,\n    };\n\n    const token = this.jwtService.sign(payload);\n\n    const tokenCrypt = crypto.AES.encrypt(\n      token,\n      process.env.JWT_CHANGE_PASSWORD_SECRET,\n    ).toString();\n\n    const tokenToUrl = await tokenCrypt\n      .replace(/\\+/g, 'p1L2u3S')\n      .replace(/\\//g, 's1L2a3S4h')\n      .replace(/=/g, 'e1Q2u3A4l');\n\n    const transporter = nodemailer.createTransport({\n      host: 'smtp.gmail.com',\n      port: 587,\n      service: 'gmail',\n      auth: {\n        user: 'projetopetlover@gmail.com',\n        pass: 'skbfwjaibimleyou',\n      },\n    });\n\n    const mailData = {\n      from: 'Pet Love ',\n      to: user.email,\n      subject: 'Reset your password',\n      html: `oi1 token:${tokenToUrl}, id:${user.id}, url: http://localhost:3000/Change/${tokenToUrl}/${user.id}`,\n    };\n\n    transporter.sendMail(mailData, async function (err, info) {\n      if (err) {\n        console.log(err);\n\n        throw new BadRequestException('Error sending email');\n      } else {\n        console.log(info);\n      }\n    });\n\n    await this.prisma.user.update({\n      where: { id: user.id },\n      data: { resetToken: token },\n    });\n\n    return 'Email sent';\n  }\n\n  async changePassword(\n    id: string,\n    resetToken: string,\n    dto: ChangePasswordDto,\n  ): Promise {\n    const user = await this.prisma.user.findUnique({\n      where: { id },\n    });\n\n    if (!user) {\n      throw new NotFoundException(`User '${id}' not found`);\n    }\n\n    if (!user.resetToken) {\n      throw new BadRequestException('Token not found');\n    }\n    console.log(resetToken);\n\n    const resetTokenToText = resetToken\n      .replace(/p1L2u3S/g, '+')\n      .replace(/s1L2a3S4h/g, '/')\n      .replace(/e1Q2u3A4l/g, '=');\n\n    const resetTokenDecrypted = crypto.AES.decrypt(\n      resetTokenToText,\n      process.env.JWT_CHANGE_PASSWORD_SECRET,\n    ).toString(crypto.enc.Utf8);\n\n    if (resetTokenDecrypted != user.resetToken) {\n      throw new UnauthorizedException('Invalid token');\n    }\n    let jwtVerify: JwtPayload;\n    try {\n      jwtVerify = this.jwtService.verify(user.resetToken);\n    } catch (error) {\n      throw new UnauthorizedException('Invalid token');\n    }\n\n    if (!jwtVerify.id || jwtVerify.id != id) {\n      throw new UnauthorizedException('Invalid token');\n    }\n\n    if (!dto.password || !dto.confirmPassword) {\n      throw new BadRequestException('Informe a nova senha.');\n    }\n\n    if (dto.password !== dto.confirmPassword) {\n      throw new BadRequestException('As senhas informadas não são iguais.');\n    }\n\n    const hashedPassword = await bcrypt.hash(dto.password, 8);\n\n    const data: Prisma.UserUpdateInput = {\n      password: hashedPassword,\n      resetToken: null,\n    };\n\n    return this.prisma.user\n      .update({\n        where: { id },\n        data,\n      })\n      .then((user) => {\n        const transporter = nodemailer.createTransport({\n          host: 'smtp.gmail.com',\n          port: 587,\n          service: 'gmail',\n          auth: {\n            user: 'projetopetlover@gmail.com',\n            pass: 'skbfwjaibimleyou',\n          },\n        });\n\n        const mailData = {\n          from: 'Pet Love ',\n          to: user.email,\n          subject: 'Password Changed',\n          html: 'oi1 oi2',\n        };\n\n        transporter.sendMail(mailData, function (err, info) {\n          if (err) {\n            console.log(err);\n\n            throw new BadRequestException('Error sending email');\n          } else {\n            console.log(info);\n          }\n        });\n        return { message: 'Password changed' };\n      })\n      .catch(handleError);\n  }\n\n  async findAll(user: User) {\n    isAdmin(user);\n    const allUsers = await this.prisma.user.findMany({\n      select: {\n        id: true,\n        name: true,\n        email: true,\n        team: true,\n        role: true,\n        chapter: true,\n        results: true,\n        createdAt: true,\n      },\n    });\n\n    if (allUsers.length === 0) {\n      throw new NotFoundException('Não existem usuários cadastrados.');\n    }\n\n    return allUsers;\n  }\n\n  async findOne(email: string, user: User) {\n    const record = await this.prisma.user.findUnique({\n      where: { email },\n      select: {\n        id: true,\n        name: true,\n        email: true,\n        team: true,\n        role: true,\n        chapter: true,\n        results: true,\n        createdAt: true,\n        isAdmin: true,\n      },\n    });\n\n    if (!record) {\n      throw new NotFoundException(`Registro: '${email}' não encontrado.`);\n    }\n\n    if (user.email == email || user.isAdmin == true) {\n      return record;\n    } else {\n      throw new UnauthorizedException(\n        'Você não tem permissão para acessar essa área!',\n      );\n    }\n  }\n\n  async update(email: string, updateUserDto: UpdateUserDto, user: User) {\n    if (user.email === email && updateUserDto.newPassword) {\n      if (!updateUserDto.password) {\n        throw new BadRequestException('A senha atual não pode ser vazia.');\n      }\n\n      if (updateUserDto.newPassword !== updateUserDto.confirmPassword) {\n        throw new BadRequestException(\n          'As novas senhas informadas não são iguais.',\n        );\n      }\n\n      const newPassword = await bcrypt.hash(updateUserDto.newPassword, 5);\n      delete updateUserDto.confirmPassword;\n      delete updateUserDto.newPassword;\n\n      const data = { ...updateUserDto };\n      data.password = newPassword;\n\n      return this.prisma.user\n        .update({\n          where: { email: email },\n          data,\n          select: {\n            id: true,\n            name: true,\n            email: true,\n            password: false,\n            updatedAt: true,\n          },\n        })\n        .catch(handleError);\n    }\n\n    if (user.isAdmin === true) {\n      const data = { ...updateUserDto };\n\n      return this.prisma.user\n        .update({\n          where: { email },\n          data,\n          select: {\n            id: true,\n            name: true,\n            email: true,\n            password: false,\n            updatedAt: true,\n          },\n        })\n        .catch(handleError);\n    }\n\n    throw new UnauthorizedException(\n      'Você não tem permissão para acessar essa área!',\n    );\n  }\n\n  async remove(email: string, user: User) {\n    isAdmin(user);\n\n    if (!email) {\n      throw new NotFoundException(`email:${email} não encontrado`);\n    } else {\n      await this.prisma.user.findUnique({ where: { email: email } });\n      throw new HttpException('Usuário deletado com sucesso!', 200);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/Test-crud/dto/create-test.dto.ts\n            \n            class\n            CreateTestDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/Test-crud/dto/update-test.dto.ts\n            \n            class\n            UpdateTestDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/Test-crud/entities/test.entity.ts\n            \n            class\n            Test\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/Test-crud/test.controller.ts\n            \n            controller\n            TestController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/Test-crud/test.service.ts\n            \n            injectable\n            TestService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/login.dto.ts\n            \n            class\n            LoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/login.response.dto.ts\n            \n            class\n            LoginResponseDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/logged-user.decorator.ts\n            \n            variable\n            LoggedUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/prisma/seed.ts\n            \n            variable\n            prisma\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/seed.ts\n            \n            variable\n            seeds\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/seed/01-user.ts\n            \n            variable\n            user\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/seed/01-user.ts\n            \n            variable\n            users\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/seed/02-Test-crud.ts\n            \n            variable\n            test\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/seed/02-Test-crud.ts\n            \n            variable\n            Tests\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/seed/03-specialties.ts\n            \n            variable\n            specialtie\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/seed/03-specialties.ts\n            \n            variable\n            specialties\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/result/dto/create-result.dto.ts\n            \n            class\n            CreateResultDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/result/dto/update-result.dto.ts\n            \n            class\n            UpdateResultDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/result/entities/result.entity.ts\n            \n            class\n            Result\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/result/result.controller.ts\n            \n            controller\n            ResultController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/result/result.service.ts\n            \n            injectable\n            ResultService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/specialties/dto/create-specialty.dto.ts\n            \n            class\n            CreateSpecialtyDto\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/specialties/dto/update-specialty.dto.ts\n            \n            class\n            UpdateSpecialtyDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/specialties/entities/specialty.entity.ts\n            \n            class\n            Specialty\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/specialties/specialties.controller.ts\n            \n            controller\n            SpecialtiesController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/specialties/specialties.service.ts\n            \n            injectable\n            SpecialtiesService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/user/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/user/dto/update-user.dto.ts\n            \n            class\n            ChangePasswordDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/user/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/user/entities/jwtChangePassword.entity.ts\n            \n            interface\n            JwtPayload\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/user/entities/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/utils/handleError.utils.ts\n            \n            function\n            handleError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/isAdmin.utils.ts\n            \n            function\n            isAdmin\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^9.0.0\n        \n            @nestjs/core : ^9.0.0\n        \n            @nestjs/jwt : ^9.0.0\n        \n            @nestjs/passport : ^9.0.0\n        \n            @nestjs/platform-express : ^9.0.0\n        \n            @nestjs/swagger : ^6.1.2\n        \n            @prisma/client : ^4.3.1\n        \n            bcrypt : ^5.1.0\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.13.2\n        \n            crypto-js : ^4.1.1\n        \n            nodemailer : ^6.8.0\n        \n            passport : ^0.6.0\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n        \n            swagger-ui-express : ^4.5.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            handleError   (src/.../handleError.utils.ts)\n                        \n                        \n                            isAdmin   (src/.../isAdmin.utils.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/utils/handleError.utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        handleError\n                        \n                    \n                \n            \n            \n                \nhandleError(error: Error)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                            Error\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/utils/isAdmin.utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isAdmin\n                        \n                    \n                \n            \n            \n                \nisAdmin(user: User)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nPetlove Back-end\nGetting Started\nProjeto de bootcamp desenvolvido para a equipe da Petlove, referente a uma aplicação onde os gestores possam avaliar seus colaboradores através de questionarios que determinam as qualidades individuais e da equipe como um todo.\nFirst, run the development server:\nnpm run dev\n# or\nyarn devPré-requisitos\nOpen http://localhost:3000 with your browser to see the result.\n👯‍ Clonando o projeto\nClone o projeto na sua maquina utilizando o comando do git:\nGit Clone https://github.com/pedroasdoliveira/petlove-project-backend\nOu através do Github Desktop:\nLearn More\ngh repo clone pedroasdoliveira/petlove-project-backend\nTo learn more about Next.js, take a look at the following resources:\n🔧 Instalação\nyarn install\nDeploy on Vercel\n⚙️ Rodando o projeto\nyarn dev\n\nPara roda no ambiente de produção utilize os comandos:\n\nyarn build & yarn start\n🛠️ Construído com\n\nJavaScript\nTypeScript\nNest.js\nnpm\n\n\n✒️ Autores\n\nPedro Oliveira (Github: https://github.com/pedroasdoliveira);\nGiovanne Berteli (Github: https://github.com/hethus);\nJoão Vitor Carvalho (Github: https://github.com/jcvalgas);\nBruna Barbosa Bomfim (Github: https://github.com/brunabbomfim);\nFelipe dos Santos Azevedo (Github: https://github.com/Felipe360flp);\n\n\n📄 Licença\nEste projeto está sob a licença (Mozilla Public License Version 2.0) - veja o arquivo [LICENSE.md] para mais detalhes.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMozilla Public License Version 2.0\n\nDefinitions\n\n\n1.1. \"Contributor\"\n    means each individual or legal entity that creates, contributes to\n    the creation of, or owns Covered Software.\n1.2. \"Contributor Version\"\n    means the combination of the Contributions of others (if any) used\n    by a Contributor and that particular Contributor's Contribution.\n1.3. \"Contribution\"\n    means Covered Software of a particular Contributor.\n1.4. \"Covered Software\"\n    means Source Code Form to which the initial Contributor has attached\n    the notice in Exhibit A, the Executable Form of such Source Code\n    Form, and Modifications of such Source Code Form, in each case\n    including portions thereof.\n1.5. \"Incompatible With Secondary Licenses\"\n    means\n(a) that the initial Contributor has attached the notice described\n    in Exhibit B to the Covered Software; or\n\n(b) that the Covered Software was made available under the terms of\n    version 1.1 or earlier of the License, but not also under the\n    terms of a Secondary License.1.6. \"Executable Form\"\n    means any form of the work other than Source Code Form.\n1.7. \"Larger Work\"\n    means a work that combines Covered Software with other material, in\n    a separate file or files, that is not Covered Software.\n1.8. \"License\"\n    means this document.\n1.9. \"Licensable\"\n    means having the right to grant, to the maximum extent possible,\n    whether at the time of the initial grant or subsequently, any and\n    all of the rights conveyed by this License.\n1.10. \"Modifications\"\n    means any of the following:\n(a) any file in Source Code Form that results from an addition to,\n    deletion from, or modification of the contents of Covered\n    Software; or\n\n(b) any new file in Source Code Form that contains any Covered\n    Software.1.11. \"Patent Claims\" of a Contributor\n    means any patent claim(s), including without limitation, method,\n    process, and apparatus claims, in any patent Licensable by such\n    Contributor that would be infringed, but for the grant of the\n    License, by the making, using, selling, offering for sale, having\n    made, import, or transfer of either its Contributions or its\n    Contributor Version.\n1.12. \"Secondary License\"\n    means either the GNU General Public License, Version 2.0, the GNU\n    Lesser General Public License, Version 2.1, the GNU Affero General\n    Public License, Version 3.0, or any later versions of those\n    licenses.\n1.13. \"Source Code Form\"\n    means the form of the work preferred for making modifications.\n1.14. \"You\" (or \"Your\")\n    means an individual or a legal entity exercising rights under this\n    License. For legal entities, \"You\" includes any entity that\n    controls, is controlled by, or is under common control with You. For\n    purposes of this definition, \"control\" means (a) the power, direct\n    or indirect, to cause the direction or management of such entity,\n    whether by contract or otherwise, or (b) ownership of more than\n    fifty percent (50%) of the outstanding shares or beneficial\n    ownership of such entity.\n\nLicense Grants and Conditions\n\n\n2.1. Grants\nEach Contributor hereby grants You a world-wide, royalty-free,\nnon-exclusive license:\n(a) under intellectual property rights (other than patent or trademark)\n    Licensable by such Contributor to use, reproduce, make available,\n    modify, display, perform, distribute, and otherwise exploit its\n    Contributions, either on an unmodified basis, with Modifications, or\n    as part of a Larger Work; and\n(b) under Patent Claims of such Contributor to make, use, sell, offer\n    for sale, have made, import, and otherwise transfer either its\n    Contributions or its Contributor Version.\n2.2. Effective Date\nThe licenses granted in Section 2.1 with respect to any Contribution\nbecome effective for each Contribution on the date the Contributor first\ndistributes such Contribution.\n2.3. Limitations on Grant Scope\nThe licenses granted in this Section 2 are the only rights granted under\nthis License. No additional rights or licenses will be implied from the\ndistribution or licensing of Covered Software under this License.\nNotwithstanding Section 2.1(b) above, no patent license is granted by a\nContributor:\n(a) for any code that a Contributor has removed from Covered Software;\n    or\n(b) for infringements caused by: (i) Your and any other third party's\n    modifications of Covered Software, or (ii) the combination of its\n    Contributions with other software (except as part of its Contributor\n    Version); or\n(c) under Patent Claims infringed by Covered Software in the absence of\n    its Contributions.\nThis License does not grant any rights in the trademarks, service marks,\nor logos of any Contributor (except as may be necessary to comply with\nthe notice requirements in Section 3.4).\n2.4. Subsequent Licenses\nNo Contributor makes additional grants as a result of Your choice to\ndistribute the Covered Software under a subsequent version of this\nLicense (see Section 10.2) or under the terms of a Secondary License (if\npermitted under the terms of Section 3.3).\n2.5. Representation\nEach Contributor represents that the Contributor believes its\nContributions are its original creation(s) or it has sufficient rights\nto grant the rights to its Contributions conveyed by this License.\n2.6. Fair Use\nThis License is not intended to limit any rights You have under\napplicable copyright doctrines of fair use, fair dealing, or other\nequivalents.\n2.7. Conditions\nSections 3.1, 3.2, 3.3, and 3.4 are conditions of the licenses granted\nin Section 2.1.\n\nResponsibilities\n\n\n3.1. Distribution of Source Form\nAll distribution of Covered Software in Source Code Form, including any\nModifications that You create or to which You contribute, must be under\nthe terms of this License. You must inform recipients that the Source\nCode Form of the Covered Software is governed by the terms of this\nLicense, and how they can obtain a copy of this License. You may not\nattempt to alter or restrict the recipients' rights in the Source Code\nForm.\n3.2. Distribution of Executable Form\nIf You distribute Covered Software in Executable Form then:\n(a) such Covered Software must also be made available in Source Code\n    Form, as described in Section 3.1, and You must inform recipients of\n    the Executable Form how they can obtain a copy of such Source Code\n    Form by reasonable means in a timely manner, at a charge no more\n    than the cost of distribution to the recipient; and\n(b) You may distribute such Executable Form under the terms of this\n    License, or sublicense it under different terms, provided that the\n    license for the Executable Form does not attempt to limit or alter\n    the recipients' rights in the Source Code Form under this License.\n3.3. Distribution of a Larger Work\nYou may create and distribute a Larger Work under terms of Your choice,\nprovided that You also comply with the requirements of this License for\nthe Covered Software. If the Larger Work is a combination of Covered\nSoftware with a work governed by one or more Secondary Licenses, and the\nCovered Software is not Incompatible With Secondary Licenses, this\nLicense permits You to additionally distribute such Covered Software\nunder the terms of such Secondary License(s), so that the recipient of\nthe Larger Work may, at their option, further distribute the Covered\nSoftware under the terms of either this License or such Secondary\nLicense(s).\n3.4. Notices\nYou may not remove or alter the substance of any license notices\n(including copyright notices, patent notices, disclaimers of warranty,\nor limitations of liability) contained within the Source Code Form of\nthe Covered Software, except that You may alter any license notices to\nthe extent required to remedy known factual inaccuracies.\n3.5. Application of Additional Terms\nYou may choose to offer, and to charge a fee for, warranty, support,\nindemnity or liability obligations to one or more recipients of Covered\nSoftware. However, You may do so only on Your own behalf, and not on\nbehalf of any Contributor. You must make it absolutely clear that any\nsuch warranty, support, indemnity, or liability obligation is offered by\nYou alone, and You hereby agree to indemnify every Contributor for any\nliability incurred by such Contributor as a result of warranty, support,\nindemnity or liability terms You offer. You may include additional\ndisclaimers of warranty and limitations of liability specific to any\njurisdiction.\n\nInability to Comply Due to Statute or Regulation\n\n\nIf it is impossible for You to comply with any of the terms of this\nLicense with respect to some or all of the Covered Software due to\nstatute, judicial order, or regulation then You must: (a) comply with\nthe terms of this License to the maximum extent possible; and (b)\ndescribe the limitations and the code they affect. Such description must\nbe placed in a text file included with all distributions of the Covered\nSoftware under this License. Except to the extent prohibited by statute\nor regulation, such description must be sufficiently detailed for a\nrecipient of ordinary skill to be able to understand it.\n\nTermination\n\n\n5.1. The rights granted under this License will terminate automatically\nif You fail to comply with any of its terms. However, if You become\ncompliant, then the rights granted under this License from a particular\nContributor are reinstated (a) provisionally, unless and until such\nContributor explicitly and finally terminates Your grants, and (b) on an\nongoing basis, if such Contributor fails to notify You of the\nnon-compliance by some reasonable means prior to 60 days after You have\ncome back into compliance. Moreover, Your grants from a particular\nContributor are reinstated on an ongoing basis if such Contributor\nnotifies You of the non-compliance by some reasonable means, this is the\nfirst time You have received notice of non-compliance with this License\nfrom such Contributor, and You become compliant prior to 30 days after\nYour receipt of the notice.\n5.2. If You initiate litigation against any entity by asserting a patent\ninfringement claim (excluding declaratory judgment actions,\ncounter-claims, and cross-claims) alleging that a Contributor Version\ndirectly or indirectly infringes any patent, then the rights granted to\nYou by any and all Contributors for the Covered Software under Section\n2.1 of this License shall terminate.\n5.3. In the event of termination under Sections 5.1 or 5.2 above, all\nend user license agreements (excluding distributors and resellers) which\nhave been validly granted by You or Your distributors under this License\nprior to termination shall survive termination.\n\n\n                                                                 *\n\nDisclaimer of Warranty                                           *\n\n\n-------------------------                                           *\n                                                                 *\nCovered Software is provided under this License on an \"as is\"       *\nbasis, without warranty of any kind, either expressed, implied, or  *\nstatutory, including, without limitation, warranties that the       *\nCovered Software is free of defects, merchantable, fit for a        *\nparticular purpose or non-infringing. The entire risk as to the     *\nquality and performance of the Covered Software is with You.        *\nShould any Covered Software prove defective in any respect, You     *\n(not any Contributor) assume the cost of any necessary servicing,   *\nrepair, or correction. This disclaimer of warranty constitutes an   *\nessential part of this License. No use of any Covered Software is   *\nauthorized under this License except under this disclaimer.         *\n                                                                 *\n\n\n\n\n                                                                 *\n\nLimitation of Liability                                          *\n\n\n--------------------------                                          *\n                                                                 *\nUnder no circumstances and under no legal theory, whether tort      *\n(including negligence), contract, or otherwise, shall any           *\nContributor, or anyone who distributes Covered Software as          *\npermitted above, be liable to You for any direct, indirect,         *\nspecial, incidental, or consequential damages of any character      *\nincluding, without limitation, damages for lost profits, loss of    *\ngoodwill, work stoppage, computer failure or malfunction, or any    *\nand all other commercial damages or losses, even if such party      *\nshall have been informed of the possibility of such damages. This   *\nlimitation of liability shall not apply to liability for death or   *\npersonal injury resulting from such party's negligence to the       *\nextent applicable law prohibits such limitation. Some               *\njurisdictions do not allow the exclusion or limitation of           *\nincidental or consequential damages, so this exclusion and          *\nlimitation may not apply to You.                                    *\n                                                                 *\n\n\n\nLitigation\n\n\nAny litigation relating to this License may be brought only in the\ncourts of a jurisdiction where the defendant maintains its principal\nplace of business and such litigation shall be governed by laws of that\njurisdiction, without reference to its conflict-of-law provisions.\nNothing in this Section shall prevent a party's ability to bring\ncross-claims or counter-claims.\n\nMiscellaneous\n\n\nThis License represents the complete agreement concerning the subject\nmatter hereof. If any provision of this License is held to be\nunenforceable, such provision shall be reformed only to the extent\nnecessary to make it enforceable. Any law or regulation which provides\nthat the language of a contract shall be construed against the drafter\nshall not be used to construe this License against a Contributor.\n\nVersions of the License\n\n\n10.1. New Versions\nMozilla Foundation is the license steward. Except as provided in Section\n10.3, no one other than the license steward has the right to modify or\npublish new versions of this License. Each version will be given a\ndistinguishing version number.\n10.2. Effect of New Versions\nYou may distribute the Covered Software under the terms of the version\nof the License under which You originally received the Covered Software,\nor under the terms of any subsequent version published by the license\nsteward.\n10.3. Modified Versions\nIf you create software not governed by this License, and you want to\ncreate a new license for such software, you may create and use a\nmodified version of this License if you rename the license and remove\nany references to the name of the license steward (except to note that\nsuch modified license differs from this License).\n10.4. Distributing Source Code Form that is Incompatible With Secondary\nLicenses\nIf You choose to distribute Source Code Form that is Incompatible With\nSecondary Licenses under the terms of this version of the License, the\nnotice described in Exhibit B of this License must be attached.\nExhibit A - Source Code Form License Notice\n  This Source Code Form is subject to the terms of the Mozilla Public\n  License, v. 2.0. If a copy of the MPL was not distributed with this\n  file, You can obtain one at http://mozilla.org/MPL/2.0/.\nIf it is not possible or desirable to put the notice in a particular\nfile, then You may include the notice in a location (such as a LICENSE\nfile in a relevant directory) where a recipient would be likely to look\nfor such a notice.\nYou may add additional accurate notices of copyright ownership.\nExhibit B - \"Incompatible With Secondary Licenses\" Notice\n  This Source Code Form is \"Incompatible With Secondary Licenses\", as\n  defined by the Mozilla Public License, v. 2.0.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PrismaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ResultModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SpecialtiesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TestModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\ncluster_ResultModule\n\n\n\ncluster_ResultModule_providers\n\n\n\ncluster_SpecialtiesModule\n\n\n\ncluster_SpecialtiesModule_providers\n\n\n\ncluster_TestModule\n\n\n\ncluster_TestModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAuthModule -->\n\nPrismaModule->AuthModule\n\n\n\n\n\nResultModule\n\nResultModule\n\nResultModule -->\n\nPrismaModule->ResultModule\n\n\n\n\n\nSpecialtiesModule\n\nSpecialtiesModule\n\nSpecialtiesModule -->\n\nPrismaModule->SpecialtiesModule\n\n\n\n\n\nTestModule\n\nTestModule\n\nTestModule -->\n\nPrismaModule->TestModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nPrismaModule->UserModule\n\n\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nPrismaService \n\nPrismaService \n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\nAppModule -->\n\nResultModule->AppModule\n\n\n\nAppModule -->\n\nSpecialtiesModule->AppModule\n\n\n\nAppModule -->\n\nTestModule->AppModule\n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\nResultService\n\nResultService\n\nResultModule -->\n\nResultService->ResultModule\n\n\n\n\n\nSpecialtiesService\n\nSpecialtiesService\n\nSpecialtiesModule -->\n\nSpecialtiesService->SpecialtiesModule\n\n\n\n\n\nTestService\n\nTestService\n\nTestModule -->\n\nTestService->TestModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        7 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    6 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    8 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    15 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\nTodo\n\n Crud Specialties\n Crud Results\n Incluir a função isAdmin nos campos devidos\n Incluir a função loggedUser nos campos devidos\n swagger\n Readme\n Testar API\n Deploy\n\nIn Progress (Atribuir um responsável)\n\n Crud Auth (Bruna)\n Incluir a função isAdmin nos campos devidos (Felipe)\n Incluir a função loggedUser nos campos devidos (Felipe)\n\nDone ✓\n\n Crud Auth\n Prisma Schema\n Prisma Service e Module\n Entidade Auth\n Entidade User\n Crud User\n Função isAdmin\n Função HandleError\n Crud User\n Crud Test\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            LoggedUser   (src/.../logged-user.decorator.ts)\n                        \n                        \n                            prisma   (src/.../seed.ts)\n                        \n                        \n                            seeds   (src/.../seed.ts)\n                        \n                        \n                            specialtie   (src/.../03-specialties.ts)\n                        \n                        \n                            specialties   (src/.../03-specialties.ts)\n                        \n                        \n                            test   (src/.../02-Test-crud.ts)\n                        \n                        \n                            Tests   (src/.../02-Test-crud.ts)\n                        \n                        \n                            user   (src/.../01-user.ts)\n                        \n                        \n                            users   (src/.../01-user.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/auth/logged-user.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        LoggedUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator((_, ctx: ExecutionContext) => {\n  const request = ctx.switchToHttp().getRequest();\n  const user = request.user;\n\n  delete user.password;\n\n  return user;\n})\n                    \n                \n\n\n        \n    \n\n    src/prisma/seed.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        prisma\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new PrismaClient()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seeds\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.entries({\n  ...require('./seed/01-user'),\n  ...require('./seed/02-Test-crud'),\n  ...require('./seed/03-specialties'),\n})\n                    \n                \n\n\n        \n    \n\n    src/prisma/seed/03-specialties.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        specialtie\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (prisma: PrismaClient) => {\n  for (const obj of Object.values(specialties)) {\n    await prisma.specialtie.upsert({\n      where: { performance: obj.performance },\n      update: {},\n      create: {\n        ...obj,\n      },\n    });\n  }\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        specialties\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Prisma.SpecialtieCreateInput[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    performance: 'Inserir nome',\n    description: 'Inserir descrição',\n    system: 0,\n    person: 0,\n    technology: 0,\n    process: 0,\n    influence: 0,\n  },\n]\n                    \n                \n\n\n        \n    \n\n    src/prisma/seed/02-Test-crud.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        test\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Prisma.TestCreateInput[]\n\n                    \n                \n                \n                    \n                        Default value : [\n\t{\n    title:'proeficiencia',\n\n\t\tsystem:[\n      'Você é capaz de implementar features simples e resolver pequenos bugs dentro da sua squad?',\n      'Você desenha e implementa soluções de média e alta complexidade reduzindo débitos técnicos do time?',\n      'Você é capaz de subir e controlar sistemas em produção e também monitora a qualidade olhando para SLAs?',\n      'Você desenvolve arquitetura para futuras soluções e define SLAs?',\n      'Você lidera as soluções técnicas com excelência e cria planos de contingências?'\n    ],\n    person:[\n      'Você está sempre aprendendo com os outros e estuda mais quando necessário?',\n      'Você sempre ajuda as pessoas do seu time a terem sucesso em seus desafios',\n      'Você organiza times, promove feedbacks e intermedeia discussões',\n      'Você mentora outros em seu desenvolvimento e já foi coach na construção de PDI',\n      'Você gerencia carreiras, expectativas, performances e nível de engajamento do seu time'\n    ],\n    test:[\n      'Você implementa teste unitário e também testa a sua solução manualmente considerando as definições do produto?',\n      'Você simula comportamentos dos clientes no seu desenvolvimento, testa além do caminho feliz e analisa o impacto das mudanças',\n      'Você implementa teste e2e, de integração que permita avaliar e monitorar o produto'\n    ],\n    design:[\n      'Você conhece e aplica os princípios do S.O.L.I.D (Ou algum outro pattern definido pelo seu chapter Manager) no seu código?',\n      'Você conhece e aplica pelo menos outros 3 princípios de pattern no seu código e ajuda seus colegas de time a escolherem qual o melhor para a solução do problema',\n      'Você já ajudou a definir padrões de projetos de times/produtos fora do seu time'\n    ],\n    toolshop:[\n      'Você conhece o conceito de código limpo (link) e aplica o conceito em pelo menos 50% do seu código. Conhece e desenvolve seguindo os nossos processos de CI/CD?',\n      'Você Constrói códigos modulares e segue os conceitos de código limpo em 80% do seu código',\n      'Você ajuda a definir processos de CI/CD do seu time e da sua área. Ensina seus colegas a importância de um código limpo e cobra isso nos PRs que revisa'\n    ],\n    process:[\n      'Você segue todo o flow (git, CI/CD, Jira..) de desenvolvimento entregando features consistentes em produção?',\n      'Você sugere mudanças nos flows com consistência, sempre procurando caminhos para melhorar',\n      'Você sempre chama o time para reavaliar os flows, garantindo que todos entendam os benefícios e impactos',\n      'Você é o responsável por ajustar os flows do time, escutando feedbacks e guiando através das mudanças',\n      'Você define os flows baseado na maturidade, agilidade e disciplina do time'\n    ],\n    computationalFundamentals:[\n      'Você Conhece e aplica estruturas de dados e multithreading?',\n      'Você consegue desenhar a arquitetura de um sistema de complexidade média a alta',\n      'Você consegue desenhar uma arquitetura multis sistêmica e para múltiplos times'\n    ]\n\t},\n]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Tests\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (prisma: PrismaClient) => {\n\tfor (const obj of Object.values(test)) {\n\t\tawait prisma.test.upsert({\n\t\t\twhere: { title: obj.title },\n\t\t\tupdate: {},\n\t\t\tcreate: {\n\t\t\t\t...obj,\n\t\t\t},\n\t\t});\n\t}\n}\n                    \n                \n\n\n        \n    \n\n    src/prisma/seed/01-user.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (prisma: PrismaClient) => {\n\tfor (const obj of Object.values(users)) {\n\t\tawait prisma.user.upsert({\n\t\t\twhere: { email: obj.email },\n\t\t\tupdate: {},\n\t\t\tcreate: {\n\t\t\t\t...obj,\n\t\t\t\tpassword: await bcrypt.hash(obj.password, 10),\n\t\t\t},\n\t\t});\n\t}\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Prisma.UserCreateInput[]\n\n                    \n                \n                \n                    \n                        Default value : [\n\t{\n\t\tname: \"PetLove\",\n\t\temail: \"petlove@bootcamp.com\",\n\t\tpassword: \"Petlove@123\",\n\t},\n]\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
